Index: app/src/main/java/com/dts/tom/Transacciones/CambioUbicacion/frm_cambio_ubicacion_ciega.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.dts.tom.Transacciones.CambioUbicacion;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.DialogInterface;\r\nimport android.graphics.Color;\r\nimport android.graphics.Typeface;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.text.InputType;\r\nimport android.util.Log;\r\nimport android.view.KeyEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Spinner;\r\nimport android.widget.TableRow;\r\nimport android.widget.TextView;\r\n\r\nimport com.dts.base.WebService;\r\nimport com.dts.base.XMLObject;\r\nimport com.dts.classes.Mantenimientos.Bodega.clsBeBodega_ubicacion;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_estado.clsBeProducto_estado;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_estado.clsBeProducto_estadoList;\r\nimport com.dts.classes.Mantenimientos.Producto.clsBeProducto;\r\nimport com.dts.classes.Mantenimientos.Producto.clsBeProductoList;\r\nimport com.dts.classes.Transacciones.CambioUbicacion.clsBeMotivo_ubicacion.clsBeMotivo_ubicacionList;\r\nimport com.dts.classes.Transacciones.Movimiento.Trans_movimientos.clsBeTrans_movimientos;\r\nimport com.dts.classes.Transacciones.Movimiento.USUbicStrucStage5.USUbicStrucStage5List;\r\nimport com.dts.classes.Transacciones.Stock.Stock.clsBeStock;\r\nimport com.dts.classes.Transacciones.Stock.Stock_res.clsBeVW_stock_res;\r\nimport com.dts.classes.Transacciones.Stock.Stock_res.clsBeVW_stock_resList;\r\nimport com.dts.tom.PBase;\r\nimport com.dts.tom.R;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\nimport static br.com.zbra.androidlinq.Linq.stream;\r\n\r\npublic class frm_cambio_ubicacion_ciega extends PBase {\r\n\r\n    private frm_cambio_ubicacion_ciega.WebServiceHandler ws;\r\n    private XMLObject xobj;\r\n    private ProgressDialog progress;\r\n\r\n    private EditText txtUbicOrigen, txtCodigoPrd, txtCantidad, txtUbicDestino,txtLicPlate, txtPosiciones, txtPeso;\r\n    private TextView lblUbicCompleta, lblDescProducto, lblLote, lblVence, lblEstadoDestino, lblCant,lblPesoEst, lblPeso,lblTituloForma,lblUbicCompDestino;\r\n    private Spinner cmbPresentacion, cmbLote, cmbVence, cmbEstadoOrigen, cmbEstadoDestino;\r\n    private Button btnGuardarCiega;\r\n    private TableRow trPeso;\r\n\r\n    private clsBeMotivo_ubicacionList pListBeMotivoUbicacion = new clsBeMotivo_ubicacionList();\r\n\r\n    private clsBeProducto cvProd = new clsBeProducto();\r\n    private clsBeProductoList productoList = new clsBeProductoList();\r\n\r\n    private clsBeVW_stock_res vStockRes = new clsBeVW_stock_res();\r\n    private clsBeVW_stock_resList stockResList = new clsBeVW_stock_resList();\r\n    private clsBeVW_stock_resList lotesList = new clsBeVW_stock_resList();\r\n    private clsBeVW_stock_resList venceList = new clsBeVW_stock_resList();\r\n    private clsBeVW_stock_resList presentacionList = new clsBeVW_stock_resList();\r\n    private clsBeVW_stock_resList productoEstadoOrigenList = new clsBeVW_stock_resList();\r\n\r\n    /*private clsBeProducto producto_ubicacion = new clsBeProducto();\r\n    private ArrayList<clsBeProducto> productoArrayList = new ArrayList<clsBeProducto>();\r\n    private ArrayList<clsBeVW_stock_res> fechaVenceArrayList = new ArrayList<clsBeVW_stock_res>();\r\n    private ArrayList<clsBeVW_stock_res> loteArrayList = new ArrayList<clsBeVW_stock_res>();\r\n    private clsBeProducto_estado producto_estado_origen = new clsBeProducto_estado();\r\n    private ArrayList<clsBeProducto_estado> productoEstadoOrigenArrayList = new ArrayList<clsBeProducto_estado>();\r\n    private clsBeProducto_estado producto_estado_destino = new clsBeProducto_estado();\r\n    private ArrayList<clsBeProducto_estado> productoEstadoDestinoArrayList = new ArrayList<clsBeProducto_estado>();\r\n    private clsBeProducto_Presentacion presentacion = new clsBeProducto_Presentacion();\r\n    private ArrayList<clsBeProducto_Presentacion> presentacionArrayList = new ArrayList<clsBeProducto_Presentacion>();*/\r\n\r\n    private clsBeProducto_estadoList productoEstadoDestinoList = new clsBeProducto_estadoList();\r\n\r\n    private USUbicStrucStage5List lUbicSug = new USUbicStrucStage5List();\r\n\r\n    private ArrayList<String> cmbPresentacionList = new ArrayList<String>();\r\n    private ArrayList<String> cmbLoteList = new ArrayList<String>();\r\n    private ArrayList<String> cmbVenceList = new ArrayList<String>();\r\n    private ArrayList<String> cmbEstadoOrigenList = new ArrayList<String>();\r\n    private ArrayList<String> cmbEstadoDestinoList = new ArrayList<String>();\r\n\r\n    private String lote = \"\", fechaVence = \"\";\r\n\r\n    private String  fechaVenceU;\r\n\r\n    private int cvUbicOrigID;\r\n    private int cvProdID;\r\n    private int cvPresID;\r\n    private String cvLote;\r\n    private String cvVence;\r\n    private int cvEstOrigen=0;\r\n    private int cvEstDestino;\r\n    private int cvUbicDestID=0;\r\n    private int cvStockID;\r\n    private String cvAtrib;\r\n    private int cvPropID;\r\n    private int cvUMBID;\r\n    private double vFactorPres;\r\n    private boolean validarDatos = false;\r\n    private boolean datosCorrectos = false;\r\n    private boolean vProcesar =false;\r\n\r\n    private boolean Es_Explosion = false;\r\n    private int vIdStockNuevo = 0;\r\n    private int vIdMovimientoNuevo= 0;\r\n    private int vPosiciones=0;\r\n\r\n    private boolean Existe_Lp=false;\r\n\r\n    private boolean EsPalletNoEstandar=false;\r\n    private boolean TienePosiciones=false;\r\n\r\n    private boolean escaneoPallet;\r\n\r\n    private clsBeTrans_movimientos gMovimientoDet;\r\n    private clsBeBodega_ubicacion bodega_ubicacion_destino;\r\n    private clsBeBodega_ubicacion bodega_ubicacion_origen;\r\n    private clsBeProducto_estado gProdEstado;\r\n    private clsBeVW_stock_res cvStockItem;\r\n    private clsBeVW_stock_res BeStockPallet;\r\n    private clsBeStock pStock;\r\n\r\n    private clsBeProducto BeProductoUbicacion;\r\n    private int IdProductoUbicacion;\r\n    private String vNuevoPalletId;\r\n    private String pLicensePlate;\r\n\r\n    private double vCantidadAUbicar, vCantidadDisponible, vPesoAUbicar, vPesoDisponible;\r\n\r\n    private TextToSpeech mTTS;\r\n    private String text = \"\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        try {\r\n            super.onCreate(savedInstanceState);\r\n            setContentView(R.layout.activity_frm_cambio_ubicacion_ciega);\r\n\r\n            super.InitBase();\r\n\r\n            ws = new frm_cambio_ubicacion_ciega.WebServiceHandler(frm_cambio_ubicacion_ciega.this, gl.wsurl);\r\n            xobj = new XMLObject(ws);\r\n\r\n            txtUbicOrigen = (EditText) findViewById(R.id.txtUbicOrigen);\r\n            txtCodigoPrd = (EditText) findViewById(R.id.txtCodigoPrd);\r\n            txtCantidad = (EditText) findViewById(R.id.txtCantidad);\r\n            txtUbicDestino = (EditText) findViewById(R.id.txtUbicDestino);\r\n            txtLicPlate = (EditText)findViewById(R.id.txtLipPlate);\r\n            txtPeso = (EditText) findViewById(R.id.txtPeso);\r\n\r\n            lblUbicCompleta = (TextView) findViewById(R.id.lblUbicCompleta);\r\n            lblDescProducto = (TextView) findViewById(R.id.lblDescProducto);\r\n            lblLote = (TextView) findViewById(R.id.lblLote);\r\n            lblVence = (TextView) findViewById(R.id.lblVence);\r\n            lblEstadoDestino = (TextView) findViewById(R.id.lblEstadoDestino);\r\n            lblCant = (TextView) findViewById(R.id.lblCant);\r\n            lblPesoEst = (TextView) findViewById(R.id.lblPesoEst);\r\n            lblPeso = (TextView) findViewById(R.id.lblPeso);\r\n            lblTituloForma = (TextView) findViewById(R.id.lblTituloForma);\r\n            lblUbicCompDestino = (TextView) findViewById(R.id.lblUbicCompDestino);\r\n\r\n            cmbPresentacion = (Spinner) findViewById(R.id.cmbPresentacion);\r\n            cmbLote = (Spinner) findViewById(R.id.cmbLote);\r\n            cmbVence = (Spinner) findViewById(R.id.cmbVence);\r\n            cmbEstadoOrigen = (Spinner) findViewById(R.id.cmbEstadoOrigen);\r\n            cmbEstadoDestino = (Spinner) findViewById(R.id.cmbEstadoDestino);\r\n\r\n            btnGuardarCiega = (Button) findViewById(R.id.btnGuardarCiega);\r\n\r\n            trPeso = (TableRow)findViewById(R.id.trPeso);\r\n\r\n            txtPosiciones = new EditText(this,null);\r\n            txtPosiciones.setInputType(InputType.TYPE_CLASS_NUMBER);\r\n\r\n            cmbEstadoDestino.setVisibility(gl.modo_cambio == 1 ? View.GONE : View.VISIBLE);\r\n            lblEstadoDestino.setVisibility(gl.modo_cambio == 1 ? View.GONE : View.VISIBLE);\r\n\r\n            lblTituloForma.setText(String.format(\"Cambio de %s\",(gl.modo_cambio==1?\"ubicaci√≥n N.D.\":\"estado N.D\")));\r\n\r\n            ProgressDialog(\"Cargando forma\");\r\n\r\n            setHandlers();\r\n\r\n            Load();\r\n\r\n        } catch (Exception ex) {\r\n            addlog(new Object() {\r\n            }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n            msgbox(new Object() {\r\n            }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Load() {\r\n\r\n        try {\r\n            if(gl.modo_cambio==1){\r\n                execws(1);\r\n            }else{\r\n                txtUbicOrigen.requestFocus();\r\n                progress.cancel();\r\n            }\r\n        } catch (Exception ex) {\r\n            addlog(new Object() {\r\n            }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n            msgbox(new Object() {\r\n            }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void setHandlers() {\r\n\r\n        cmbPresentacion.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n                try {\r\n\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n\r\n                    if (spinlabel!=null){\r\n                        spinlabel.setTextColor(Color.BLACK);\r\n                        spinlabel.setPadding(5, 0, 0, 0);\r\n                        spinlabel.setTextSize(18);\r\n                        spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                        cvPresID = Integer.valueOf( cmbPresentacion.getSelectedItem().toString().split(\" - \")[0].toString());\r\n                        LlenaLotes();\r\n                    }\r\n\r\n                } catch (Exception ex) {\r\n                    addlog(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n                    msgbox(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parentView) {\r\n                return;\r\n            }\r\n\r\n        });\r\n\r\n        cmbLote.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n                try {\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n\r\n                    if (spinlabel!=null){\r\n                        spinlabel.setTextColor(Color.BLACK);\r\n                        spinlabel.setPadding(5, 0, 0, 0);\r\n                        spinlabel.setTextSize(18);\r\n                        spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                        lote = stockResList.items.get(position).Lote;\r\n                        LlenaFechaVence();\r\n                    }\r\n\r\n                } catch (Exception ex) {\r\n                    addlog(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n                    msgbox(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parentView) {\r\n                return;\r\n            }\r\n\r\n        });\r\n\r\n        cmbVence.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n                try {\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n\r\n                    if (spinlabel!=null){\r\n                        spinlabel.setTextColor(Color.BLACK);\r\n                        spinlabel.setPadding(5, 0, 0, 0);\r\n                        spinlabel.setTextSize(18);\r\n                        spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                        fechaVence = stockResList.items.get(position).getFecha_Vence();\r\n\r\n                        LlenaEstadoOrigen();\r\n\r\n                    }\r\n\r\n                } catch (Exception ex) {\r\n                    addlog(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n                    msgbox(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parentView) {\r\n                return;\r\n            }\r\n\r\n        });\r\n\r\n        cmbEstadoOrigen.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n                try {\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n\r\n                    if (spinlabel!=null){\r\n                        spinlabel.setTextColor(Color.BLACK);\r\n                        spinlabel.setPadding(5, 0, 0, 0);\r\n                        spinlabel.setTextSize(18);\r\n                        spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                        cvEstOrigen = productoEstadoOrigenList.items.get(position).getIdProductoEstado();\r\n                    }\r\n\r\n                } catch (Exception ex) {\r\n                    addlog(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n                    msgbox(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parentView) {\r\n                return;\r\n            }\r\n\r\n        });\r\n\r\n        cmbEstadoDestino.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n                try {\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n\r\n                    if (spinlabel!=null){\r\n                        spinlabel.setTextColor(Color.BLACK);\r\n                        spinlabel.setPadding(5, 0, 0, 0);\r\n                        spinlabel.setTextSize(18);\r\n                        spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                        cvEstDestino = productoEstadoDestinoList.items.get(position).IdEstado;\r\n                    }\r\n\r\n                } catch (Exception ex) {\r\n                    addlog(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n                    msgbox(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parentView) {\r\n                return;\r\n            }\r\n\r\n        });\r\n\r\n        txtCodigoPrd.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if ((event.getAction() == KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER)) {\r\n                    llenaDatosProducto();\r\n                }\r\n\r\n                return false;\r\n            }\r\n        });\r\n\r\n        txtLicPlate.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if ((event.getAction() == KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER)) {\r\n\r\n                    inicializaTareaLP();\r\n\r\n                    Procesa_Lp();\r\n                }\r\n\r\n                return false;\r\n            }\r\n        });\r\n\r\n        txtUbicOrigen.setOnKeyListener(new View.OnKeyListener() {\r\n\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (event.getAction() == KeyEvent.ACTION_DOWN) {\r\n                    switch (keyCode) {\r\n                        case KeyEvent.KEYCODE_ENTER:\r\n                            inicializaTarea(false);\r\n                            validaOrigen();\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        txtUbicOrigen.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View v, boolean hasFocus) {\r\n                if(!hasFocus) {\r\n                    if (txtUbicOrigen.getText().toString().equals(\"\") ||\r\n                            txtUbicOrigen.getText().toString().isEmpty() ||\r\n                            txtUbicOrigen.getText().toString()==null){\r\n\r\n                        if(validarDatos){\r\n                            lblUbicCompleta.setText(\"\");\r\n                            mu.msgbox(\"Debe ingresar la ubicaci√≥n origen\");\r\n\r\n                            final Handler cbhandler = new Handler();\r\n                            cbhandler.postDelayed(new Runnable() {\r\n                                @Override\r\n                                public void run() {\r\n                                    txtUbicOrigen.requestFocus();\r\n                                }\r\n                            }, 500);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        txtUbicDestino.setOnKeyListener(new View.OnKeyListener() {\r\n\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (event.getAction() == KeyEvent.ACTION_DOWN) {\r\n                    switch (keyCode) {\r\n                        case KeyEvent.KEYCODE_ENTER:\r\n                            validaDestino();\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        txtUbicDestino.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View v, boolean hasFocus) {\r\n                if(!hasFocus) {\r\n                    if (txtUbicDestino.getText().toString().equals(\"\") ||\r\n                            txtUbicDestino.getText().toString().isEmpty() ||\r\n                            txtUbicDestino.getText().toString()==null){\r\n\r\n                        if (validarDatos){\r\n                            mu.msgbox(\"Debe ingresar la ubicaci√≥n destino\");\r\n\r\n                            final Handler cbhandler = new Handler();\r\n                            cbhandler.postDelayed(new Runnable() {\r\n                                @Override\r\n                                public void run() {\r\n                                    txtUbicDestino.requestFocus();\r\n                                }\r\n                            }, 500);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        txtCantidad.setOnKeyListener(new View.OnKeyListener() {\r\n\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (event.getAction() == KeyEvent.ACTION_DOWN) {\r\n                    switch (keyCode) {\r\n                        case KeyEvent.KEYCODE_ENTER:\r\n\r\n                            try {\r\n\r\n                                String Cantwithformat =txtCantidad.getText().toString();\r\n                                Cantwithformat = Cantwithformat.replace(\",\",\"\");\r\n\r\n                                if(Double.valueOf(Cantwithformat)>0) {\r\n                                    txtPeso.requestFocus();\r\n                                }\r\n                            } catch (NumberFormatException e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        txtPeso.setOnKeyListener(new View.OnKeyListener() {\r\n\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (event.getAction() == KeyEvent.ACTION_DOWN) {\r\n                    switch (keyCode) {\r\n                        case KeyEvent.KEYCODE_ENTER:\r\n\r\n                            try {\r\n\r\n                                String Cantwithformat =txtPeso.getText().toString();\r\n                                Cantwithformat = Cantwithformat.replace(\",\",\"\");\r\n\r\n                                if(Double.valueOf(Cantwithformat)>0) {\r\n                                    txtUbicDestino.requestFocus();\r\n                                }\r\n                            } catch (NumberFormatException e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n\r\n    private void LlenaPresentaciones() {\r\n\r\n        String valor;\r\n\r\n        try {\r\n\r\n            cmbPresentacionList.clear();\r\n\r\n            List AuxList = stream(stockResList.items)\r\n                    .where(c -> c.IdProducto == cvProdID)\r\n                    .toList();\r\n\r\n            presentacionList.items = AuxList;\r\n\r\n            for (int i = 0; i < presentacionList.items.size(); i++) {\r\n\r\n                valor = presentacionList.items.get(i).getIdPresentacion() + \" - \" +\r\n                        presentacionList.items.get(i).getNombre_Presentacion().toString();\r\n\r\n                if (cmbPresentacionList.indexOf(valor)==-1){\r\n                    cmbPresentacionList.add(valor);\r\n                }\r\n\r\n            }\r\n\r\n            ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, cmbPresentacionList);\r\n            dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n            cmbPresentacion.setAdapter(dataAdapter);\r\n\r\n            if (cmbPresentacionList.size() > 0) {\r\n\r\n                if (escaneoPallet && productoList !=null ){\r\n                    int sel = cmbPresentacionList.indexOf(BeStockPallet.getIdPresentacion() + \" - \" +\r\n                                                          BeStockPallet.getNombre_Presentacion());\r\n                    cmbPresentacion.setSelection(sel);\r\n                    cmbPresentacion.setEnabled(false);\r\n                }else{\r\n                    cmbPresentacion.setSelection(0);\r\n                    if (cmbPresentacionList.size() == 1){\r\n                        cmbPresentacion.setEnabled(false);\r\n                    }else{\r\n                        cmbPresentacion.setEnabled(true);\r\n                    }\r\n                }\r\n\r\n                cvPresID =Integer.valueOf( cmbPresentacion.getSelectedItem().toString().split(\" - \")[0].toString());\r\n\r\n            }else{\r\n                LlenaLotes();\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n            addlog(new Object() {\r\n            }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n            msgbox(new Object() {\r\n            }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void LlenaLotes() {\r\n\r\n        String valor;\r\n\r\n        try {\r\n\r\n            cmbLoteList.clear();\r\n\r\n                cvLote = \"\";\r\n\r\n                cmbLote.setVisibility(BeProductoUbicacion.Control_lote ? View.VISIBLE : View.GONE);\r\n                lblLote.setVisibility(BeProductoUbicacion.Control_lote ? View.VISIBLE : View.GONE);\r\n\r\n                if (BeProductoUbicacion.Control_lote) {\r\n\r\n                    try {\r\n\r\n                        List AuxList;\r\n\r\n                        //if (escaneoPallet && productoList != null) {\r\n                        //Quit√© esta validaci√≥n porque en stockResList ya est√° filtrado por LicensePlate\r\n\r\n                        AuxList = stream(stockResList.items)\r\n                                .where(c -> c.IdProducto == cvProdID)\r\n                                .where(c -> c.getIdPresentacion() == cvPresID)\r\n                                .toList();\r\n\r\n                        if (AuxList == null) {\r\n                            cvLote = \"\";\r\n                            LlenaFechaVence();\r\n                        } else {\r\n\r\n                            lotesList.items = AuxList;\r\n\r\n                            for (int i = 0; i < lotesList.items.size(); i++) {\r\n\r\n                                valor = lotesList.items.get(i).Lote;\r\n\r\n                                if (cmbLoteList.indexOf(valor)==-1){\r\n                                    cmbLoteList.add(valor);\r\n                                }\r\n                            }\r\n\r\n                            ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, cmbLoteList);\r\n                            dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                            cmbLote.setAdapter(dataAdapter);\r\n\r\n                            if (cmbLoteList.size() > 0) {\r\n                                cmbLote.setSelection(0);\r\n\r\n                                cvLote = cmbLote.getSelectedItem().toString();\r\n                            }\r\n                        }\r\n                    } catch (Exception ex) {\r\n                        cvLote = \"\";\r\n                        msgbox(\"Llena lote : \" + ex.getMessage());\r\n                        LlenaFechaVence();\r\n                    }\r\n\r\n                } else {\r\n                    LlenaFechaVence();\r\n                }\r\n\r\n        } catch (Exception ex) {\r\n            addlog(new Object() {\r\n            }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n            msgbox(new Object() {\r\n            }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void LlenaFechaVence() {\r\n\r\n        String valor;\r\n\r\n        try {\r\n\r\n            cmbVenceList.clear();\r\n\r\n            cvVence = \"01/01/1900\";\r\n\r\n            cmbVence.setVisibility(BeProductoUbicacion.Control_vencimiento ? View.VISIBLE : View.GONE);\r\n            lblVence.setVisibility(BeProductoUbicacion.Control_vencimiento ? View.VISIBLE : View.GONE);\r\n\r\n            if (BeProductoUbicacion.Control_vencimiento) {\r\n\r\n                try {\r\n\r\n                    Date currentTime = Calendar.getInstance().getTime();\r\n\r\n                    if (cmbLote.getAdapter()!=null && cmbLote.getAdapter().getCount()>0){\r\n                        cvLote = cmbLote.getSelectedItem().toString();\r\n                    }\r\n\r\n                    cvVence =app.strFecha(currentTime);\r\n\r\n                    List AuxList;\r\n\r\n                    if (BeProductoUbicacion.Control_lote) {\r\n                        //if (escaneoPallet && productoList != null) {\r\n                        //Quit√© esta validaci√≥n porque en stockResList ya est√° filtrado por LicensePlate\r\n\r\n                        AuxList = stream(stockResList.items)\r\n                                .where(c -> c.IdProducto == cvProdID)\r\n                                .where(c -> c.getIdPresentacion() == cvPresID)\r\n                                .where(c -> c.getLote() == cvLote)\r\n                                .toList();\r\n\r\n                    } else {\r\n                        //if (escaneoPallet && productoList != null) {\r\n                        //Quit√© esta validaci√≥n porque en stockResList ya est√° filtrado por LicensePlate\r\n\r\n                        AuxList = stream(stockResList.items)\r\n                                .where(c -> c.IdProducto == cvProdID)\r\n                                .where(c -> c.getIdPresentacion() == cvPresID)\r\n                                .toList();\r\n                    }\r\n\r\n                    if (AuxList == null) {\r\n                        cvVence = \"01/01/1900\";\r\n                        LlenaEstadoOrigen();\r\n                    } else {\r\n\r\n                        venceList.items = AuxList;\r\n\r\n                        for (int i = 0; i < venceList.items.size(); i++) {\r\n\r\n                            valor =app.strFecha(venceList.items.get(i).Fecha_Vence);\r\n\r\n                            if (cmbVenceList.indexOf(valor)==-1){\r\n                                cmbVenceList.add(valor);\r\n                            }\r\n                        }\r\n\r\n                        ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, cmbVenceList);\r\n                        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                        cmbVence.setAdapter(dataAdapter);\r\n\r\n                        if (cmbVenceList.size() > 0) {\r\n                            cmbVence.setSelection(0);\r\n                            cvVence = cmbVence.getSelectedItem().toString();\r\n                        }\r\n                    }\r\n                } catch (Exception ex) {\r\n                    cvVence = \"01/01/1900\";\r\n                    msgbox(\"Llena vence : \" + ex.getMessage());\r\n                    LlenaEstadoOrigen();\r\n                }\r\n\r\n\r\n            } else {\r\n               LlenaEstadoOrigen();\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n            addlog(new Object() {\r\n            }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n            msgbox(new Object() {\r\n            }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void LlenaEstadoOrigen() {\r\n\r\n        String valor;\r\n\r\n        try {\r\n\r\n            cmbEstadoOrigenList.clear();\r\n\r\n            List AuxList;\r\n\r\n            if (BeProductoUbicacion.Control_vencimiento && !cvVence.equals(\"01/01/1900\")) {\r\n\r\n                if (BeProductoUbicacion.Control_lote) {\r\n\r\n                    AuxList = stream(stockResList.items)\r\n                            .where(c -> c.IdProducto == cvProdID)\r\n                            .where(c -> c.getIdPresentacion() == cvPresID)\r\n                            .where(c -> c.getLote() == cvLote)\r\n                            .where(c -> (app.strFecha(c.Fecha_Vence).equals(cvVence)))\r\n                            .toList();\r\n\r\n                } else {\r\n\r\n                    AuxList = stream(stockResList.items)\r\n                            .where(c -> c.IdProducto == cvProdID)\r\n                            .where(c -> c.getIdPresentacion() == cvPresID)\r\n                            .where(c -> (app.strFecha(c.Fecha_Vence).equals(cvVence)))\r\n                            .toList();\r\n                }\r\n\r\n            }else{\r\n\r\n                if (BeProductoUbicacion.Control_lote) {\r\n\r\n                    AuxList = stream(stockResList.items)\r\n                            .where(c -> c.IdProducto == cvProdID)\r\n                            .where(c -> c.getIdPresentacion() == cvPresID)\r\n                            .where(c -> c.getLote() == cvLote)\r\n                            .toList();\r\n\r\n                } else {\r\n\r\n                    AuxList = stream(stockResList.items)\r\n                            .where(c -> c.IdProducto == cvProdID)\r\n                            .where(c -> c.getIdPresentacion() == cvPresID)\r\n                            .toList();\r\n                }\r\n\r\n            }\r\n\r\n            if (AuxList == null) {\r\n                cvEstOrigen = 0;\r\n                muestraCantidad();\r\n            } else {\r\n\r\n                productoEstadoOrigenList.items = AuxList;\r\n\r\n                for (int i = 0; i < productoEstadoOrigenList.items.size(); i++) {\r\n\r\n                    valor = productoEstadoOrigenList.items.get(i).getIdProductoEstado() + \" - \" +\r\n                            productoEstadoOrigenList.items.get(i).getNomEstado();\r\n\r\n                    if (cmbEstadoOrigenList.indexOf(valor)==-1){\r\n                        cmbEstadoOrigenList.add(valor);\r\n                    }\r\n                }\r\n\r\n                ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, cmbEstadoOrigenList);\r\n                dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                cmbEstadoOrigen.setAdapter(dataAdapter);\r\n\r\n                if (cmbEstadoOrigenList.size() > 0) {\r\n\r\n                    cmbEstadoOrigen.setSelection(0);\r\n                    cvEstOrigen = Integer.valueOf(cmbEstadoOrigen.getSelectedItem().toString().split(\" - \")[0].toString());\r\n                    muestraCantidad();\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n            cvEstOrigen = 0;\r\n            muestraCantidad();\r\n\r\n            addlog(new Object() {}.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void LlenaEstadoDestino(int idPropietario) {\r\n        try {\r\n            cmbEstadoDestinoList.clear();\r\n\r\n            for (int i = 0; i < productoEstadoDestinoList.items.size(); i++) {\r\n                cmbEstadoDestinoList.add(productoEstadoDestinoList.items.get(i).Nombre);\r\n            }\r\n\r\n            ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, cmbEstadoDestinoList);\r\n            dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n            cmbEstadoDestino.setAdapter(dataAdapter);\r\n\r\n            if (cmbEstadoDestinoList.size() > 0) cmbEstadoDestino.setSelection(0);\r\n\r\n            if (escaneoPallet && productoList != null) {\r\n                //LLama este procedimiento del WS Get_Productos_By_IdUbicacion_And_LicPlate\r\n                execws(6);\r\n            } else {\r\n                //LLama este procedimiento del WS Get_Productos_By_IdUbicacion\r\n                execws(7);\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            mu.msgbox(e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Procesa_Lp() {\r\n        try {\r\n\r\n            progress.setMessage(\"Cargando datos del producto\");\r\n            progress.show();\r\n\r\n            String pbarra;\r\n\r\n            pbarra = txtCodigoPrd.getText().toString();\r\n\r\n            cvLote = \"\";\r\n            cvPresID = 0;\r\n            cvEstOrigen = 0;\r\n            cvProdID = 0;\r\n            cvVence = \"01/01/1900\";\r\n\r\n            String vStarWithParameter = \"$\";\r\n\r\n            if (!txtLicPlate.getText().toString().isEmpty()) {\r\n\r\n               escaneoPallet = true;\r\n\r\n                pLicensePlate = txtLicPlate.getText().toString().replace(\"$\", \"\");\r\n\r\n                //Llama al m√©todo del WS Existe_Lp_In_Stock\r\n                execws(18);\r\n\r\n                progress.cancel();\r\n\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n            progress.cancel();\r\n            msgbox(\"Error \" + ex.getMessage());\r\n        }\r\n        progress.cancel();\r\n    }\r\n\r\n    private void llenaDatosProducto() {\r\n        try {\r\n\r\n            progress.setMessage(\"Cargando datos del producto\");\r\n            progress.show();\r\n\r\n            String pbarra;\r\n\r\n            pbarra = txtCodigoPrd.getText().toString();\r\n\r\n            cvLote = \"\";\r\n            cvPresID = 0;\r\n            cvEstOrigen = 0;\r\n            cvProdID = 0;\r\n            cvVence = \"01/01/1900\";\r\n\r\n            String vStarWithParameter = \"$\";\r\n\r\n            //Comentario: La barra de pallet puede comenzar con $ y no con (01)\r\n            if (txtLicPlate.getText().toString().startsWith(\"$\") ||\r\n                    txtLicPlate.getText().toString().startsWith(\"(01)\") ||\r\n                    txtLicPlate.getText().toString().startsWith(vStarWithParameter)) {\r\n\r\n                //Es una barra de pallet v√°lida por tama√±o\r\n                int vLengthBarra = txtLicPlate.getText().toString().length();\r\n\r\n               // if (vLengthBarra >= 16) {\r\n\r\n                    escaneoPallet = true;\r\n\r\n                    pLicensePlate = txtLicPlate.getText().toString().replace(\"$\", \"\");\r\n\r\n                    //Llama al m√©todo del WS Get_Stock_By_Lic_Plate_And_Codigo\r\n\r\n                    execws(17);\r\n\r\n                //}\r\n\r\n            } else {\r\n                escaneoPallet = false;\r\n\r\n                //Llama al m√©todo del WS Get_BeProducto_By_Codigo_For_HH\r\n                execws(3);\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n            progress.cancel();\r\n            msgbox(\"Error \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void muestraCantidad(){\r\n\r\n        List AuxList;\r\n        Date currentTime = Calendar.getInstance().getTime();\r\n\r\n        Calendar calendar = Calendar.getInstance();\r\n        calendar.setTime(currentTime);\r\n        calendar.add(Calendar.YEAR, 1);\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo la cantidad disponible del producto\");\r\n            progress.show();\r\n\r\n            if (escaneoPallet && productoList != null) {\r\n                if(cmbVence.getAdapter() != null){\r\n                    cvVence = cmbVence.getSelectedItem().toString();\r\n                    if (cmbLote.getAdapter().getCount() == 1) {\r\n                        cmbVence.setEnabled(false);\r\n                    }\r\n                } else{\r\n                    cvVence = \"01/01/1900\";\r\n                }\r\n            }else {\r\n                if(cmbVence.getAdapter() != null){\r\n                    cvVence = cmbVence.getSelectedItem().toString();\r\n                    cmbVence.setEnabled(true);\r\n                }  else{\r\n                    cvVence = \"01/01/1900\";\r\n                }\r\n            }\r\n\r\n        }catch(Exception ex){\r\n            cvVence = app.strFecha(calendar.getTime());\r\n        }\r\n\r\n        try {\r\n            if (escaneoPallet & productoList != null) {\r\n                if(cmbEstadoOrigen.getAdapter() != null){\r\n                    cvEstOrigen = BeStockPallet.IdProductoEstado;\r\n                    if (cmbEstadoOrigen.getAdapter().getCount() == 1) {\r\n                        cmbEstadoOrigen.setEnabled(false);\r\n                    }\r\n                }else{\r\n                    cvEstOrigen =0;\r\n                }\r\n\r\n            }else {\r\n\r\n                if(cmbEstadoOrigen.getAdapter() != null){\r\n\r\n                    if (!cmbEstadoOrigen.getSelectedItem().toString().isEmpty()){\r\n                        cvEstOrigen = Integer.valueOf(cmbEstadoOrigen.getSelectedItem().toString().split(\" - \")[0]);\r\n                    }else {\r\n                        cvEstOrigen =0;\r\n                    }\r\n\r\n                    cmbEstadoOrigen.setEnabled(true);\r\n                }else{\r\n                    cvEstOrigen =0;\r\n                }\r\n\r\n            }\r\n        }catch(Exception ex){\r\n            cvEstOrigen =0;\r\n        }\r\n\r\n        vCantidadAUbicar =0;\r\n        vCantidadDisponible =0;\r\n        lblCant.setText(\"Max : \" + mu.frmdecimal(vCantidadDisponible, 6));\r\n\r\n        if (gl.gCProdAnterior.equals(txtCodigoPrd.getText())  && gl.gCUbicAnterior.equals(txtUbicOrigen.getText().toString()))\r\n        {\r\n            try{\r\n                int IndexAux;\r\n\r\n                if (gl.gCEstadoAnterior != -1 && cmbEstadoOrigen.getAdapter()!=null  && cmbEstadoOrigen.getAdapter().getCount()>0) {\r\n                    IndexAux = cmbEstadoOrigenList.indexOf(gl.gCEstadoAnterior+ \" - \" + gl.gCNomEstadoAnterior);\r\n                    cmbEstadoOrigen.setSelection(IndexAux);\r\n                }\r\n\r\n                if (gl.gCFechaAnterior.equals(\"01/01/1900\") && cmbVence.getAdapter()!=null  && cmbVence.getAdapter().getCount()>0) {\r\n                    IndexAux = cmbVenceList.indexOf(gl.gCFechaAnterior);\r\n                    cmbVence.setSelection(IndexAux);\r\n                }\r\n\r\n                if (!gl.gCLoteAnterior.isEmpty() && cmbLote.getAdapter()!=null  && cmbLote.getAdapter().getCount()>0) {\r\n                    IndexAux = cmbLoteList.indexOf(gl.gCLoteAnterior);\r\n                    cmbLote.setSelection(IndexAux);\r\n                }\r\n\r\n                if (gl.gCPresAnterior != -1 && cmbPresentacion.getAdapter()!=null && cmbPresentacion.getAdapter().getCount()>0) {\r\n                    IndexAux = cmbPresentacionList.indexOf( gl.gCPresAnterior + \" - \" + gl.gCNomPresAnterior);\r\n                    cmbPresentacion.setSelection(IndexAux);\r\n                }\r\n\r\n            }catch(Exception ex){\r\n                addlog(new Object() {}.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n                msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n            }\r\n        }\r\n\r\n        try{\r\n\r\n            //#CKFK 20200414 quit√© la condiciones de si se hab√≠a escaneado un pallet porque el license plate se filtra al inicio\r\n            //cuando se obtiene el stockResList\r\n            AuxList = stream(stockResList.items)\r\n                    .where(c -> c.IdProducto == cvProdID)\r\n                    .where(c -> c.IdPresentacion == cvPresID)\r\n                    .where(c -> c.Lote.equals(cvLote))\r\n                    .where(c -> c.Atributo_variante_1 == (cvAtrib == null ? \"\" : cvAtrib))\r\n                    .where(c -> (cvEstOrigen > 0 ? c.IdProductoEstado == cvEstOrigen : c.IdProductoEstado >= 0))\r\n                    .where(c -> (BeProductoUbicacion.Control_vencimiento?app.strFecha(c.Fecha_Vence).equals(cvVence):1==1))\r\n                    .toList();\r\n\r\n            if (AuxList == null) {\r\n                return;\r\n            }\r\n\r\n        }catch(Exception ex){\r\n            msgbox(\"Llena cant : \" + ex.getMessage()) ;\r\n            return;\r\n        }\r\n\r\n        try{\r\n\r\n            clsBeVW_stock_resList tmpStockResList = new clsBeVW_stock_resList();\r\n\r\n            tmpStockResList.items = AuxList;\r\n\r\n            if (tmpStockResList.items.size() >0){\r\n                cvStockID = tmpStockResList.items.get(0).getIdStock();\r\n                vCantidadAUbicar =tmpStockResList.items.get(0).getCantidadUmBas() - tmpStockResList.items.get(0).CantidadReservadaUMBas;\r\n                vFactorPres = (tmpStockResList.items.get(0).getFactor()==0?1:tmpStockResList.items.get(0).getFactor());\r\n                vPesoAUbicar = tmpStockResList.items.get(0).getPeso();\r\n            }else{\r\n                vCantidadAUbicar = 0;\r\n                cvStockID =0;\r\n            }\r\n\r\n            if( escaneoPallet && productoList != null) {\r\n\r\n                if(BeStockPallet.Factor >0)\r\n                {\r\n                    vCantidadAUbicar = (vCantidadAUbicar / BeStockPallet.Factor);\r\n                }\r\n            }else if (cvPresID != 0) {\r\n                if( vFactorPres >0){\r\n                    vCantidadAUbicar = (vCantidadAUbicar / vFactorPres);\r\n                }\r\n            }\r\n\r\n            vCantidadDisponible =vCantidadAUbicar;\r\n\r\n            if (vCantidadDisponible==0){\r\n                msgbox(\"No hay existencias disponibles de este producto en esta ubicaci√≥n o las existentes est√°n reservadas\");\r\n                inicializaTarea(false);\r\n                return;\r\n            }else{\r\n                lblCant.setText(mu.frmdecimal(vCantidadDisponible, gl.gCantDecDespliegue));\r\n                txtCantidad.setText(mu.frmdecimal(vCantidadAUbicar, gl.gCantDecDespliegue));\r\n                txtPeso.setText(mu.frmdecimal(vPesoAUbicar, gl.gCantDecDespliegue));\r\n                txtCantidad.selectAll();\r\n            }\r\n\r\n            txtUbicDestino.setEnabled(true);\r\n            txtCantidad.setEnabled(true);\r\n            txtPeso.setEnabled(true);\r\n\r\n            txtCantidad.requestFocus();\r\n\r\n            fechaVenceU = app.strFechaXMLCombo(cvVence);\r\n            execws(15);\r\n\r\n        }catch(Exception ex){\r\n            msgbox(\"Llena cantidad \" + ex.getMessage());\r\n        }finally {\r\n            progress.cancel();\r\n        }\r\n\r\n    }\r\n\r\n    public void ProgressDialog(String mensaje){\r\n        progress=new ProgressDialog(this);\r\n        progress.setMessage(mensaje);\r\n        progress.setProgressStyle(ProgressDialog.STYLE_SPINNER);\r\n        progress.setIndeterminate(true);\r\n        progress.setProgress(0);\r\n        progress.show();\r\n    }\r\n\r\n    private void execws(int callbackvalue) {\r\n        ws.callback=callbackvalue;\r\n        ws.execute();\r\n    }\r\n\r\n    @Override\r\n    public void wsCallBack(Boolean throwing,String errmsg,int errlevel) {\r\n        try {\r\n            if (throwing) throw new Exception(errmsg);\r\n\r\n            switch (ws.callback) {\r\n                case 1:\r\n                    processUbicRecepcion();\r\n                    break;\r\n                case 2:\r\n                    processMotivosUbiHH();\r\n                    break;\r\n                case 3:\r\n                    processProducto();\r\n                    break;\r\n                case 4:\r\n                    processProdEstado();\r\n                    break;\r\n                case 5:\r\n                    processStockLP();\r\n                    break;\r\n                case 6:\r\n                    processProductoUbicLP();\r\n                    break;\r\n                case 7:\r\n                    processProductoUbic();\r\n                    break;\r\n                case 8:\r\n                    processNuevoCorrelativoLP();\r\n                    break;\r\n                case 9:\r\n                    processIdNuevoPallet();\r\n                    break;\r\n                case 10:\r\n                    processEstadosProp();\r\n                    break;\r\n                case 11:\r\n                    processUbicOrigen();\r\n                    break;\r\n                case 12:\r\n                    processUbicDestino();\r\n                    break;\r\n                case 13:\r\n                    processCambio();\r\n                    break;\r\n                case 14:\r\n                    processCambioUbicEstHH();\r\n                    break;\r\n                case 15:\r\n                    processUbicacionDestSugerida();\r\n                    break;\r\n                case 16:\r\n                    processUbicDestinoSug();\r\n                    break;\r\n                case 17:\r\n                    processStockLP_AndCodigo();\r\n                    break;\r\n                case 18:\r\n                    processExisteLp();\r\n                    break;\r\n                case 19:\r\n                    processPalletNoEstandar();\r\n                    break;\r\n                case 20:\r\n                    processTienePosiciones();\r\n                    break;\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n\r\n    public class WebServiceHandler extends WebService {\r\n\r\n        public WebServiceHandler(PBase Parent,String Url) {\r\n            super(Parent,Url);\r\n        }\r\n\r\n        @Override\r\n        public void wsExecute(){\r\n            try {\r\n                switch (ws.callback) {\r\n                    case 1://Obtiene la ubicacion por defecto de la recepci√≥n para el cambio de ubicacion o estado ciego\r\n                        callMethod(\"Get_IdUbic_Ciega_Recepcion_By_IdBodega\",\"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 2://Obtiene los motivos de ubicaci√≥n\r\n                        callMethod(\"Get_Motivos_Ubicacion_For_HH\");\r\n                        break;\r\n                    case 3://Obtiene el producto\r\n                        callMethod(\"Get_BeProducto_By_Codigo_For_HH\",\"pCodigo\",txtCodigoPrd.getText().toString(),\r\n                                \"IdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 4://Obtiene el estado del producto\r\n                        callMethod(\"Get_Single_By_IdEstado\",\"pIdEstado\",gl.tareadet.IdEstadoDestino);\r\n                        break;\r\n                    case 5://Obtiene el producto que coincide con el License Plate ingresado en una bodega\r\n                        callMethod(\"Get_Stock_By_Lic_Plate\",\"pLicensePlate\",pLicensePlate,\r\n                                \"pIdBodega\", gl.IdBodega);\r\n                        break;\r\n                    case 6://Obtiene el stock de un producto en una Ubicacion con un License Plate\r\n                        callMethod(\"Get_Productos_By_IdUbicacion_And_LicPlate\",\r\n                                \"pIdUbicacion\", txtUbicOrigen.getText().toString(),\r\n                                \"pIdProductoBodega\",BeProductoUbicacion.IdProductoBodega,\r\n                                \"pLicPlate\",BeStockPallet.Lic_plate);\r\n\r\n                        break;\r\n                    case 7://Obtiene el stock de un producto en una ubicacion\r\n                        callMethod(\"Get_Productos_By_IdUbicacion\",\r\n                                \"pIdUbicacion\", txtUbicOrigen.getText().toString(),\r\n                                \"pIdProductoBodega\",BeProductoUbicacion.IdProductoBodega);\r\n                        break;\r\n                    case 8://Obtiene el nuevo correlativo de un License Plate\r\n                        callMethod(\"Get_Nuevo_Correlativo_LicensePlate\",\r\n                                \"pIdEmpresa\", gl.IdEmpresa,\r\n                                \"pIdBodega\",gl.IdBodega,\r\n                                \"pIdPropietario\",BeStockPallet.IdPropietario,\r\n                                \"pIdProducto\",BeStockPallet.IdProducto);\r\n\r\n                        break;\r\n                    case 9://Actualiza la tabla trans_movimientos\r\n                        callMethod(\"Set_Nuevo_Pallet_Id\",\r\n                                \"pIdBodega\",gl.IdBodega,\r\n                                \"pIdUsuario\",gl.OperadorBodega.getIdOperador(),\r\n                                \"pLicPlateAnt\",BeStockPallet.getLic_plate(),\r\n                                \"pLicPlateNuevo\", vNuevoPalletId,\r\n                                \"pIdStockNuevo\", vIdStockNuevo,\r\n                                \"pIdMovimientoNuevo\",vIdMovimientoNuevo);\r\n                        break;\r\n                    case 10://Obtiene los estados por propietario\r\n                        callMethod(\"Get_Estados_By_IdPropietario\",\r\n                                \"pIdPropietario\",BeProductoUbicacion.getIdPropietario());\r\n                        break;\r\n                    case 11://Valida la ubicaci√≥n origen\r\n                        callMethod(\"Get_Ubicacion_By_Codigo_Barra_And_IdBodega\",\r\n                                \"pBarra\",txtUbicOrigen.getText().toString(),\r\n                                \"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 12://Valida la ubicaci√≥n destino\r\n                        callMethod(\"Get_Ubicacion_By_Codigo_Barra_And_IdBodega\",\"pBarra\",txtUbicDestino.getText().toString(),\r\n                                \"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 13:\r\n                        callMethod(\"Actualizar_Trans_Ubic_HH_Det\",\"oBeTrans_ubic_hh_det\", gl.tareadet,\r\n                                \"pMovimiento\",gMovimientoDet);\r\n                        break;\r\n                    case 14:\r\n                        //#CKFK 20201229 Agregu√© campo Pallet_No_Estandar en la vista de stock_res\r\n                        callMethod(\"Aplica_Cambio_Estado_Ubic_HH\",\r\n                                \"pMovimiento\",gMovimientoDet,\r\n                                \"pStockRes\",vStockRes,\r\n                                \"pIdStockNuevo\",vIdStockNuevo,\r\n                                \"pIdMovimientoNuevo\",vIdMovimientoNuevo,\r\n                                \"pPosiciones\",vPosiciones);\r\n                        break;\r\n                    case 15:\r\n                        callMethod(\"ml_get_ubicacion_sugerida\",\"pIdProducto\",cvProdID,\r\n                                \"pIdBodega\",gl.IdBodega,\r\n                                \"pIdProductoBodega\",cvProd.IdProductoBodega,\r\n                                \"pLote\",cvLote,\r\n                                \"pFechaVence\",fechaVenceU,\r\n                                \"pIdProductoEstado\",cvEstOrigen,\r\n                                \"pIdUmBas\",cvUMBID,\r\n                                \"pIdPresentacion\",cvPresID);\r\n                        break;\r\n                    case 16://Obtiene descripci√≥n de la ubicaci√≥n destino sugerida\r\n                        callMethod(\"Get_Ubicacion_By_Codigo_Barra_And_IdBodega\",\r\n                                \"pBarra\",txtUbicDestino.getText().toString(),\r\n                                \"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 17://Obtiene el producto que coincide con el License Plate ingresado en una bodega\r\n                        callMethod(\"Get_Stock_By_Lic_Plate_And_Codigo\",\"pLicensePlate\",pLicensePlate,\"pCodigo\",txtCodigoPrd.getText().toString(),\r\n                                \"pIdBodega\", gl.IdBodega);\r\n                        break;\r\n                    case 18:\r\n                        callMethod(\"Existe_Lp_In_Stock\",\"pLic_Plate\",pLicensePlate);\r\n                        break;\r\n                    case 19:\r\n                        callMethod(\"Es_Pallet_No_Estandar\",\"pStock\",pStock);\r\n                        break;\r\n                    case 20:\r\n                        callMethod(\"Tiene_Posiciones\",\"pStock\",pStock);\r\n                        break;\r\n                }\r\n\r\n            } catch (Exception e) {\r\n                error=e.getMessage();errorflag =true;msgbox(error);\r\n                btnGuardarCiega.setVisibility(View.VISIBLE);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void processMotivosUbiHH(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo Motivos de ubicaci√≥n en HH\");\r\n\r\n            pListBeMotivoUbicacion = xobj.getresult(clsBeMotivo_ubicacionList.class,\"Get_Motivos_Ubicacion_For_HH\");\r\n\r\n        } catch (Exception e) {\r\n            msgbox(new Object() {\r\n            }.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processUbicRecepcion(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo la ubicaci√≥n por defecto de la recepci√≥n\");\r\n            progress.show();\r\n\r\n            cvUbicOrigID = (Integer) xobj.getSingle(\"Get_IdUbic_Ciega_Recepcion_By_IdBodegaResult\",int.class);\r\n\r\n            if (cvUbicOrigID > 0){\r\n                txtUbicOrigen.setText(String.valueOf(cvUbicOrigID));\r\n                validaOrigen();\r\n            }else{\r\n                txtUbicOrigen.setText(\"\");\r\n                progress.cancel();\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processProdEstado(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo el estado del producto\");\r\n            progress.show();\r\n\r\n            gProdEstado = xobj.getresult(clsBeProducto_estado.class,\"Get_Single_By_IdEstado\");\r\n\r\n            if (gProdEstado != null){\r\n                txtUbicDestino.setText(gProdEstado.Nombre);\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processUbicOrigen(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Validando ubicaci√≥n\");\r\n            progress.show();\r\n\r\n            bodega_ubicacion_origen = xobj.getresult(clsBeBodega_ubicacion.class,\"Get_Ubicacion_By_Codigo_Barra_And_IdBodega\");\r\n\r\n            if (bodega_ubicacion_origen == null)\r\n            {\r\n                txtUbicOrigen.selectAll();\r\n                txtUbicOrigen.requestFocus();\r\n                throw new Exception(\"Ubicaci√≥n no v√°lida\");\r\n            }else{\r\n                cvUbicOrigID=bodega_ubicacion_origen.getIdUbicacion();\r\n                lblUbicCompleta.setText(bodega_ubicacion_origen.getDescripcion());\r\n            }\r\n\r\n            if (validarDatos){\r\n\r\n                datosCorrectos=true;\r\n\r\n                if (cvUbicOrigID == 0) {\r\n                    msgbox(\"Ubicaci√≥n origen no v√°lida\");\r\n                    txtUbicOrigen.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if (cvProdID == 0) {\r\n                    msgbox(\"Producto no v√°lido\");\r\n                    txtCodigoPrd.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if (vCantidadDisponible == 0) {\r\n                    msgbox(\"Cantidad disponible es 0, no se puede realizar el movimiento\");\r\n                    txtCodigoPrd.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if (gl.modo_cambio==2) {\r\n                    if (cvEstDestino == 0){\r\n                        msgbox(\"Estado destino incorrecto\");\r\n                        cmbEstadoDestino.requestFocus();\r\n                        datosCorrectos = false;\r\n                    }\r\n                }\r\n\r\n                vCantidadAUbicar = Double.parseDouble(txtCantidad.getText().toString().replace(\",\",\"\"));\r\n                vCantidadDisponible = Double.parseDouble(lblCant.getText().toString().replace(\",\",\"\"));\r\n\r\n                if (vCantidadAUbicar<0) {\r\n                    mu.msgbox(\"La cantidad no puede ser negativa\");\r\n                    txtCantidad.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if (vCantidadAUbicar==0) {\r\n                    msgbox(\"La cantidad debe ser mayor que 0\");\r\n                    txtCantidad.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if (vCantidadAUbicar> vCantidadDisponible) {\r\n                    msgbox(\"Cantidad incorrecta\") ;\r\n                    txtCantidad.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if(cvUbicDestID == 0){\r\n                    msgbox(\"La ubicaci√≥n de destino no puede ser vac√≠a\");\r\n                    txtUbicDestino.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if ((cvUbicOrigID == cvUbicDestID) && (gl.modo_cambio ==1)){\r\n                    msgbox(\"La ubicaci√≥n de destino coincide con la de origen\");\r\n                    txtUbicDestino.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if (!datosCorrectos) return;\r\n\r\n                progress.cancel();\r\n                msgAskAplicar((gl.modo_cambio ==1? \"Mover producto a ubicaci√≥n: \" + bodega_ubicacion_destino.Descripcion: \"Aplicar cambio de estado?\"));\r\n\r\n            }else{\r\n                progress.cancel();\r\n                txtLicPlate.requestFocus();\r\n                txtLicPlate.selectAll();\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n    }\r\n\r\n    private void processUbicDestino(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Validando ubicaci√≥n\");\r\n            progress.show();\r\n\r\n            bodega_ubicacion_destino = xobj.getresult(clsBeBodega_ubicacion.class,\"Get_Ubicacion_By_Codigo_Barra_And_IdBodega\");\r\n\r\n            if (bodega_ubicacion_destino == null){\r\n                vProcesar = false;\r\n                cvUbicDestID = 0;\r\n                txtUbicDestino.selectAll();\r\n                txtUbicDestino.requestFocus();\r\n                throw new Exception(\"Ubicaci√≥n destino incorrecta\");\r\n            }else{\r\n                cvUbicDestID=bodega_ubicacion_destino.getIdUbicacion();\r\n                lblUbicCompDestino.setText(bodega_ubicacion_destino.getDescripcion());\r\n\r\n                if(gl.modo_cambio==2 && !vProcesar){\r\n                    progress.cancel();\r\n                    cmbEstadoDestino.requestFocus();\r\n                }else{\r\n                    datosOk();\r\n                }\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processUbicDestinoSug(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo descripci√≥n de la ubicaci√≥n destino sugerida\");\r\n            progress.show();\r\n\r\n            bodega_ubicacion_destino = xobj.getresult(clsBeBodega_ubicacion.class,\"Get_Ubicacion_By_Codigo_Barra_And_IdBodega\");\r\n\r\n            if (bodega_ubicacion_destino == null){\r\n                throw new Exception(\"Ubicaci√≥n destino sugerida incorrecta\");\r\n            }else{\r\n\r\n                cvUbicDestID=bodega_ubicacion_destino.getIdUbicacion();\r\n                lblUbicCompDestino.setText(bodega_ubicacion_destino.getDescripcion());\r\n\r\n                if (bodega_ubicacion_destino.getTramo().getEs_Rack()){\r\n\r\n                    //#CKFK 20210202: voice ubicaci√≥n\r\n                    mTTS = new TextToSpeech(this, new TextToSpeech.OnInitListener() {\r\n                        @Override\r\n                        public void onInit(int status) {\r\n                            if(status == TextToSpeech.SUCCESS){\r\n                                Locale locSpanish = new Locale(\"spa\", \"MEX\");\r\n                                int result =mTTS.setLanguage(locSpanish);\r\n                                if(result == TextToSpeech.LANG_MISSING_DATA || result == TextToSpeech.LANG_NOT_SUPPORTED){\r\n                                    Log.e(\"tts\",\"Lenguaje no soportado :(\");\r\n                                }else{\r\n\r\n                                    String[] cadena_ubicacion = bodega_ubicacion_destino.getDescripcion().split(\"-\");\r\n                                    String rack = cadena_ubicacion[0].trim().substring(1);\r\n                                    String columna = cadena_ubicacion[1].trim().substring(1);\r\n                                    String tramo = cadena_ubicacion[2].trim().substring(1);\r\n                                    String nivel = cadena_ubicacion[3].trim().substring(1);\r\n                                    String pos = cadena_ubicacion[4].trim().substring(3);\r\n                                    String ubicacion = cadena_ubicacion[5].trim().substring(1);\r\n\r\n                                    text = \"Lleve producto a \" + rack + \".\"\r\n                                         + \" Tramo: \" + tramo + \".\"\r\n                                         + \" Columna: \" + columna + \".\"\r\n                                         + \" Nivel: \" + nivel + \".\"\r\n                                         + \" Posici√≥n: \" + pos + \".\"\r\n                                         + \" Escanee: \" + ubicacion;\r\n\r\n                                    float speed = 1f;\r\n                                    float pitch = 1f;\r\n                                    mTTS.setPitch(pitch);\r\n                                    mTTS.setSpeechRate(speed);\r\n\r\n                                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n                                        mTTS.speak(text,TextToSpeech.QUEUE_FLUSH,null,null);\r\n                                    } else {\r\n                                        mTTS.speak(text, TextToSpeech.QUEUE_FLUSH, null);\r\n                                    }\r\n                                }\r\n                            }else{\r\n                                Log.e(\"tts\",\"No he podido inicializar el TTS :(\");\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                }\r\n\r\n            }\r\n\r\n            txtCantidad.requestFocus();\r\n            progress.cancel();\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processProducto(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Cargando datos del producto\");\r\n            progress.show();\r\n\r\n            BeProductoUbicacion = xobj.getresult(clsBeProducto.class,\"Get_BeProducto_By_Codigo_For_HH\");\r\n\r\n            if (BeProductoUbicacion != null){\r\n                IdProductoUbicacion=BeProductoUbicacion.getIdProducto();\r\n\r\n                lblDescProducto.setTextColor(Color.BLUE);\r\n                cvProd = BeProductoUbicacion;\r\n                cvProdID = BeProductoUbicacion.IdProducto;\r\n                lblDescProducto.setText (BeProductoUbicacion.Nombre);\r\n                cvPropID = BeProductoUbicacion.IdPropietario;\r\n                cvUMBID = BeProductoUbicacion.IdUnidadMedidaBasica;\r\n\r\n                if (BeProductoUbicacion.getControl_peso()){\r\n                    trPeso.setVisibility(View.VISIBLE);\r\n                }else{\r\n                    trPeso.setVisibility(View.GONE);\r\n                }\r\n\r\n                //Llama al m√©todo del WS Get_Estados_By_IdPropietario\r\n                execws(10);\r\n\r\n            }else{\r\n                inicializaTareaSinUbic();\r\n                lblDescProducto.setTextColor(Color.RED);\r\n                cvProdID = 0;\r\n                lblDescProducto.setText (\"C√≥digo no v√°lido\");\r\n                throw new Exception(\"Producto no existe\");\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processStockLP(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Validando ubicaci√≥n\");\r\n            progress.show();\r\n\r\n            productoList = xobj.getresult(clsBeProductoList.class,\"Get_Stock_By_Lic_Plate\");\r\n\r\n            if (escaneoPallet && productoList == null) {\r\n                lblDescProducto.setTextColor(Color.RED);\r\n                cvProdID = 0;\r\n                lblDescProducto.setText (\"C√≥digo de LP no v√°lido\");\r\n                progress.cancel();\r\n            }else{\r\n\r\n                if (escaneoPallet && productoList != null){\r\n\r\n                    List AuxList = stream(productoList.items)\r\n                            .where(c->c.Stock.IdUbicacion==cvUbicOrigID)\r\n                            .toList();\r\n\r\n                    if (AuxList.size() == 0){\r\n                        msgbox(\"El pallet no se encuentra en la ubicaci√≥n: \" + cvUbicOrigID);\r\n                        lblDescProducto.setTextColor(Color.RED);\r\n                        cvProdID = 0;\r\n                        lblDescProducto.setText (\"LP N.E.E.U\");\r\n                        progress.cancel();\r\n                    }else{\r\n\r\n                        productoList = new clsBeProductoList();\r\n                        productoList.items = AuxList;\r\n\r\n                        if (AuxList.size() == 1){\r\n\r\n                            BeProductoUbicacion = productoList.items.get(0);\r\n                            BeStockPallet = productoList.items.get(0).Stock;\r\n\r\n                            txtCodigoPrd.setText(BeProductoUbicacion.getCodigo());\r\n\r\n                            lblDescProducto.setTextColor(Color.BLUE);\r\n                            lblDescProducto.setText(BeProductoUbicacion.getNombre());\r\n\r\n                            cvProd = BeProductoUbicacion;\r\n                            cvProdID = BeProductoUbicacion.getIdProducto();\r\n                            cvPropID = BeProductoUbicacion.getIdPropietario();\r\n                            cvUMBID = BeProductoUbicacion.getIdUnidadMedidaBasica();\r\n\r\n                            if (BeProductoUbicacion.getControl_peso()){\r\n                                trPeso.setVisibility(View.VISIBLE);\r\n                            }else{\r\n                                trPeso.setVisibility(View.GONE);\r\n                            }\r\n\r\n                            cvLote = BeStockPallet.Lote;\r\n                            cvPresID = BeStockPallet.IdPresentacion;\r\n                            cvEstOrigen = BeStockPallet.IdProductoEstado;\r\n                            cvVence = app.strFecha(BeStockPallet.Fecha_Vence);\r\n\r\n                            //Llama al m√©todo del WS Get_Estados_By_IdPropietario\r\n                            execws(10);\r\n\r\n                        }else{\r\n                            progress.cancel();\r\n                            msgbox(\"Escanee el producto que a ubicar\");\r\n                            txtCodigoPrd.requestFocus();\r\n                        }\r\n                    }\r\n                }else{\r\n                    //Llama a este m√©todo del WS Get_BeProducto_By_Codigo_For_HH\r\n                    execws(3);\r\n                }\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processProductoUbicLP(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Cargando stock de producto con License Plate\");\r\n            progress.show();\r\n\r\n            stockResList = xobj.getresult(clsBeVW_stock_resList.class,\"Get_Productos_By_IdUbicacion_And_LicPlate\");\r\n\r\n            if (stockResList != null){\r\n                LlenaPresentaciones();\r\n            }else{\r\n                msgbox(\"No hay existencias disponibles de este producto en esta ubicaci√≥n o las existentes est√°n reservadas\");\r\n                inicializaTarea(false);\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processProductoUbic(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Cargando producto en esta ubicaci√≥n\");\r\n            progress.show();\r\n\r\n            stockResList = xobj.getresult(clsBeVW_stock_resList.class,\"Get_Productos_By_IdUbicacion\");\r\n\r\n            if (stockResList != null){\r\n                LlenaPresentaciones();\r\n            }else{\r\n                msgbox(\"El producto no existe en la ubicaci√≥n origen\");\r\n                txtCodigoPrd.requestFocus();\r\n                txtCodigoPrd.selectAll();\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processNuevoCorrelativoLP(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo nuevo correlativo de License Plate\");\r\n            progress.show();\r\n\r\n            vNuevoPalletId = (String) xobj.getSingle(\"Get_Nuevo_Correlativo_LicensePlateResult\",String.class);\r\n\r\n            if (!vNuevoPalletId.isEmpty()){\r\n                //Set_Nuevo_Pallet_Id\r\n                execws(9);\r\n            }else{\r\n                msgbox(\"Ocurri√≥ un error obteniendo el nuevo correlativo License Plate\");\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private void processIdNuevoPallet(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Colocando nuevo pallet\");\r\n            progress.show();\r\n\r\n            boolean result = (Boolean) xobj.getSingle(\"Set_Nuevo_Pallet_IdResult\",boolean.class);\r\n\r\n            progress.cancel();\r\n\r\n            if (result){\r\n                msgAskImpresoraLista(\"¬øLa impresora est√° lista y conectada?\");\r\n            }else{\r\n                progress.cancel();\r\n                msgbox(\"Ocurri√≥ un error creando el Id del nuevo pallet\");\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processEstadosProp(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Validando ubicaci√≥n\");\r\n            progress.show();\r\n\r\n            productoEstadoDestinoList = xobj.getresult(clsBeProducto_estadoList.class,\"Get_Estados_By_IdPropietario\");\r\n\r\n            if (productoEstadoDestinoList != null){\r\n                LlenaEstadoDestino(cvPropID);\r\n            }else{\r\n\r\n                if (escaneoPallet && productoList != null) {\r\n                    //LLama este procedimiento del WS Get_Productos_By_IdUbicacion_And_LicPlate\r\n                    execws(6);\r\n                }else{\r\n                    //LLama este procedimiento del WS Get_Productos_By_IdUbicacion\r\n                    execws(7);\r\n                }\r\n\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processCambio(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Procesando cambio de ubicaci√≥n\");\r\n            progress.show();\r\n\r\n            boolean actualizar = (Boolean) xobj.getSingle(\"Actualizar_Trans_Ubic_HH_DetResult\",boolean.class);\r\n\r\n            if (actualizar){\r\n                msgAskExit(String.format(\"Cambio de %s aplicado\",(gl.modo_cambio==1?\"ubicaci√≥n\":\"estado\")));\r\n            }else{\r\n                msgbox(\"Ocurri√≥ un error al procesar el cambio de ubicaci√≥n\");\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n        progress.cancel();\r\n\r\n    }\r\n\r\n    private void processCambioUbicEstHH(){\r\n        try{\r\n\r\n            boolean resultado = false;\r\n\r\n            progress.setMessage(\"Procesando cambio\");\r\n            progress.show();\r\n\r\n            resultado = (Boolean) xobj.getSingle(\"Aplica_Cambio_Estado_Ubic_HHResult\",boolean.class);\r\n            vIdStockNuevo = (Integer) xobj.getSingle(\"pIdStockNuevo\",int.class);\r\n            vIdMovimientoNuevo= (Integer) xobj.getSingle(\"pIdMovimientoNuevo\",int.class);\r\n\r\n            if( resultado){\r\n\r\n                txtCodigoPrd.setText(gl.gCProdAnterior);\r\n                txtUbicOrigen.setText(gl.gCUbicAnterior);\r\n\r\n                if (cmbEstadoOrigen.getAdapter()!=null  && cmbEstadoOrigen.getAdapter().getCount()>0){\r\n                    gl.gCEstadoAnterior = Integer.valueOf( cmbEstadoOrigen.getSelectedItem().toString().split(\" - \")[0]);\r\n                    gl.gCNomEstadoAnterior = cmbEstadoOrigen.getSelectedItem().toString().split(\" - \")[1];\r\n                }else{\r\n                    gl.gCEstadoAnterior = -1;\r\n                    gl.gCNomEstadoAnterior = \"\";\r\n                }\r\n\r\n                if (cmbVence.getAdapter()!=null && cmbVence.getAdapter().getCount()>0){\r\n                    gl.gCFechaAnterior = cmbVence.getSelectedItem().toString();\r\n                }else{\r\n                    gl.gCFechaAnterior=\"01/01/1900\";\r\n                }\r\n\r\n                if (cmbLote.getAdapter()!=null  && cmbLote.getAdapter().getCount()>0){\r\n                    gl.gCLoteAnterior = cmbLote.getSelectedItem().toString();\r\n                }else{\r\n                    gl.gCLoteAnterior = \"\";\r\n                }\r\n\r\n                if (cmbPresentacion.getAdapter()!=null && cmbPresentacion.getAdapter().getCount()>0){\r\n                    gl.gCPresAnterior = Integer.valueOf( cmbPresentacion.getSelectedItem().toString().split(\" - \")[0].toString());\r\n                    if (cmbPresentacion.getSelectedItem().toString().split(\" - \").length>1){\r\n                        gl.gCNomPresAnterior = cmbPresentacion.getSelectedItem().toString().split(\" - \")[1];\r\n                    }\r\n                }else{\r\n                    gl.gCPresAnterior = -1;\r\n                    gl.gCNomPresAnterior = \"\";\r\n                }\r\n\r\n                inicializaTarea(true);\r\n\r\n                progress.cancel();\r\n                msgAsk(gl.modo_cambio ==1 ? \"Cambio de ubicaci√≥n aplicado\": \"Cambio de estado aplicado\");\r\n\r\n            }\r\n\r\n        }catch (Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processUbicacionDestSugerida(){\r\n        try{\r\n\r\n            progress.setMessage(\"Procesando ubidacion destino sugerida\");\r\n            progress.show();\r\n\r\n            lUbicSug = xobj.getresult(USUbicStrucStage5List.class,\"ml_get_ubicacion_sugerida\");\r\n\r\n            if (lUbicSug != null){\r\n                if(lUbicSug.items.size()>0){\r\n\r\n                    txtUbicDestino.setText(String.valueOf(lUbicSug.items.get(0).lUbicacionesVacias.items.get(0).IdUbicacion));\r\n                    validaDestinoSug();\r\n\r\n                }\r\n\r\n            }else{\r\n                cvUbicDestID = 0;\r\n                toast(\"No existen ubicaciones sugeridas\");\r\n                progress.cancel();\r\n            }\r\n\r\n        }catch (Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processStockLP_AndCodigo(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Validando ubicaci√≥n\");\r\n            progress.show();\r\n\r\n            productoList = xobj.getresult(clsBeProductoList.class,\"Get_Stock_By_Lic_Plate_And_Codigo\");\r\n\r\n            if (escaneoPallet && productoList == null) {\r\n                lblDescProducto.setTextColor(Color.RED);\r\n                cvProdID = 0;\r\n                lblDescProducto.setText (\"C√≥digo de LP no v√°lido\");\r\n                progress.cancel();\r\n            }else{\r\n\r\n                if (escaneoPallet && productoList != null){\r\n\r\n                    List AuxList = stream(productoList.items)\r\n                            .where(c->c.Stock.IdUbicacion==cvUbicOrigID)\r\n                            .toList();\r\n\r\n                    if (AuxList.size() == 0){\r\n                        msgbox(\"El pallet no se encuentra en la ubicaci√≥n: \" + cvUbicOrigID);\r\n                        lblDescProducto.setTextColor(Color.RED);\r\n                        cvProdID = 0;\r\n                        lblDescProducto.setText (\"LP N.E.E.U\");\r\n                        progress.cancel();\r\n                    }else{\r\n\r\n                        productoList = new clsBeProductoList();\r\n                        productoList.items = AuxList;\r\n\r\n                        BeProductoUbicacion = productoList.items.get(0);\r\n                        BeStockPallet = productoList.items.get(0).Stock;\r\n\r\n                        lblDescProducto.setTextColor(Color.BLUE);\r\n                        lblDescProducto.setText(BeProductoUbicacion.getNombre());\r\n\r\n                        cvProd = BeProductoUbicacion;\r\n                        cvProdID = BeProductoUbicacion.getIdProducto();\r\n                        cvPropID = BeProductoUbicacion.getIdPropietario();\r\n                        cvUMBID = BeProductoUbicacion.getIdUnidadMedidaBasica();\r\n\r\n                        cvLote = BeStockPallet.Lote;\r\n                        cvPresID = BeStockPallet.IdPresentacion;\r\n                        cvEstOrigen = BeStockPallet.IdProductoEstado;\r\n                        cvVence = app.strFecha(BeStockPallet.Fecha_Vence);\r\n\r\n                        //Llama al m√©todo del WS Get_Estados_By_IdPropietario\r\n                        execws(10);\r\n                    }\r\n                }else{\r\n                    //Llama a este m√©todo del WS Get_BeProducto_By_Codigo_For_HH\r\n                    execws(3);\r\n                }\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processExisteLp(){\r\n\r\n        try{\r\n\r\n            Existe_Lp = xobj.getresult(Boolean.class,\"Existe_Lp_In_Stock\");\r\n\r\n            if (Existe_Lp){\r\n                progress.cancel();\r\n                txtCodigoPrd.requestFocus();\r\n\r\n                //Get_Stock_By_Lic_Plate\r\n                execws(5);\r\n            }else{\r\n                progress.cancel();\r\n                mu.msgbox(\"Lp no existe\");\r\n                txtLicPlate.selectAll();\r\n                txtLicPlate.requestFocus();\r\n            }\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processExisteLp:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processPalletNoEstandar(){\r\n\r\n        try{\r\n\r\n            EsPalletNoEstandar = xobj.getresult(Boolean.class,\"Es_Pallet_No_Estandar\");\r\n\r\n            if (EsPalletNoEstandar){\r\n                execws(20);\r\n            }else{\r\n                validaDestino();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processPalletNoEstandar:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processTienePosiciones(){\r\n\r\n        try{\r\n\r\n            TienePosiciones = xobj.getresult(Boolean.class,\"Tiene_Posiciones\");\r\n\r\n            if (!TienePosiciones){\r\n                msgAskIngresePosiciones();\r\n            }else{\r\n                validaDestino();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processPalletNoEstandar:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgAskIngresePosiciones() {\r\n\r\n        try{\r\n\r\n            final AlertDialog.Builder alert = new AlertDialog.Builder(this);\r\n\r\n            alert.setTitle(\"Ingrese n√∫mero de posiciones\");\r\n\r\n            vPosiciones = 0;\r\n\r\n            final LinearLayout layout   = new LinearLayout(this);\r\n            layout.setOrientation(LinearLayout.VERTICAL);\r\n\r\n            if(txtPosiciones.getParent()!= null){\r\n                ((ViewGroup) txtPosiciones.getParent()).removeView(txtPosiciones);\r\n            }\r\n\r\n            txtPosiciones.setText(\"\");\r\n            txtPosiciones.requestFocus();\r\n\r\n            layout.addView(txtPosiciones);\r\n\r\n            alert.setView(layout);\r\n\r\n            showkeyb();\r\n            alert.setCancelable(false);\r\n            alert.create();\r\n\r\n            alert.setPositiveButton(\"Aceptar\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int whichButton) {\r\n                    layout.removeAllViews();\r\n\r\n                    vPosiciones=Integer.valueOf(txtPosiciones.getText().toString());\r\n\r\n                    if (vPosiciones==0){\r\n                        layout.removeAllViews();\r\n                        msgAskIngresePosiciones();\r\n                    }else{\r\n                        validaDestino();\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            alert.setNegativeButton(\"Cancelar\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int whichButton) {\r\n                    layout.removeAllViews();\r\n                }\r\n            });\r\n\r\n            alert.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void inicializaTarea(boolean finalizar){\r\n        try{\r\n\r\n            progress.setMessage(\"Inicializando tarea\");\r\n            progress.show();\r\n\r\n            cvUbicOrigID = 0;\r\n            txtCodigoPrd.setText(\"\");\r\n            txtLicPlate.setText(\"\");\r\n            lblDescProducto.setText(\"\");\r\n            cmbPresentacion.setAdapter(null);\r\n            cmbLote.setAdapter(null);\r\n            cmbVence.setAdapter(null);\r\n            cmbEstadoOrigen.setAdapter(null);\r\n            cmbEstadoDestino.setAdapter(null);\r\n\r\n            cvProdID = 0;\r\n            cvPresID = 0;\r\n            cvLote  = \"\";\r\n            cvVence = \"\";\r\n            cvUbicDestID = 0;\r\n            cvUbicOrigID = 0;\r\n            cvEstDestino = 0;\r\n            cvEstOrigen = 0;\r\n            vCantidadAUbicar = 0;\r\n            vCantidadDisponible = 0;\r\n\r\n            lblUbicCompleta.setText(\"\");\r\n\r\n            lblCant.setText(\"\");\r\n            txtUbicDestino.setText(\"\");\r\n            lblUbicCompDestino.setText(\"\");\r\n            txtCantidad.setText(\"\");\r\n            txtPeso.setText(\"\");\r\n            txtCodigoPrd.setText(\"\");\r\n\r\n            cmbPresentacion.setEnabled(false);\r\n            cmbLote.setEnabled(true);\r\n            cmbVence.setEnabled(true);\r\n            cmbEstadoDestino.setEnabled(true);\r\n\r\n            txtUbicDestino.setEnabled(true);\r\n            txtCantidad.setEnabled(true);\r\n            txtPeso.setEnabled(true);\r\n            txtCodigoPrd.setEnabled(true);\r\n            txtLicPlate.setEnabled(true);\r\n\r\n            validarDatos = false;\r\n            vProcesar = false;\r\n\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n\r\n            if(gl.modo_cambio==1 && finalizar){\r\n                execws(1);\r\n            }else{\r\n                txtUbicOrigen.requestFocus();\r\n            }\r\n\r\n        }catch (Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void inicializaTareaSinUbic(){\r\n        try{\r\n            progress.setMessage(\"Inicializando tarea\");\r\n            progress.show();\r\n\r\n            txtCodigoPrd.setText(\"\");\r\n            txtLicPlate.setText(\"\");\r\n            lblDescProducto.setText(\"\");\r\n            cmbPresentacion.setAdapter(null);\r\n            cmbLote.setAdapter(null);\r\n            cmbVence.setAdapter(null);\r\n            cmbEstadoOrigen.setAdapter(null);\r\n            cmbEstadoDestino.setAdapter(null);\r\n\r\n            cvProdID = 0;\r\n            cvPresID = 0;\r\n            cvLote  = \"\";\r\n            cvVence = \"\";\r\n            cvUbicDestID = 0;\r\n            cvUbicOrigID = 0;\r\n            cvEstDestino = 0;\r\n            cvEstOrigen = 0;\r\n            vCantidadAUbicar = 0;\r\n            vCantidadDisponible = 0;\r\n\r\n            lblCant.setText(\"\");\r\n            txtUbicDestino.setText(\"\");\r\n            txtCantidad.setText(\"\");\r\n            txtPeso.setText(\"\");\r\n            txtCodigoPrd.setText(\"\");\r\n\r\n            cmbPresentacion.setEnabled(false);\r\n            cmbLote.setEnabled(true);\r\n            cmbVence.setEnabled(true);\r\n            cmbEstadoDestino.setEnabled(true);\r\n\r\n            txtUbicDestino.setEnabled(true);\r\n            txtCantidad.setEnabled(true);\r\n            txtPeso.setEnabled(true);\r\n            txtCodigoPrd.setEnabled(true);\r\n            txtLicPlate.setEnabled(true);\r\n\r\n            validarDatos = false;\r\n            vProcesar = false;\r\n\r\n            txtUbicOrigen.requestFocus();\r\n\r\n        }catch (Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void inicializaTareaLP(){\r\n        try{\r\n            progress.setMessage(\"Inicializando tarea\");\r\n            progress.show();\r\n\r\n            txtCodigoPrd.setText(\"\");\r\n            lblDescProducto.setText(\"\");\r\n            cmbPresentacion.setAdapter(null);\r\n            cmbLote.setAdapter(null);\r\n            cmbVence.setAdapter(null);\r\n            cmbEstadoOrigen.setAdapter(null);\r\n            cmbEstadoDestino.setAdapter(null);\r\n\r\n            cvProdID = 0;\r\n            cvPresID = 0;\r\n            cvLote  = \"\";\r\n            cvVence = \"\";\r\n            cvUbicDestID = 0;\r\n            cvEstDestino = 0;\r\n            vCantidadAUbicar = 0;\r\n            vCantidadDisponible = 0;\r\n\r\n            lblCant.setText(\"\");\r\n            txtUbicDestino.setText(\"\");\r\n            txtCantidad.setText(\"\");\r\n            txtPeso.setText(\"\");\r\n            txtCodigoPrd.setText(\"\");\r\n\r\n            cmbPresentacion.setEnabled(false);\r\n            cmbLote.setEnabled(true);\r\n            cmbVence.setEnabled(true);\r\n            cmbEstadoDestino.setEnabled(true);\r\n\r\n            txtUbicDestino.setEnabled(true);\r\n            txtCantidad.setEnabled(true);\r\n            txtPeso.setEnabled(true);\r\n            txtCodigoPrd.setEnabled(true);\r\n            txtLicPlate.setEnabled(true);\r\n\r\n            validarDatos = false;\r\n            vProcesar = false;\r\n\r\n            txtUbicOrigen.requestFocus();\r\n\r\n        }catch (Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgAskExit(String msg) {\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.cambioubic);\r\n\r\n            dialog.setNeutralButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    frm_cambio_ubicacion_ciega.super.finish();\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void msgAskExplosionar(String msg){\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.cambioubic);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    Es_Explosion = true;\r\n                    msgAskImprimirEtiqueta(\"Imprimir etiqueta\");\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which)\r\n                {\r\n                    Es_Explosion = false;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n    }\r\n\r\n    private void msgAskImprimirEtiqueta(String msg){\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.cambioubic);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    //Get_Nuevo_Correlativo_LicensePlate\r\n                     execws(8);\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which){}\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n    }\r\n\r\n    private void msgAskImpresoraLista(String msg){\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.cambioubic);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    //Imprime la etiqueta\r\n                    /*\r\n                  ZPLString As String = String.Format( _\r\n                                                    \"^XA \" & _\r\n                                                    \"^MMT \" & _\r\n                                                    \"^PW700 \" & _\r\n                                                    \"^LL0406 \" & _\r\n                                                    \"^LS0 \" & _\r\n                                                    \"^FT171,61^A0I,25,14^FH\\^FD{0}^FS \" & _\r\n                                                    \"^FT550,61^A0I,25,14^FH\\^FD{1}^FS \" & _\r\n                                                    \"^FT670,306^A0I,25,14^FH\\^FD{2}^FS \" & _\r\n                                                    \"^FT292,61^A0I,25,24^FH\\^FDBodega:^FS \" & _\r\n                                                    \"^FT670,61^A0I,25,24^FH\\^FDEmpresa:^FS \" & _\r\n                                                    \"^FT670,367^A0I,25,24^FH\\^FDTOMIMS, WMS.  Product Barcode^FS \" & _\r\n                                                    \"^FO2,340^GB670,0,14^FS \" & _\r\n                                                    \"^BY3,3,160^FT670,131^BCI,,Y,N \" & _\r\n                                                    \"^FD{3}^FS \" & _\r\n                                                    \"^PQ1,0,1,Y \" & _\r\n                                                    \"^XZ\", gCodigoBodega, _\r\n                                                    gNomEmpresa, _\r\n                                                    BeStockPallet.Codigo_Producto + \" - \" + BeStockPallet.Nombre_Producto, _\r\n                                                            ((vNuevoPalletId <> \"\", \"$\" + vNuevoPalletId, BeStockPallet.Codigo_Producto))\r\n\r\n                                            frmPrintBarraPallet As New frmPrint\r\n                                            frmPrintBarraPallet.ZplToPrint = ZPLString\r\n                                            frmPrintBarraPallet.ShowDialog()\r\n         */\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which){}\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void validaOrigen(){\r\n\r\n        try{\r\n\r\n            if (!txtUbicOrigen.getText().toString().isEmpty()){\r\n\r\n                bodega_ubicacion_origen = new clsBeBodega_ubicacion();\r\n\r\n                //Llama al m√©todo del WS Get_Ubicacion_By_Codigo_Barra_And_IdBodega para validar ubicacion origen\r\n                execws(11);\r\n\r\n            }else{\r\n                lblUbicCompleta.setText(\"\");\r\n            }\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            mu.msgbox( e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void validaDestino(){\r\n\r\n        try{\r\n\r\n            if (!txtUbicDestino.getText().toString().isEmpty()){\r\n\r\n                bodega_ubicacion_destino = new clsBeBodega_ubicacion();\r\n\r\n                //Llama al m√©todo del WS Get_Ubicacion_By_Codigo_Barra_And_IdBodega para validar ubicacion destino\r\n                execws(12);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            mu.msgbox( e.getMessage());\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n    }\r\n\r\n    private void validaDestinoSug(){\r\n\r\n        try{\r\n\r\n            if (!txtUbicDestino.getText().toString().isEmpty()){\r\n\r\n                bodega_ubicacion_destino = new clsBeBodega_ubicacion();\r\n\r\n                //Llama al m√©todo del WS Get_Ubicacion_By_Codigo_Barra_And_IdBodega para validar ubicacion destino sugerida\r\n                execws(16);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            mu.msgbox( e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void datosOk(){\r\n\r\n        try{\r\n\r\n            boolean continua=true;\r\n            validarDatos = true;\r\n\r\n            execws(11);\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            mu.msgbox( e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgAsk(String msg) {\r\n\r\n        try{\r\n\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(msg);\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setNeutralButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n\r\n                    if( escaneoPallet && productoList != null){\r\n                        if( BeStockPallet.CantidadPresentacion != vCantidadAUbicar){\r\n                            msgAskExplosionar(\"La ubicaci√≥n parcial de pallet requiere explosionar el material, ¬øgenerar nuevo palletId y continuar?\");\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void msgAskAplicar(String msg) {\r\n\r\n        try{\r\n\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(\"¬ø\" + msg + \"?\");\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which)\r\n                {btnGuardarCiega.setVisibility(View.VISIBLE); }\r\n            });\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    //Llamar m√©todo para aplicar el cambio de estado\r\n                    aplicarCambio();\r\n\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n    }\r\n\r\n    private void aplicarCambio() {\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Aplicando el cambio\");\r\n            progress.show();\r\n\r\n            if (!Crear_Movimiento_Ubicacion_ND(gl.modo_cambio == 1? false: true)){\r\n                return;\r\n            }\r\n\r\n            vStockRes.IdProductoBodega = cvProd.IdProductoBodega;\r\n            vStockRes.IdUbicacion = cvUbicOrigID;\r\n\r\n            if( BeProductoUbicacion.Control_lote){\r\n                vStockRes.Lote = cmbLote.getSelectedItem().toString();\r\n            }else{\r\n                vStockRes.Lote = \"\";\r\n            }\r\n\r\n            if( BeProductoUbicacion.Control_vencimiento){\r\n                vStockRes.Fecha_Vence = app.strFechaXMLCombo(cmbVence.getSelectedItem().toString());\r\n            }else{\r\n                vStockRes.Fecha_Vence = \"01/01/1900\";\r\n            }\r\n\r\n            vStockRes.CantidadUmBas = vCantidadAUbicar;\r\n            vStockRes.Peso = cvStockItem.Peso;\r\n            vStockRes.IdPresentacion =cvPresID;\r\n            vStockRes.IdProductoEstado = cvEstOrigen;\r\n            vStockRes.Fecha_ingreso = app.strFechaXML(du.getFechaActual());\r\n            vStockRes.ValorFecha = app.strFechaXML(du.getFechaActual());\r\n            vStockRes.Pallet_No_Estandar=EsPalletNoEstandar;\r\n\r\n            if( escaneoPallet && productoList != null){\r\n\r\n                vStockRes.Lic_plate = BeStockPallet.Lic_plate;\r\n\r\n                if( BeStockPallet.Factor > 0){\r\n                    vStockRes.CantidadUmBas = vCantidadAUbicar * BeStockPallet.Factor;\r\n                }\r\n\r\n            }else if ( cvPresID != 0){\r\n                vStockRes.CantidadUmBas = vCantidadAUbicar * vFactorPres;\r\n            }\r\n\r\n            //Aplica_Cambio_Estado_Ubic_HH(gMovimientoDet, vStockRes, vIdStockNuevo, vIdMovimientoNuevo);\r\n            execws(14);\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            mu.msgbox( e.getMessage());\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n        }\r\n    }\r\n\r\n    public void AplicarCambio(View view){\r\n\r\n        try{\r\n\r\n            //#CKFK 20210202 Agregu√© estas validaciones para evitar que se guarden datos incorrectos\r\n            //******************\r\n\r\n            datosCorrectos=true;\r\n\r\n            if (cvUbicOrigID == 0) {\r\n                msgbox(\"Ubicaci√≥n origen no v√°lida\");\r\n                txtUbicOrigen.requestFocus();\r\n                datosCorrectos = false;\r\n            }\r\n\r\n            if (cvProdID == 0) {\r\n                msgbox(\"Producto no v√°lido\");\r\n                txtCodigoPrd.requestFocus();\r\n                datosCorrectos = false;\r\n            }\r\n\r\n            if (vCantidadDisponible == 0) {\r\n                msgbox(\"Cantidad disponible es 0, no se puede realizar el movimiento\");\r\n                txtCodigoPrd.requestFocus();\r\n                datosCorrectos = false;\r\n            }\r\n\r\n            if (gl.modo_cambio==2) {\r\n                if (cvEstDestino == 0){\r\n                    msgbox(\"Estado destino incorrecto\");\r\n                    cmbEstadoDestino.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n            }\r\n\r\n            vCantidadAUbicar = Double.parseDouble(txtCantidad.getText().toString().replace(\",\",\"\"));\r\n            vCantidadDisponible = Double.parseDouble(lblCant.getText().toString().replace(\",\",\"\"));\r\n\r\n            if (vCantidadAUbicar<0) {\r\n                mu.msgbox(\"La cantidad no puede ser negativa\");\r\n                txtCantidad.requestFocus();\r\n                datosCorrectos = false;\r\n            }\r\n\r\n            if (vCantidadAUbicar==0) {\r\n                msgbox(\"La cantidad debe ser mayor que 0\");\r\n                txtCantidad.requestFocus();\r\n                datosCorrectos = false;\r\n            }\r\n\r\n            if (vCantidadAUbicar> vCantidadDisponible) {\r\n                msgbox(\"Cantidad incorrecta\") ;\r\n                txtCantidad.requestFocus();\r\n                datosCorrectos = false;\r\n            }\r\n\r\n            if(cvUbicDestID == 0 && txtUbicDestino.getText().toString().isEmpty()){\r\n                msgbox(\"La ubicaci√≥n de destino no puede ser vac√≠a\");\r\n                txtUbicDestino.requestFocus();\r\n                datosCorrectos = false;\r\n            }\r\n\r\n            if ((cvUbicOrigID == cvUbicDestID) && (gl.modo_cambio ==1)){\r\n                msgbox(\"La ubicaci√≥n de destino coincide con la de origen\");\r\n                txtUbicDestino.requestFocus();\r\n                datosCorrectos = false;\r\n            }\r\n\r\n            if (!datosCorrectos) return;\r\n\r\n            //********************\r\n\r\n            progress.setMessage(\"Aplicando cambio de ubicacion\");\r\n            progress.show();\r\n\r\n            btnGuardarCiega.setVisibility(View.INVISIBLE);\r\n\r\n            vProcesar = true;\r\n\r\n            pStock = new clsBeStock();\r\n            pStock.IdUbicacion = cvUbicOrigID;\r\n            pStock.IdProductoBodega = BeProductoUbicacion.getIdProductoBodega();\r\n            pStock.IdProductoEstado = cvEstOrigen;\r\n            pStock.IdPresentacion = cvPresID;\r\n            pStock.IdUnidadMedida = BeProductoUbicacion.IdUnidadMedidaBasica;\r\n            pStock.Fecha_vence = du.convierteFechaDiagonal(cvVence);\r\n            pStock.Lote = cvLote;\r\n\r\n            //Es_Pallet_No_Estandar\r\n            execws(19);\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            mu.msgbox( e.getMessage());\r\n        }finally {\r\n            progress.cancel();\r\n        }\r\n    }\r\n\r\n    private boolean Crear_Movimiento_Ubicacion_ND(boolean EsCambioEstado) {\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Creando el movimiento\");\r\n\r\n            // The preferred idiom for iterating over collections and arrays\r\n            for (clsBeVW_stock_res st : stockResList.items) {\r\n\r\n                if(escaneoPallet &&  productoList != null ) {\r\n                    if (st.IdStock == cvStockID && st.Lic_plate.equals(BeStockPallet.Lic_plate)) {\r\n                        cvStockItem = st;\r\n                        break;}\r\n                }else{\r\n                    if(BeProductoUbicacion.Control_lote && BeProductoUbicacion.Control_vencimiento ) {\r\n                        if (st.IdStock == cvStockID && st.Lote.equals(cvLote) && app.strFecha(st.Fecha_Vence).equals(cvVence) &&\r\n                                st.IdPresentacion == cvPresID && st.IdProductoEstado == cvEstOrigen && st.IdUnidadMedida == cvUMBID) {\r\n                            cvStockItem = st;\r\n                            break;\r\n                        }\r\n                    }else if( !BeProductoUbicacion.Control_lote && BeProductoUbicacion.Control_vencimiento ) {\r\n                        if (st.IdStock == cvStockID && app.strFecha(st.Fecha_Vence).equals(cvVence) &&\r\n                                st.IdPresentacion == cvPresID && st.IdProductoEstado == cvEstOrigen) {\r\n                            cvStockItem = st;\r\n                            break;\r\n                        }\r\n                    }else if(BeProductoUbicacion.Control_lote &&  !BeProductoUbicacion.Control_vencimiento ) {\r\n                        if (st.IdStock == cvStockID && st.Lote.equals(cvLote) && st.IdPresentacion == cvPresID &&\r\n                                st.IdProductoEstado == cvEstOrigen && st.IdUnidadMedida == cvUMBID) {\r\n                            cvStockItem = st;\r\n                            break;\r\n                        }\r\n                    }else if(st.IdStock == cvStockID && st.IdPresentacion == cvPresID &&\r\n                            st.IdProductoEstado == cvEstOrigen && st.IdUnidadMedida == cvUMBID ){\r\n                        cvStockItem = st;\r\n                        break;}\r\n                }\r\n            }\r\n\r\n        }catch(Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            mu.msgbox( ex.getMessage());\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n            return false;\r\n        }\r\n\r\n        try{\r\n\r\n            gMovimientoDet = new clsBeTrans_movimientos();\r\n\r\n            gMovimientoDet.IdMovimiento = 0;\r\n            gMovimientoDet.IdEmpresa = gl.IdEmpresa;\r\n            gMovimientoDet.IdBodegaOrigen = gl.IdBodega;\r\n            gMovimientoDet.IdTransaccion = 1;\r\n            gMovimientoDet.IdPropietarioBodega = cvPropID;\r\n            gMovimientoDet.IdProductoBodega = cvProd.IdProductoBodega;\r\n            gMovimientoDet.IdUbicacionOrigen = cvUbicOrigID;\r\n            gMovimientoDet.IdUbicacionDestino = cvUbicDestID;\r\n\r\n            if(cmbPresentacion.getAdapter()!=null  && cmbPresentacion.getAdapter().getCount()>0){\r\n                gMovimientoDet.IdPresentacion = (Integer.valueOf( cmbPresentacion.getSelectedItem().toString().split(\" - \")[0].toString()) == -1? 0: Integer.valueOf( cmbPresentacion.getSelectedItem().toString().split(\" - \")[0].toString()));\r\n            }else{\r\n                gMovimientoDet.IdPresentacion = 0;\r\n            }\r\n            if(cmbEstadoOrigen.getAdapter()!=null && cmbEstadoOrigen.getAdapter().getCount()>0){\r\n                gMovimientoDet.IdEstadoOrigen = Integer.valueOf( cmbEstadoOrigen.getSelectedItem().toString().split(\" - \")[0].toString());\r\n            }else{\r\n                gMovimientoDet.IdEstadoOrigen = 0;\r\n            }\r\n\r\n            gMovimientoDet.IdEstadoDestino = cvEstDestino;\r\n\r\n            if(gl.modo_cambio == 1 ){\r\n                gMovimientoDet.IdEstadoDestino = gMovimientoDet.IdEstadoOrigen;}\r\n\r\n            gMovimientoDet.IdUnidadMedida = cvStockItem.IdUnidadMedida;\r\n\r\n            if(EsCambioEstado ) {\r\n                gMovimientoDet.IdTipoTarea = 3;\r\n            }else{\r\n                gMovimientoDet.IdTipoTarea = 2;\r\n            }\r\n\r\n            gMovimientoDet.IdBodegaDestino = gl.IdBodega;\r\n            gMovimientoDet.IdRecepcion = cvStockItem.IdRecepcionEnc;\r\n            gMovimientoDet.Cantidad = vCantidadAUbicar;\r\n            gMovimientoDet.Serie = cvStockItem.Serial;\r\n            gMovimientoDet.Peso = 0;\r\n\r\n            if(cmbLote.getAdapter()!=null  && cmbLote.getAdapter().getCount()>0){\r\n                gMovimientoDet.Lote = cmbLote.getSelectedItem().toString();\r\n            }else{\r\n                gMovimientoDet.Lote = \"\";\r\n            }\r\n\r\n            clsBeProducto bprod = new clsBeProducto();\r\n\r\n            bprod = BeProductoUbicacion;\r\n\r\n            if(bprod.Control_vencimiento ){\r\n                if(cmbVence.getAdapter()!=null && cmbVence.getAdapter().getCount()>0){\r\n                    gMovimientoDet.Fecha_vence = app.strFechaXMLCombo(cmbVence.getSelectedItem().toString());\r\n                }else{\r\n                    gMovimientoDet.Fecha_vence = app.strFechaXMLCombo(\"01/01/1900\");\r\n                }\r\n\r\n            }\r\n\r\n            gMovimientoDet.Fecha = app.strFechaXML(du.getFechaActual());\r\n\r\n            if(escaneoPallet &&  productoList != null ) {\r\n                gMovimientoDet.Barra_pallet = BeStockPallet.Lic_plate;\r\n            }else{\r\n                gMovimientoDet.Barra_pallet = \"\";\r\n            }\r\n\r\n            gMovimientoDet.Hora_ini =  app.strFechaXML(du.getFechaActual());\r\n            gMovimientoDet.Hora_fin =  app.strFechaXML(du.getFechaActual());\r\n            gMovimientoDet.Fecha_agr =  app.strFechaXML(du.getFechaActual());\r\n            gMovimientoDet.Usuario_agr = String.valueOf(gl.IdOperador);\r\n            gMovimientoDet.Cantidad_hist = gMovimientoDet.Cantidad;\r\n            gMovimientoDet.Peso_hist = gMovimientoDet.Peso;\r\n            gMovimientoDet.setIsNew(true);\r\n\r\n            return true;\r\n\r\n        }catch(Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            mu.msgbox( ex.getMessage());\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    public void Regresar(View view){\r\n        finish();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/dts/tom/Transacciones/CambioUbicacion/frm_cambio_ubicacion_ciega.java	(revision 5deab67d6a21a44cc275f189c4f92dc1aa94a3e9)
+++ app/src/main/java/com/dts/tom/Transacciones/CambioUbicacion/frm_cambio_ubicacion_ciega.java	(date 1612943932397)
@@ -54,7 +54,7 @@
     private ProgressDialog progress;
 
     private EditText txtUbicOrigen, txtCodigoPrd, txtCantidad, txtUbicDestino,txtLicPlate, txtPosiciones, txtPeso;
-    private TextView lblUbicCompleta, lblDescProducto, lblLote, lblVence, lblEstadoDestino, lblCant,lblPesoEst, lblPeso,lblTituloForma,lblUbicCompDestino;
+    private TextView lblUbicCompleta, lblDescProducto, lblLote, lblVence, lblEstadoDestino, txtUbicSug, lblCant,lblPesoEst, lblPeso,lblTituloForma,lblUbicCompDestino;
     private Spinner cmbPresentacion, cmbLote, cmbVence, cmbEstadoOrigen, cmbEstadoDestino;
     private Button btnGuardarCiega;
     private TableRow trPeso;
@@ -171,6 +171,7 @@
             lblPeso = (TextView) findViewById(R.id.lblPeso);
             lblTituloForma = (TextView) findViewById(R.id.lblTituloForma);
             lblUbicCompDestino = (TextView) findViewById(R.id.lblUbicCompDestino);
+            txtUbicSug = (TextView) findViewById(R.id.txtUbicSug);
 
             cmbPresentacion = (Spinner) findViewById(R.id.cmbPresentacion);
             cmbLote = (Spinner) findViewById(R.id.cmbLote);
@@ -1299,7 +1300,8 @@
                                 "pIdBodega",gl.IdBodega);
                         break;
                     case 12://Valida la ubicaci√≥n destino
-                        callMethod("Get_Ubicacion_By_Codigo_Barra_And_IdBodega","pBarra",txtUbicDestino.getText().toString(),
+                        callMethod("Get_Ubicacion_By_Codigo_Barra_And_IdBodega",
+                                "pBarra",txtUbicDestino.getText().toString(),
                                 "pIdBodega",gl.IdBodega);
                         break;
                     case 13:
@@ -1327,7 +1329,7 @@
                         break;
                     case 16://Obtiene descripci√≥n de la ubicaci√≥n destino sugerida
                         callMethod("Get_Ubicacion_By_Codigo_Barra_And_IdBodega",
-                                "pBarra",txtUbicDestino.getText().toString(),
+                                "pBarra",txtUbicSug.getText().toString(),
                                 "pIdBodega",gl.IdBodega);
                         break;
                     case 17://Obtiene el producto que coincide con el License Plate ingresado en una bodega
@@ -1966,7 +1968,8 @@
             if (lUbicSug != null){
                 if(lUbicSug.items.size()>0){
 
-                    txtUbicDestino.setText(String.valueOf(lUbicSug.items.get(0).lUbicacionesVacias.items.get(0).IdUbicacion));
+                    txtUbicSug.setText(String.valueOf(lUbicSug.items.get(0).lUbicacionesVacias.items.get(0).IdUbicacion));
+                    txtUbicDestino.setHint("Escanee " + String.valueOf(lUbicSug.items.get(0).lUbicacionesVacias.items.get(0).IdUbicacion));
                     validaDestinoSug();
 
                 }
@@ -2222,6 +2225,7 @@
                 execws(1);
             }else{
                 txtUbicOrigen.requestFocus();
+                progress.cancel();
             }
 
         }catch (Exception ex){
@@ -2278,6 +2282,8 @@
 
             txtUbicOrigen.requestFocus();
 
+            progress.cancel();
+
         }catch (Exception ex){
             progress.cancel();
             addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),"");
@@ -2329,6 +2335,8 @@
 
             txtUbicOrigen.requestFocus();
 
+            progress.cancel();
+
         }catch (Exception ex){
             progress.cancel();
             addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),"");
@@ -2502,7 +2510,7 @@
 
         try{
 
-            if (!txtUbicDestino.getText().toString().isEmpty()){
+            if (!txtUbicSug.getText().toString().isEmpty()){
 
                 bodega_ubicacion_destino = new clsBeBodega_ubicacion();
 
@@ -2522,15 +2530,18 @@
 
         try{
 
-            if (!txtUbicDestino.getText().toString().isEmpty()){
+            if (!lblUbicCompDestino.getText().toString().isEmpty()){
 
                 bodega_ubicacion_destino = new clsBeBodega_ubicacion();
 
                 //Llama al m√©todo del WS Get_Ubicacion_By_Codigo_Barra_And_IdBodega para validar ubicacion destino sugerida
                 execws(16);
+            }else{
+                progress.cancel();
             }
 
         }catch (Exception e){
+            progress.cancel();
             addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),"");
             mu.msgbox( e.getMessage());
         }
Index: app/src/main/java/com/dts/tom/Transacciones/Picking/frm_picking_datos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.dts.tom.Transacciones.Picking;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.text.InputFilter;\r\nimport android.text.InputType;\r\nimport android.util.Log;\r\nimport android.view.KeyEvent;\r\nimport android.view.View;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Spinner;\r\nimport android.widget.TableRow;\r\nimport android.widget.TextView;\r\n\r\nimport com.dts.base.DecimalDigitsInputFilter;\r\nimport com.dts.base.WebService;\r\nimport com.dts.base.XMLObject;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_Presentacion.clsBeProducto_PresentacionList;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_estado.clsBeProducto_estadoList;\r\nimport com.dts.classes.Mantenimientos.Producto.clsBeProducto;\r\nimport com.dts.classes.Mantenimientos.Producto.clsBeProductoList;\r\nimport com.dts.classes.Transacciones.Picking.clsBeTrans_picking_det;\r\nimport com.dts.classes.Transacciones.Picking.clsBeTrans_picking_ubic;\r\nimport com.dts.classes.Transacciones.Picking.clsBeTrans_picking_ubicList;\r\nimport com.dts.classes.Transacciones.Stock.Stock_res.clsBeStock_res;\r\nimport com.dts.classes.Transacciones.Stock.Stock_res.clsBeStock_resList;\r\nimport com.dts.tom.PBase;\r\nimport com.dts.tom.R;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\nimport static br.com.zbra.androidlinq.Linq.stream;\r\nimport static com.dts.tom.Transacciones.Picking.frm_detalle_tareas_picking.TipoLista;\r\nimport static com.dts.tom.Transacciones.Picking.frm_detalle_tareas_picking.gBePicking;\r\nimport static com.dts.tom.Transacciones.Picking.frm_detalle_tareas_picking.plistPickingUbi;\r\nimport static com.dts.tom.Transacciones.Picking.frm_detalle_tareas_picking.selitem;\r\n\r\npublic class frm_picking_datos extends PBase {\r\n\r\n    private WebServiceHandler ws;\r\n    private XMLObject xobj;\r\n\r\n    public static clsBeTrans_picking_ubic gBePickingUbic;\r\n    public static clsBeProducto gBeProducto = new clsBeProducto();\r\n    private clsBeProducto_estadoList LProductoEstadoIngreso = new clsBeProducto_estadoList();\r\n    private clsBeProductoList ListBeStockPalletEscaneado = new clsBeProductoList();\r\n    private clsBeProducto BeStockPallet = new clsBeProducto();\r\n    private clsBeTrans_picking_det BePickingDet = new clsBeTrans_picking_det();\r\n    private clsBeStock_res BeStockRes = new clsBeStock_res();\r\n    private ArrayList<String> EstadoList = new ArrayList<String>();\r\n    private ArrayList<String> PresList = new ArrayList<String>();\r\n    private clsBeTrans_picking_ubicList pSubListPickingU = new clsBeTrans_picking_ubicList();\r\n\r\n    private ProgressDialog progress;\r\n    private TextView lblTituloForma, lblLicPlate;\r\n    private Button btnFechaVence, btnDanado, btNE,btnConfirmarPk;\r\n    private EditText txtBarra, txtFechaCad, txtLote, txtUniBas, txtCantidadPick, txtPesoPick;\r\n    private Spinner cmbPresentacion, cmbEstado;\r\n    private TableRow trCaducidad;\r\n\r\n    private boolean Escaneo_Pallet = false;\r\n    private String pLP = \"\";\r\n    private int gIdUbicacion=0;\r\n    public static double CantReemplazar=0;\r\n    public static boolean ReemplazoLP=false;\r\n    public static int Tipo=0;\r\n\r\n    private int DifDias = 0;\r\n\r\n    private TextToSpeech mTTS;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_frm_picking_datos);\r\n\r\n        super.InitBase();\r\n\r\n        ws = new WebServiceHandler(frm_picking_datos.this, gl.wsurl);\r\n        xobj = new XMLObject(ws);\r\n\r\n        txtBarra = (EditText) findViewById(R.id.txtBarra);\r\n        txtFechaCad = (EditText) findViewById(R.id.txtFechaCad);\r\n        txtLote = (EditText) findViewById(R.id.txtLote);\r\n        txtUniBas = (EditText) findViewById(R.id.txtUniBas);\r\n        txtCantidadPick = (EditText) findViewById(R.id.txtCantidadPick);\r\n        txtPesoPick = (EditText) findViewById(R.id.txtPesoPick);\r\n\r\n        lblTituloForma = (TextView) findViewById(R.id.lblTituloForma);\r\n        lblLicPlate = (TextView) findViewById(R.id.lblLicPlate);\r\n\r\n        btnFechaVence = (Button) findViewById(R.id.btnFechaVence);\r\n        btnConfirmarPk = (Button) findViewById(R.id.btnConfirmarPk);\r\n\r\n        cmbPresentacion = (Spinner) findViewById(R.id.cmbPresentacion);\r\n        cmbEstado = (Spinner) findViewById(R.id.cmbEstado);\r\n\r\n        trCaducidad = (TableRow) findViewById(R.id.trCaducidad);\r\n\r\n        ProgressDialog(\"Cargando datos de producto picking\");\r\n\r\n        if (selitem != null) {\r\n            gBePickingUbic = selitem;\r\n        }\r\n\r\n        setHandlers();\r\n\r\n        Load();\r\n\r\n        //#EJC20210201: voice picking jajajaja :)\r\n        mTTS = new TextToSpeech(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                if(status == TextToSpeech.SUCCESS){\r\n                    Locale locSpanish = new Locale(\"spa\", \"MEX\");\r\n                    int result =mTTS.setLanguage(locSpanish);\r\n                    if(result == TextToSpeech.LANG_MISSING_DATA || result == TextToSpeech.LANG_NOT_SUPPORTED){\r\n                        Log.e(\"tts\",\"Lenguaje no soportado :(\");\r\n                    }else{\r\n\r\n                        double dif= gBePickingUbic.Cantidad_Solicitada -  gBePickingUbic.Cantidad_Recibida;\r\n\r\n                        String text =\"\";\r\n\r\n                        if (!gBePickingUbic.Lic_plate.isEmpty() && !gBePickingUbic.Lic_plate.equals(\"0\")){\r\n                            text = \"Escanee licencia: \" + gBePickingUbic.Lic_plate + \".\";\r\n                        }\r\n\r\n                        if (!gBePickingUbic.Lote.isEmpty()){\r\n                             text += \" C√≥digo: \" + gBePickingUbic.CodigoProducto + \", Producto: \" + gBePickingUbic.NombreProducto + \".\"\r\n                                    + \" Tome: \" + dif + \",\"\r\n                                    + \" Verif√≠que lote: \" + gBePickingUbic.Lote;\r\n                        }else{\r\n                             text += \"C√≥digo: \" + gBePickingUbic.CodigoProducto + \", Producto: \" + gBePickingUbic.NombreProducto + \".\"\r\n                                    + \" Tome: \" + dif + \",\"\r\n                                    + \" tome cualquier lote. \";\r\n                        }\r\n\r\n                        if(!gBePickingUbic.Fecha_Vence.equals(\"01-01-1900\") && !gBePickingUbic.Fecha_Vence.isEmpty()){\r\n                            text +=\" Verifique vencimiento: \" +gBePickingUbic.Fecha_Vence;\r\n                        }\r\n\r\n                        float speed = 1f;\r\n                        float pitch = 1f;\r\n                        mTTS.setPitch(pitch);\r\n                        mTTS.setSpeechRate(speed);\r\n\r\n                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n                            mTTS.speak(text,TextToSpeech.QUEUE_FLUSH,null,null);\r\n                        } else {\r\n                            mTTS.speak(text, TextToSpeech.QUEUE_FLUSH, null);\r\n                        }\r\n                    }\r\n                }else{\r\n                    Log.e(\"tts\",\"No he podido inicializar el TTS :(\");\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void setHandlers() {\r\n\r\n        try {\r\n\r\n            txtBarra.setOnKeyListener(new View.OnKeyListener() {\r\n                @Override\r\n                public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                    if ((event.getAction() == KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER)) {\r\n                        Procesa_Barra();\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            txtCantidadPick.setOnKeyListener(new View.OnKeyListener() {\r\n                @Override\r\n                public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                    if ((event.getAction() == KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER)) {\r\n                        Procesar_Registro();\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            });\r\n\r\n        } catch (Exception e) {\r\n            mu.msgbox(\"setHandlers:\" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    public void ProgressDialog(String mensaje) {\r\n        progress = new ProgressDialog(this);\r\n        progress.setMessage(mensaje);\r\n        progress.setProgressStyle(ProgressDialog.STYLE_SPINNER);\r\n        progress.setIndeterminate(true);\r\n        progress.setProgress(0);\r\n        progress.show();\r\n    }\r\n\r\n    private void Load() {\r\n\r\n        try {\r\n\r\n            if (!gBePickingUbic.Lic_plate.isEmpty()) {\r\n                lblLicPlate.setText(gBePickingUbic.Lic_plate);\r\n            } else {\r\n                lblLicPlate.setText(\"\");\r\n                lblLicPlate.setVisibility(View.GONE);\r\n            }\r\n\r\n            DifDias = du.DateDiff(gBePickingUbic.Fecha_Vence);\r\n\r\n            if(!gBePickingUbic.Fecha_Vence.equals(\"01-01-1900\") && !gBePickingUbic.Fecha_Vence.isEmpty()){\r\n\r\n            }\r\n            lblTituloForma.setText(\"Prod: \" + gBePickingUbic.CodigoProducto + \"-\" + gBePickingUbic.NombreProducto + \"\\r\\n\"\r\n                    + ((!gBePickingUbic.Fecha_Vence.equals(\"01-01-1900\") && !gBePickingUbic.Fecha_Vence.isEmpty())?\r\n                    \" Expira: \" + gBePickingUbic.Fecha_Vence :\"\" )\r\n                    + (!gBePickingUbic.Lote.isEmpty()?\"Lote: \" + gBePickingUbic.Lote:\"\") + \"\\r\\n\"\r\n                    + \"Sol: \" + gBePickingUbic.Cantidad_Solicitada + \"\\r\\n\"\r\n                    + \"Rec: \" + gBePickingUbic.Cantidad_Recibida + \" \"+ gBePickingUbic.ProductoUnidadMedida);\r\n\r\n            txtCantidadPick.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtCantidadPick.setFilters(new InputFilter[]{new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n            txtPesoPick.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtPesoPick.setFilters(new InputFilter[]{new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n\r\n            gBeProducto = new clsBeProducto();\r\n\r\n            execws(1);\r\n\r\n        } catch (Exception e) {\r\n            mu.msgbox(\"Load:\" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Listar_Producto_Estado() {\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Listando estados de producto\");\r\n\r\n            EstadoList.clear();\r\n\r\n            for (int i = 0; i < LProductoEstadoIngreso.items.size(); i++) {\r\n                EstadoList.add(LProductoEstadoIngreso.items.get(i).Nombre);\r\n            }\r\n\r\n            ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, EstadoList);\r\n            dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n            cmbEstado.setAdapter(dataAdapter);\r\n\r\n            if (EstadoList.size() > 0) cmbEstado.setSelection(0);\r\n\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            mu.msgbox(\"Listar_Producto_Estado:\" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Listar_Producto_Presentaciones() {\r\n\r\n        try {\r\n            if (gBeProducto.Presentaciones != null) {\r\n\r\n                progress.setMessage(\"Listando presentaciones de producto\");\r\n\r\n                if (gBeProducto.Presentaciones.items != null) {\r\n\r\n                    PresList.clear();\r\n\r\n                    for (int i = 0; i < gBeProducto.Presentaciones.items.size(); i++) {\r\n                        PresList.add(gBeProducto.Presentaciones.items.get(i).Nombre);\r\n                    }\r\n\r\n                    ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, PresList);\r\n                    dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                    cmbPresentacion.setAdapter(dataAdapter);\r\n\r\n                    if (PresList.size() > 0) cmbPresentacion.setSelection(0);\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            mu.msgbox(\"Listar_Producto_Presentaciones:\" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Bloquea_Controles() {\r\n\r\n        try {\r\n\r\n            txtBarra.setSelectAllOnFocus(true);\r\n            txtBarra.requestFocus();\r\n\r\n            txtLote.setFocusable(false);\r\n            txtLote.setFocusableInTouchMode(false);\r\n            txtLote.setClickable(false);\r\n\r\n            cmbPresentacion.setFocusable(false);\r\n            cmbPresentacion.setFocusableInTouchMode(false);\r\n            cmbPresentacion.setClickable(false);\r\n            cmbPresentacion.setEnabled(false);\r\n\r\n            txtUniBas.setFocusable(false);\r\n            txtUniBas.setFocusableInTouchMode(false);\r\n            txtUniBas.setClickable(false);\r\n\r\n            cmbEstado.setFocusable(false);\r\n            cmbEstado.setFocusableInTouchMode(false);\r\n            cmbEstado.setClickable(false);\r\n            cmbEstado.setEnabled(false);\r\n\r\n            txtPesoPick.setFocusable(false);\r\n            txtPesoPick.setFocusableInTouchMode(false);\r\n            txtPesoPick.setClickable(false);\r\n\r\n            txtFechaCad.setFocusable(false);\r\n            txtFechaCad.setFocusableInTouchMode(false);\r\n            txtFechaCad.setClickable(false);\r\n\r\n            Limpia_controles();\r\n\r\n            progress.cancel();\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            mu.msgbox(\"Bloquea_Controles:\" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Limpia_controles() {\r\n        txtBarra.setText(\"\");\r\n        txtLote.setText(\"\");\r\n        cmbPresentacion.setSelection(-1);\r\n        txtUniBas.setText(\"\");\r\n        txtCantidadPick.setText(\"0.00\");\r\n        cmbEstado.setSelection(-1);\r\n        txtPesoPick.setText(\"0.00\");\r\n    }\r\n\r\n    private void Set_dias_Vence() {\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Bloqueando controles\");\r\n\r\n            if(!gBePickingUbic.Fecha_Vence.equals(\"01-01-1900\") && !gBePickingUbic.Fecha_Vence.isEmpty()){\r\n\r\n                trCaducidad.setVisibility(View.VISIBLE);\r\n                txtFechaCad.setText(gBePickingUbic.Fecha_Vence);\r\n\r\n                btnFechaVence.setVisibility(View.VISIBLE);\r\n                btnFechaVence.setText(\"Vence en: \" + DifDias + \" d√≠as\");\r\n\r\n            }else{\r\n\r\n                trCaducidad.setVisibility(View.GONE);\r\n                btnFechaVence.setVisibility(View.GONE);\r\n                txtFechaCad.setText(\"\");\r\n\r\n            }\r\n\r\n            Bloquea_Controles();\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            mu.msgbox(\"Llena_datos_faltantes:\" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Procesa_Barra() {\r\n\r\n        try {\r\n\r\n            if (!txtBarra.getText().toString().isEmpty()) {\r\n\r\n                String vStarWithParameter = \"$\";\r\n\r\n                if (txtBarra.getText().toString().startsWith(\"$\") |\r\n                        txtBarra.getText().toString().startsWith(\"(01)\") |\r\n                        txtBarra.getText().toString().startsWith(vStarWithParameter)) {\r\n\r\n                    int vLengthBarra = txtBarra.getText().toString().length();\r\n\r\n                    if (vLengthBarra > 0) {\r\n\r\n                        Escaneo_Pallet = true;\r\n\r\n                        pLP = txtBarra.getText().toString().replace(\"$\", \"\");\r\n\r\n                        Continua_procesando_barra();\r\n\r\n                    }\r\n\r\n\r\n                } else {\r\n                    Escaneo_Pallet = false;\r\n                    Continua_procesando_barra();\r\n                }\r\n\r\n            }\r\n\r\n\r\n        } catch (Exception e) {\r\n            mu.msgbox(\"Procesa_Barra:\" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Continua_procesando_barra(){\r\n\r\n\r\n        boolean vPalletValido = false;\r\n        boolean vMarcarComoNoEncontrado =false;\r\n\r\n        try{\r\n\r\n            if (TipoLista==1){//Resumido\r\n\r\n                if (Escaneo_Pallet){\r\n\r\n                    if (!gBePickingUbic.Lic_plate.isEmpty()){\r\n\r\n                        if (!gBePickingUbic.Lic_plate.equals(pLP)){\r\n\r\n                            if (ListBeStockPalletEscaneado!=null){\r\n\r\n                                if (ListBeStockPalletEscaneado.items!=null){\r\n\r\n                                    BeStockPallet = stream(ListBeStockPalletEscaneado.items).where(c->c.Stock.IdUbicacion == gBePickingUbic.IdUbicacion).first();\r\n\r\n                                    if (BeStockPallet!=null){\r\n\r\n                                        if (BeStockPallet.Codigo.equals(gBePickingUbic.CodigoProducto)){\r\n\r\n                                            if (BeStockPallet.Stock.Lote.equals(gBePickingUbic.Lote)){\r\n\r\n                                                double vCantDispLP= BeStockPallet.Stock.CantidadUmBas - BeStockPallet.Stock.CantidadReservadaUMBas;\r\n\r\n                                                if (BeStockPallet.Stock.IdPresentacion!=0 && vCantDispLP>0){\r\n                                                    vCantDispLP = mu.round(vCantDispLP/BeStockPallet.Stock.Factor,gl.gCantDecCalculo);\r\n                                                }\r\n\r\n                                                if (vCantDispLP>0){\r\n\r\n                                                    if (vCantDispLP>=gBePickingUbic.Cantidad_Solicitada){\r\n\r\n                                                        msgContinuarDistintoLp(\"#LP. Solicitado <> #LP. Escaneado.\"+\r\n                                                                \"\\n¬øContinuar?\");\r\n\r\n                                                        return;\r\n\r\n                                                    }else{\r\n                                                        mu.msgbox(\"El pallet escaneado no contiene la cantidad solicitada: \"+gBePickingUbic.Cantidad_Solicitada\r\n                                                                +\"\\nCant. Disp:\"+vCantDispLP);\r\n                                                        txtBarra.setSelectAllOnFocus(true);\r\n                                                        txtBarra.requestFocus();\r\n                                                        return;\r\n                                                    }\r\n\r\n                                                }else{\r\n                                                    mu.msgbox(\"El pallet escaneado no est√° disponible o ya fue reservado en un pedido.\");\r\n                                                    txtBarra.setSelectAllOnFocus(true);\r\n                                                    txtBarra.requestFocus();\r\n                                                    return;\r\n                                                }\r\n\r\n                                            }else{\r\n                                                mu.msgbox(\"El lote escaneado de pallet: \"+BeStockPallet.Stock.Lote+\" no coincide con el lote solicitado: \"+gBePickingUbic.Lote);\r\n                                                txtBarra.setSelectAllOnFocus(true);\r\n                                                txtBarra.requestFocus();\r\n                                                return;\r\n                                            }\r\n\r\n                                        }else{\r\n                                            mu.msgbox(\"El c√≥digo escaneado de pallet: \"+pLP+\" no coincide con el pallet de esta ubicaci√≥n: \"+gBePickingUbic.Lic_plate);\r\n                                            txtBarra.setSelectAllOnFocus(true);\r\n                                            txtBarra.requestFocus();\r\n                                            return;\r\n                                        }\r\n\r\n                                    }else{\r\n\r\n                                        BeStockPallet = stream(ListBeStockPalletEscaneado.items).where(c->c.Stock.Lic_plate.equals(pLP)).first();\r\n\r\n                                        if (BeStockPallet!=null){\r\n\r\n                                            List AuxIndex = stream(plistPickingUbi.items).select(c->c.Lic_plate).toList();\r\n                                            int vTempIndex = AuxIndex.indexOf(pLP);\r\n\r\n                                            if (vTempIndex>-1){\r\n\r\n                                                if (plistPickingUbi.items.get(vTempIndex).Cantidad_Solicitada!=plistPickingUbi.items.get(vTempIndex).Cantidad_Recibida){\r\n\r\n                                                    if (plistPickingUbi.items.get(vTempIndex).IdUbicacion==gIdUbicacion){\r\n                                                        gBeProducto = BeStockPallet;\r\n                                                        Cargar_Datos_Producto_Picking_Consolidado();\r\n                                                        return;\r\n                                                    }else{\r\n                                                        mu.msgbox(\"El pallet escaneado : \"+gBePickingUbic.Lic_plate+\" pertenece al picking pero est√° asociado a la ubicaci√≥n: \"+ gBePickingUbic.IdUbicacion+\" y la ubicaci√≥n actual es: \"+gIdUbicacion);\r\n                                                        txtBarra.setSelectAllOnFocus(true);\r\n                                                        txtBarra.requestFocus();\r\n                                                        return;\r\n                                                    }\r\n\r\n                                                }else{\r\n                                                    mu.msgbox(\"El pallet escaneado : \"+pLP+\" ya fue procesado para este picking.\");\r\n                                                    txtBarra.setSelectAllOnFocus(true);\r\n                                                    txtBarra.requestFocus();\r\n                                                    return;\r\n                                                }\r\n\r\n                                            }else{\r\n\r\n                                                if (BeStockPallet.Codigo.equals(gBePickingUbic.CodigoProducto)){\r\n\r\n                                                    if (BeStockPallet.Lote.equals(gBePickingUbic.Lote)){\r\n\r\n                                                        double vCantDispLP = BeStockPallet.Stock.CantidadUmBas - BeStockPallet.Stock.CantidadReservadaUMBas;\r\n\r\n                                                        if (BeStockPallet.Stock.IdPresentacion!=0 && vCantDispLP>0){\r\n                                                            vCantDispLP = mu.round(vCantDispLP/BeStockPallet.Stock.Factor,gl.gCantDecCalculo);\r\n                                                        }\r\n\r\n                                                        if (vCantDispLP>0){\r\n\r\n                                                            if (vCantDispLP>=gBePickingUbic.Cantidad_Solicitada){\r\n\r\n                                                                msgContinuarDistintoLp(\"#LP. Solicitado <> #LP. Escaneado.\"+\r\n                                                                        \"\\n¬øContinuar?\");\r\n\r\n                                                                return;\r\n\r\n                                                            }else{\r\n                                                                mu.msgbox(\"El lote escaneado: \"+BeStockPallet.Stock.Lote+\" del pallet no coincide con el lote solicitado: \"+gBePickingUbic.Lote);\r\n                                                                txtBarra.setSelectAllOnFocus(true);\r\n                                                                txtBarra.requestFocus();\r\n                                                                txtBarra.setText(\"\");\r\n                                                                return;\r\n                                                            }\r\n\r\n                                                        }else{\r\n                                                            mu.msgbox(\"El pallet escaneado no contiene la cantidad solicitada: \"+gBePickingUbic.Cantidad_Solicitada+\r\n                                                                    \"\\nCant. Disp: \"+vCantDispLP);\r\n                                                            txtBarra.setSelectAllOnFocus(true);\r\n                                                            txtBarra.requestFocus();\r\n                                                            return;\r\n                                                        }\r\n                                                    }else{\r\n                                                        mu.msgbox(\"El pallet escaneado no est√° disponible o ya fue reservado en un pedido.\");\r\n                                                        txtBarra.setSelectAllOnFocus(true);\r\n                                                        txtBarra.requestFocus();\r\n                                                        return;\r\n                                                    }\r\n                                                }else{\r\n                                                    mu.msgbox(\"El c√≥digo escaneado de pallet: \"+pLP+\" no coincide con el pallet de esta ubicaci√≥n: \"+gBePickingUbic.Lic_plate);\r\n                                                    txtBarra.setSelectAllOnFocus(true);\r\n                                                    txtBarra.requestFocus();\r\n                                                    txtBarra.setText(\"\");\r\n                                                    return;\r\n                                                }\r\n\r\n                                            }\r\n\r\n                                        }else{\r\n\r\n                                            mu.msgbox(\"El c√≥digo escaneado de pallet: \"+pLP+\" no coincide con el pallet de esta ubicaci√≥n: \"+gBePickingUbic.Lic_plate);\r\n                                            txtBarra.setSelectAllOnFocus(true);\r\n                                            txtBarra.requestFocus();\r\n                                            txtBarra.setText(\"\");\r\n                                            return;\r\n                                        }\r\n\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n\r\n                        }else{\r\n                            vPalletValido = true;\r\n                        }\r\n\r\n                    }else{\r\n                        mu.msgbox(\"El producto en esta ubicaci√≥n no tiene barra de pallet asociada\");\r\n                        txtBarra.setSelectAllOnFocus(true);\r\n                        txtBarra.requestFocus();\r\n                        txtBarra.setText(\"\");\r\n                        return;\r\n                    }\r\n\r\n                }\r\n\r\n                if (Escaneo_Pallet && vPalletValido){\r\n                    Cargar_Datos_Producto_Picking_Consolidado();\r\n\r\n                }else if ((!Escaneo_Pallet) && (!gBePickingUbic.Lic_plate.isEmpty()) &&\r\n                        (!gBePickingUbic.Lic_plate.equals(\"0\")) && (gBePickingUbic.CodigoProducto.equals(txtBarra.getText().toString()))){\r\n\r\n                    msgContinuarPorCodigo(\"Se requiere licencia de pallet para este producto y se ha ingresado el c√≥digo, ¬øest√° seguro de verificar por c√≥digo de producto?\");\r\n                    return;\r\n\r\n                }else{\r\n\r\n                    gBeProducto = new clsBeProducto();\r\n                    execws(4);\r\n                }\r\n\r\n            }else if(TipoLista==2){//Detallado\r\n\r\n                if (Escaneo_Pallet){\r\n\r\n                    if (!gBePickingUbic.Lic_plate.isEmpty()){\r\n\r\n                        if (!gBePickingUbic.Lic_plate.equals(pLP)){\r\n\r\n                            if (ListBeStockPalletEscaneado!=null){\r\n\r\n                                if (ListBeStockPalletEscaneado.items!=null){\r\n\r\n                                    BeStockPallet = stream(ListBeStockPalletEscaneado.items).where(c->c.Stock.IdUbicacion == gBePickingUbic.IdUbicacion).first();\r\n\r\n                                    if (BeStockPallet!=null){\r\n\r\n                                        if (BeStockPallet.Codigo.equals(gBePickingUbic.CodigoProducto)){\r\n\r\n                                            if (BeStockPallet.Stock.Lote.equals(gBePickingUbic.Lote)){\r\n\r\n                                                double vCantDispLP= BeStockPallet.Stock.CantidadUmBas - BeStockPallet.Stock.CantidadReservadaUMBas;\r\n\r\n                                                if (BeStockPallet.Stock.IdPresentacion!=0 && vCantDispLP>0){\r\n                                                    vCantDispLP = mu.round(vCantDispLP/BeStockPallet.Stock.Factor,gl.gCantDecCalculo);\r\n                                                }\r\n\r\n                                                if (vCantDispLP>0){\r\n\r\n                                                    if (vCantDispLP>=gBePickingUbic.Cantidad_Solicitada){\r\n                                                        msgContinuarDistintoLp(\"#LP. Solicitado <> #LP. Escaneado.\"+\r\n                                                                \"\\n¬øContinuar?\");\r\n\r\n                                                        return;\r\n                                                    }else{\r\n                                                        mu.msgbox(\"El pallet escaneado no contiene la cantidad solicitada: \"+gBePickingUbic.Cantidad_Solicitada\r\n                                                                +\"\\nCant. Disp:\"+vCantDispLP);\r\n                                                        txtBarra.setSelectAllOnFocus(true);\r\n                                                        txtBarra.requestFocus();\r\n                                                        return;\r\n                                                    }\r\n\r\n                                                }else{\r\n                                                    mu.msgbox(\"El pallet escaneado no est√° disponible o ya fue reservado en un pedido.\");\r\n                                                    txtBarra.setSelectAllOnFocus(true);\r\n                                                    txtBarra.requestFocus();\r\n                                                    return;\r\n                                                }\r\n\r\n                                            }else{\r\n                                                mu.msgbox(\"El lote escaneado de pallet: \"+BeStockPallet.Stock.Lote+\" no coincide con el lote solicitado: \"+gBePickingUbic.Lote);\r\n                                                txtBarra.setSelectAllOnFocus(true);\r\n                                                txtBarra.requestFocus();\r\n                                                return;\r\n                                            }\r\n\r\n                                        }else{\r\n                                            mu.msgbox(\"El c√≥digo escaneado de pallet: \"+pLP+\" no coincide con el pallet de esta ubicaci√≥n: \"+gBePickingUbic.Lic_plate);\r\n                                            txtBarra.setSelectAllOnFocus(true);\r\n                                            txtBarra.requestFocus();\r\n                                            return;\r\n                                        }\r\n\r\n                                    }else{\r\n\r\n                                        BeStockPallet = stream(ListBeStockPalletEscaneado.items).where(c->c.Stock.Lic_plate.equals(pLP)).first();\r\n\r\n                                        if (BeStockPallet!=null){\r\n\r\n                                            List AuxIndex = stream(plistPickingUbi.items).select(c->c.Lic_plate).toList();\r\n                                            int vTempIndex = AuxIndex.indexOf(pLP);\r\n\r\n                                            if (vTempIndex>-1){\r\n\r\n                                                if (plistPickingUbi.items.get(vTempIndex).Cantidad_Solicitada!=plistPickingUbi.items.get(vTempIndex).Cantidad_Recibida){\r\n\r\n                                                    if (plistPickingUbi.items.get(vTempIndex).IdUbicacion==gIdUbicacion){\r\n                                                        gBeProducto = BeStockPallet;\r\n                                                        Cargar_Datos_Producto_Picking();\r\n                                                        return;\r\n                                                    }else{\r\n                                                        mu.msgbox(\"El pallet escaneado : \"+gBePickingUbic.Lic_plate+\" pertenece al picking pero est√° asociado a la ubicaci√≥n: \"+ gBePickingUbic.IdUbicacion+\" y la ubicaci√≥n actual es: \"+gIdUbicacion);\r\n                                                        txtBarra.setSelectAllOnFocus(true);\r\n                                                        txtBarra.requestFocus();\r\n                                                        return;\r\n                                                    }\r\n\r\n                                                }else{\r\n                                                    mu.msgbox(\"El pallet escaneado : \"+pLP+\" ya fue procesado para este picking.\");\r\n                                                    txtBarra.setSelectAllOnFocus(true);\r\n                                                    txtBarra.requestFocus();\r\n                                                    return;\r\n                                                }\r\n\r\n                                            }else{\r\n\r\n                                                if (BeStockPallet.Codigo.equals(gBePickingUbic.CodigoProducto)){\r\n\r\n                                                    if (BeStockPallet.Lote.equals(gBePickingUbic.Lote)){\r\n\r\n                                                        double vCantDispLP = BeStockPallet.Stock.CantidadUmBas - BeStockPallet.Stock.CantidadReservadaUMBas;\r\n\r\n                                                        if (BeStockPallet.Stock.IdPresentacion!=0 && vCantDispLP>0){\r\n                                                            vCantDispLP = mu.round(vCantDispLP/BeStockPallet.Stock.Factor,gl.gCantDecCalculo);\r\n                                                        }\r\n\r\n                                                        if (vCantDispLP>0){\r\n\r\n                                                            if (vCantDispLP>=gBePickingUbic.Cantidad_Solicitada){\r\n\r\n                                                                msgContinuarDistintoLp(\"#LP. Solicitado <> #LP. Escaneado.\"+\r\n                                                                        \"\\n¬øContinuar?\");\r\n\r\n                                                                return;\r\n\r\n                                                            }else{\r\n                                                                mu.msgbox(\"El lote escaneado: \"+BeStockPallet.Stock.Lote+\" del pallet no coincide con el lote solicitado: \"+gBePickingUbic.Lote);\r\n                                                                txtBarra.setSelectAllOnFocus(true);\r\n                                                                txtBarra.requestFocus();\r\n                                                                txtBarra.setText(\"\");\r\n                                                                return;\r\n                                                            }\r\n\r\n                                                        }else{\r\n                                                            mu.msgbox(\"El pallet escaneado no contiene la cantidad solicitada: \"+gBePickingUbic.Cantidad_Solicitada+\r\n                                                                    \"\\nCant. Disp: \"+vCantDispLP);\r\n                                                            txtBarra.setSelectAllOnFocus(true);\r\n                                                            txtBarra.requestFocus();\r\n                                                            return;\r\n                                                        }\r\n                                                    }else{\r\n                                                        mu.msgbox(\"El pallet escaneado no est√° disponible o ya fue reservado en un pedido.\");\r\n                                                        txtBarra.setSelectAllOnFocus(true);\r\n                                                        txtBarra.requestFocus();\r\n                                                        return;\r\n                                                    }\r\n                                                }else{\r\n                                                    mu.msgbox(\"El c√≥digo escaneado de pallet: \"+pLP+\" no coincide con el pallet de esta ubicaci√≥n: \"+gBePickingUbic.Lic_plate);\r\n                                                    txtBarra.setSelectAllOnFocus(true);\r\n                                                    txtBarra.requestFocus();\r\n                                                    txtBarra.setText(\"\");\r\n                                                    return;\r\n                                                }\r\n\r\n                                            }\r\n\r\n                                        }else{\r\n\r\n                                            mu.msgbox(\"El c√≥digo escaneado de pallet: \"+pLP+\" no coincide con el pallet de esta ubicaci√≥n: \"+gBePickingUbic.Lic_plate);\r\n                                            txtBarra.setSelectAllOnFocus(true);\r\n                                            txtBarra.requestFocus();\r\n                                            txtBarra.setText(\"\");\r\n                                            return;\r\n                                        }\r\n\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n\r\n                        }else{\r\n                            vPalletValido = true;\r\n                        }\r\n\r\n                    }else{\r\n                        mu.msgbox(\"El producto en esta ubicaci√≥n no tiene barra de pallet asociada\");\r\n                        txtBarra.setSelectAllOnFocus(true);\r\n                        txtBarra.requestFocus();\r\n                        txtBarra.setText(\"\");\r\n                        return;\r\n                    }\r\n\r\n                }\r\n\r\n                if (Escaneo_Pallet && vPalletValido){\r\n                    Cargar_Datos_Producto_Picking();\r\n\r\n                }else if ((!Escaneo_Pallet) && (!gBePickingUbic.Lic_plate.isEmpty()) &&\r\n                        (!gBePickingUbic.Lic_plate.equals(\"0\")) && (gBePickingUbic.CodigoProducto.equals(txtBarra.getText().toString()))){\r\n\r\n                    msgContinuarPorCodigo(\"Se requiere licencia de pallet para este producto y se ha ingresado el c√≥digo, ¬øest√° seguro de verificar por c√≥digo de producto?\");\r\n                    return;\r\n\r\n                }else{\r\n\r\n                    gBeProducto = new clsBeProducto();\r\n                    execws(4);\r\n                }\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Continua_procesando_barra:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgContinuarDistintoLp(String msg) {\r\n\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(msg);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    Continua_Con_Lp_Distinto();\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    return;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n    }\r\n\r\n    private void msgContinuarPorCodigo(String msg) {\r\n\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(msg);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    if (TipoLista==1){\r\n                        Cargar_Datos_Producto_Picking_Consolidado();\r\n                    }else{\r\n                        Cargar_Datos_Producto_Picking();\r\n                    }\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    return;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n    }\r\n\r\n    private void Continua_Con_Lp_Distinto(){\r\n\r\n        try{\r\n\r\n            gBeProducto = BeStockPallet;\r\n\r\n            clsBeStock_resList lBeStockRes = new clsBeStock_resList();\r\n            clsBeStock_res BeStockRes= new clsBeStock_res();\r\n\r\n            CantReemplazar = gBePickingUbic.Cantidad_Solicitada;\r\n\r\n            lblLicPlate.setText(\"NLP:\"+BeStockPallet.Stock.Lic_plate);\r\n            ReemplazoLP = true;\r\n            gBeProducto = BeStockPallet;\r\n\r\n            if (TipoLista==1){\r\n                Cargar_Datos_Producto_Picking_Consolidado();\r\n            }else{\r\n                Cargar_Datos_Producto_Picking();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Continua_Con_Lp_Distinto\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Cargar_Datos_Producto_Picking(){\r\n\r\n        double CantARec = 0;\r\n\r\n        try{\r\n\r\n            CantARec = gBePickingUbic.Cantidad_Solicitada - gBePickingUbic.Cantidad_Recibida;\r\n\r\n            if(!gBePickingUbic.Fecha_Vence.equals(\"01-01-1900\") && !gBePickingUbic.Fecha_Vence.isEmpty()){\r\n                trCaducidad.setVisibility(View.VISIBLE);\r\n                txtFechaCad.setText(gBePickingUbic.Fecha_Vence);\r\n                btnFechaVence.setVisibility(View.VISIBLE);\r\n            }else{\r\n                trCaducidad.setVisibility(View.GONE);\r\n                btnFechaVence.setVisibility(View.GONE);\r\n            }\r\n\r\n            txtLote.setText(gBePickingUbic.Lote);\r\n\r\n            if (gBeProducto==null){\r\n\r\n                //#EJC20200610: No me gusta como se ve esto, pero tengo demo ma;ana\r\n                gBeProducto = new clsBeProducto();\r\n                execws(4);\r\n                return;\r\n            }\r\n\r\n            if (gBePickingUbic.IdPresentacion>0){\r\n                if (gBeProducto.Presentaciones!=null){\r\n                    if (gBeProducto.Presentaciones.items!=null){\r\n                        List Aux = stream(gBeProducto.Presentaciones.items).select(c->c.IdPresentacion).toList();\r\n                        int inx= Aux.indexOf(gBePickingUbic.IdPresentacion);\r\n                        cmbPresentacion.setSelection(inx);\r\n                    }\r\n                }\r\n            }\r\n\r\n            txtUniBas.setText(gBePickingUbic.ProductoUnidadMedida);\r\n            if (CantARec<=0){\r\n                txtCantidadPick.setText(\"\"+0);\r\n            }else{\r\n                txtCantidadPick.setText(\"\"+mu.frmdecimal(CantARec,gl.gCantDecDespliegue));\r\n            }\r\n\r\n            if (gBePickingUbic.IdProductoEstado>0){\r\n                if (LProductoEstadoIngreso!=null){\r\n                    List Aux = stream(LProductoEstadoIngreso.items).select(c->c.IdEstado).toList();\r\n                    int inx= Aux.indexOf(gBePickingUbic.IdProductoEstado);\r\n                    cmbEstado.setSelection(inx);\r\n                }\r\n            }\r\n\r\n            if (gBePickingUbic.Peso_solicitado>0){\r\n                txtPesoPick.setText(\"\"+mu.frmdecimal(gBePickingUbic.Peso_solicitado,gl.gCantDecDespliegue));\r\n            }else{\r\n                txtPesoPick.setText(\"0\");\r\n            }\r\n\r\n            txtCantidadPick.selectAll();\r\n            txtCantidadPick.setSelectAllOnFocus(true);\r\n            txtCantidadPick.requestFocus();\r\n            btnConfirmarPk.setEnabled(true);\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Cargar_Datos_Producto_Picking:\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void Cargar_Datos_Producto_Picking_Consolidado(){\r\n\r\n        double CantARec=0;\r\n        double CantSol=0;\r\n        double CantRec=0;\r\n\r\n        try{\r\n\r\n            CantSol = stream(plistPickingUbi.items).sum(clsBeTrans_picking_ubic::getCantidad_Solicitada);\r\n            CantRec = stream(plistPickingUbi.items).sum(clsBeTrans_picking_ubic::getCantidad_Recibida);\r\n\r\n            CantARec = CantSol - CantRec;\r\n\r\n            if(!gBePickingUbic.Fecha_Vence.equals(\"01-01-1900\") && !gBePickingUbic.Fecha_Vence.isEmpty()){\r\n\r\n                trCaducidad.setVisibility(View.VISIBLE);\r\n                txtFechaCad.setText(gBePickingUbic.Fecha_Vence);\r\n\r\n                btnFechaVence.setVisibility(View.VISIBLE);\r\n                btnFechaVence.setText(\"Vence en: \" + DifDias + \" d√≠as\");\r\n\r\n            }else{\r\n\r\n                trCaducidad.setVisibility(View.GONE);\r\n                btnFechaVence.setVisibility(View.GONE);\r\n                txtFechaCad.setText(\"\");\r\n\r\n            }\r\n\r\n            txtLote.setText(gBePickingUbic.Lote);\r\n\r\n            if (gBePickingUbic.IdPresentacion>0){\r\n                List Aux = stream(gBeProducto.Presentaciones.items).select(c->c.IdPresentacion).toList();\r\n                int inx= Aux.indexOf(gBePickingUbic.IdPresentacion);\r\n                cmbPresentacion.setSelection(inx);\r\n            }\r\n\r\n            txtUniBas.setText(gBePickingUbic.ProductoUnidadMedida);\r\n            if (CantARec<=0){\r\n                txtCantidadPick.setText(\"\"+0);\r\n            }else{\r\n                txtCantidadPick.setText(\"\"+mu.frmdecimal(CantARec,gl.gCantDecDespliegue));\r\n            }\r\n\r\n            if (gBePickingUbic.IdProductoEstado>0){\r\n                List Aux = stream(LProductoEstadoIngreso.items).select(c->c.IdEstado).toList();\r\n                int inx= Aux.indexOf(gBePickingUbic.IdProductoEstado);\r\n                cmbEstado.setSelection(inx);\r\n            }\r\n\r\n            if (gBePickingUbic.Peso_solicitado>0){\r\n                txtPesoPick.setText(\"\"+mu.frmdecimal(gBePickingUbic.Peso_solicitado,gl.gCantDecDespliegue));\r\n            }else{\r\n                txtPesoPick.setText(\"0\");\r\n            }\r\n\r\n            txtCantidadPick.selectAll();\r\n            txtCantidadPick.setSelectAllOnFocus(true);\r\n            txtCantidadPick.requestFocus();\r\n            btnConfirmarPk.setEnabled(true);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Cargar_Datos_Producto_Picking_Consolidado:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    public void BotonGuardar(View view){\r\n        Procesar_Registro();\r\n    }\r\n\r\n    private void Procesar_Registro(){\r\n\r\n        try{\r\n\r\n            if (!txtCantidadPick.getText().toString().isEmpty()||!txtCantidadPick.getText().equals(\"0\")){\r\n\r\n                if (TipoLista==2){\r\n\r\n                    Double vDif = gBePickingUbic.Cantidad_Solicitada - Double.parseDouble(txtCantidadPick.getText().toString()) + gBePickingUbic.Cantidad_Recibida;\r\n\r\n                    if (vDif<0){\r\n                        mu.msgbox(\"La cantidad es mayor a la solicitada\");\r\n                        txtCantidadPick.selectAll();\r\n                        txtCantidadPick.setSelectAllOnFocus(true);\r\n                        txtCantidadPick.requestFocus();\r\n                        return;\r\n                    }else{\r\n                        Guardar_Picking();\r\n                    }\r\n\r\n                }else{\r\n\r\n                    double vCantidadRec = 0;\r\n                    double vCantidadSol = 0;\r\n\r\n                    vCantidadRec = stream(plistPickingUbi.items).sum(clsBeTrans_picking_ubic::getCantidad_Recibida);\r\n                    vCantidadSol = stream(plistPickingUbi.items).sum(clsBeTrans_picking_ubic::getCantidad_Solicitada);\r\n\r\n                    if (Double.parseDouble(txtCantidadPick.getText().toString())+vCantidadRec>vCantidadSol){\r\n                        mu.msgbox(\"La cantidad es mayor a la solicitada\");\r\n                        txtCantidadPick.selectAll();\r\n                        txtCantidadPick.setSelectAllOnFocus(true);\r\n                        txtCantidadPick.requestFocus();\r\n                        return;\r\n                    }else{\r\n                        Guardar_Picking();\r\n                    }\r\n\r\n                }\r\n\r\n            }else{\r\n                mu.msgbox(\"La cantidad no puede ser vac√≠a o 0\");\r\n                return;\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Procesar_Registro:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Guardar_Picking(){\r\n\r\n        double CantPendiente = 0;\r\n        double Cantidad = 0;\r\n\r\n        try{\r\n\r\n            if (TipoLista==2){\r\n\r\n                double vDif = gBePickingUbic.Cantidad_Solicitada - Double.parseDouble(txtCantidadPick.getText().toString()) + gBePickingUbic.Cantidad_Recibida;\r\n\r\n                if (vDif<0){\r\n                    mu.msgbox(\"La cantidad recibida es mayor a la cantidad solicitada, no se puede ingresar esa cantidad\");\r\n                    return;\r\n                }\r\n\r\n                gBePickingUbic.Cantidad_Recibida +=Double.parseDouble(txtCantidadPick.getText().toString());\r\n\r\n                if (gBePicking.verifica_auto){\r\n                    gBePickingUbic.Cantidad_Verificada = gBePickingUbic.Cantidad_Recibida;\r\n                }\r\n\r\n                gBePickingUbic.Peso_recibido += Double.parseDouble(txtPesoPick.getText().toString());\r\n                gBePickingUbic.Acepto = true;\r\n                gBePickingUbic.Encontrado=true;\r\n                gBePickingUbic.IdOperadorBodega_Pickeo = gl.OperadorBodega.IdOperador;\r\n                gBePickingUbic.Fecha_Vence = du.convierteFecha(gBePickingUbic.Fecha_Vence);\r\n                gBePickingUbic.Fec_mod = du.getFechaActual();\r\n\r\n                BePickingDet.IdPickingDet = gBePickingUbic.IdPickingDet;\r\n                execws(5);\r\n\r\n            }else{\r\n\r\n                Cantidad = Double.parseDouble(txtCantidadPick.getText().toString());\r\n\r\n                pSubListPickingU = new clsBeTrans_picking_ubicList();\r\n\r\n                pSubListPickingU.items = stream(plistPickingUbi.items).where(c->c.IdUbicacion==gBePickingUbic.IdUbicacion).toList();\r\n\r\n                execws(9);\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Guardar_Picking:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    public void BotonReemplazo(View view){\r\n\r\n        try {\r\n\r\n            Tipo=1;\r\n\r\n            if (txtBarra.getText().toString().isEmpty()){\r\n                mu.msgbox(\"Ingrese c√≥digo del producto\");\r\n                txtBarra.setSelectAllOnFocus(true);\r\n                txtBarra.requestFocus();\r\n                return;\r\n            }\r\n\r\n            if (txtCantidadPick.getText().toString().equals(\"0\")||txtCantidadPick.getText().toString().isEmpty()||txtCantidadPick.getText().toString().equals(\"\")){\r\n                mu.msgbox(\"Ingrese la cantidad de producto a reemplazar\");\r\n                txtCantidadPick.setSelectAllOnFocus(true);\r\n                txtCantidadPick.requestFocus();\r\n                return;\r\n            }\r\n\r\n            CantReemplazar = Double.parseDouble(txtCantidadPick.getText().toString());\r\n\r\n            msgReemplazo(\"¬øMarcar producto para reemplazo?\");\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"BotonReemplazo:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    public void BotonNoEn(View view){\r\n\r\n        try {\r\n\r\n            Tipo=2;\r\n\r\n            if (txtBarra.getText().toString().isEmpty()){\r\n                mu.msgbox(\"Ingrese c√≥digo del producto\");\r\n                txtBarra.setSelectAllOnFocus(true);\r\n                txtBarra.requestFocus();\r\n                return;\r\n            }\r\n\r\n            if (txtCantidadPick.getText().toString().equals(\"0\")||txtCantidadPick.getText().toString().isEmpty()||txtCantidadPick.getText().toString().equals(\"\")){\r\n                mu.msgbox(\"Ingrese la cantidad de producto a reemplazar\");\r\n                txtCantidadPick.setSelectAllOnFocus(true);\r\n                txtCantidadPick.requestFocus();\r\n                return;\r\n            }\r\n\r\n            CantReemplazar = Double.parseDouble(txtCantidadPick.getText().toString());\r\n\r\n            msgReemplazo(\"¬øMarcar producto como No Encontrado?\");\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"BotonReemplazo:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Continua_reemplazo(){\r\n\r\n        try {\r\n\r\n            if (Tipo == 1) {\r\n                browse = 1;\r\n                startActivity(new Intent(this, frm_danado_picking.class));\r\n            }else{\r\n                browse = 1;\r\n                startActivity(new Intent(this, frm_list_prod_reemplazo_picking.class));\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Continua_reemplazo:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgReemplazo(String msg) {\r\n\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(msg);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    Continua_reemplazo();\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    return;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n    }\r\n\r\n    public class WebServiceHandler extends WebService {\r\n\r\n        public WebServiceHandler(PBase Parent,String Url) {\r\n            super(Parent,Url);\r\n        }\r\n\r\n        @Override\r\n        public void wsExecute(){\r\n            try {\r\n                switch (ws.callback) {\r\n                    case 1:\r\n                        callMethod(\"Get_Producto_By_IdProductoBodega\",\"IdProductoBodega\",gBePickingUbic.IdProductoBodega);\r\n                        break;\r\n                    case 2:\r\n                        callMethod(\"Get_Estados_By_IdPropietario_And_IdBodega\",\"pIdPropietario\",gBeProducto.Propietario.IdPropietario,\"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 3:\r\n                        callMethod(\"Get_All_Presentaciones_By_IdProducto\",\"pIdProducto\",gBeProducto.IdProducto,\"pActivo\",true);\r\n                        break;\r\n                    case 4:\r\n                        callMethod(\"Get_BeProducto_By_Codigo_For_HH\",\"pCodigo\",txtBarra.getText().toString(),\"IdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 5:\r\n                        callMethod(\"ObtenerPickingDet\",\"oBeTrans_picking_det\",BePickingDet);\r\n                        break;\r\n                    case 6:\r\n                        callMethod(\"Get_Single_StockRes\",\"pBeStock_res\",BeStockRes);\r\n                        break;\r\n                    case 7:\r\n                        callMethod(\"Actualizar_Picking\",\"oBeTrans_picking_ubic\",gBePickingUbic,\"BeStockRes\",BeStockRes,\r\n                                \"oBeTrans_picking_det\",BePickingDet,\"IdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 8:\r\n                        callMethod(\"Actualizar_Picking_Con_Reemplazo_De_Pallet\",\"oBeTrans_picking_ubic\",gBePickingUbic,\r\n                                \"BeStockRes\",BeStockRes,\"oBeTrans_picking_det\",BePickingDet,\"IdBodega\",gl.IdBodega,\"pBeStockPalletReemplazo\",BeStockPallet.Stock);\r\n                        break;\r\n                    case 9:\r\n                        callMethod(\"Actualiza_Picking_Consolidado\",\"pBePickingUbicList\",pSubListPickingU.items,\r\n                                \"pIdOperador\",gl.OperadorBodega.IdOperador,\"ReemplazoLP\",ReemplazoLP,\"pCantidad\",Double.parseDouble(txtCantidadPick.getText().toString()),\r\n                                \"pPeso\",Double.parseDouble(txtPesoPick.getText().toString()),\"BeStockPallet\",BeStockPallet.Stock);\r\n                        break;\r\n                }\r\n\r\n            } catch (Exception e) {\r\n                progress.cancel();\r\n                error=e.getMessage();errorflag =true;msgbox(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void wsCallBack(Boolean throwing,String errmsg,int errlevel) {\r\n        try {\r\n            if (throwing) throw new Exception(errmsg);\r\n\r\n            switch (ws.callback) {\r\n                case 1:\r\n                    processProducto();\r\n                    break;\r\n                case 2:\r\n                    processEstadoProducto();\r\n                    break;\r\n                case 3:\r\n                    processPresentacionesProducto();\r\n                    break;\r\n                case 4:\r\n                    processProductoForHH();\r\n                    break;\r\n                case 5:\r\n                    processBePickingDet();\r\n                    break;\r\n                case 6:\r\n                    processBeStockRes();\r\n                    break;\r\n                case 7:\r\n                    if (TipoLista==2){\r\n                        doExit();\r\n                    }\r\n                    break;\r\n                case 8:\r\n                    if (TipoLista==2){\r\n                        doExit();\r\n                    }\r\n                    break;\r\n                case 9:\r\n                    doExit();\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processProducto(){\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Cargando datos de producto\");\r\n\r\n            gBeProducto = xobj.getresult(clsBeProducto.class,\"Get_Producto_By_IdProductoBodega\");\r\n\r\n            if (gBeProducto!=null){\r\n\r\n                gBeProducto.IdProductoBodega = gBePickingUbic.IdProductoBodega;\r\n\r\n                execws(2);\r\n\r\n            }else{\r\n                progress.cancel();\r\n                mu.msgbox(\"El producto no est√° definido\");\r\n                super.finish();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            mu.msgbox(\"processProducto:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processEstadoProducto(){\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Obteniendo estados de producto\");\r\n\r\n            LProductoEstadoIngreso = xobj.getresult(clsBeProducto_estadoList.class,\"Get_Estados_By_IdPropietario_And_IdBodega\");\r\n\r\n            if (gBeProducto.Presentaciones!=null){\r\n                if (gBeProducto.Presentaciones.items!=null){\r\n                    Listar_Producto_Estado();\r\n                    Listar_Producto_Presentaciones();\r\n                    Set_dias_Vence();\r\n                }else{\r\n                    execws(3);\r\n                }\r\n            }else{\r\n                execws(3);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            mu.msgbox(\"processEstadoProducto:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processPresentacionesProducto(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo presentaciones de producto\");\r\n\r\n            gBeProducto.Presentaciones = xobj.getresult(clsBeProducto_PresentacionList.class,\"Get_All_Presentaciones_By_IdProducto\");\r\n\r\n            Listar_Producto_Estado();\r\n            Listar_Producto_Presentaciones();\r\n            Set_dias_Vence();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processPresentacionesProducto:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processProductoForHH(){\r\n\r\n        try {\r\n\r\n            gBeProducto = xobj.getresult(clsBeProducto.class, \"Get_BeProducto_By_Codigo_For_HH\");\r\n\r\n            if (gBeProducto!=null){\r\n\r\n                if (gBeProducto.Codigo.equals(gBePickingUbic.CodigoProducto)){\r\n                    if (TipoLista==1){\r\n                        Cargar_Datos_Producto_Picking_Consolidado();\r\n                    }else{\r\n                        Cargar_Datos_Producto_Picking();\r\n                    }\r\n                }else{\r\n                    mu.msgbox(\"El c√≥digo ingresado no es el v√°lido para la l√≠nea de picking\");\r\n                    btnConfirmarPk.setEnabled(false);\r\n                    txtBarra.setSelectAllOnFocus(true);\r\n                    txtBarra.requestFocus();\r\n                }\r\n\r\n            }else{\r\n\r\n                mu.msgbox(\"El c√≥digo ingresado no es el v√°lido para la l√≠nea de picking\");\r\n                btnConfirmarPk.setEnabled(false);\r\n                txtBarra.setSelectAllOnFocus(true);\r\n                txtBarra.requestFocus();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processProductoForHH:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processBePickingDet(){\r\n\r\n        try{\r\n\r\n            BePickingDet = xobj.getresultSingle(clsBeTrans_picking_det.class,\"oBeTrans_picking_det\");\r\n            BePickingDet.Cantidad_recibida+=Double.parseDouble(txtCantidadPick.getText().toString());\r\n            BePickingDet.User_mod = gl.OperadorBodega.IdOperador+\"\";\r\n            BePickingDet.Fec_mod =  du.getFechaActual();\r\n\r\n            BeStockRes.IdStockRes = gBePickingUbic.IdStockRes;\r\n            execws(6);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processBePickingDet:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processBeStockRes(){\r\n\r\n        try{\r\n\r\n            BeStockRes = xobj.getresultSingle(clsBeStock_res.class,\"pBeStock_res\");\r\n\r\n            BeStockRes.Estado = \"PICKEADO\";\r\n            BeStockRes.User_mod = gl.OperadorBodega.IdOperador+\"\";\r\n            BeStockRes.Fec_mod = du.getFechaActual();\r\n\r\n            if (!ReemplazoLP){\r\n                execws(7);\r\n            }else{\r\n                execws(8);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processBeStockRes:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void execws(int callbackvalue) {\r\n        ws.callback=callbackvalue;\r\n        ws.execute();\r\n    }\r\n\r\n\r\n    private void msgAskExit(String msg) {\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(\"¬ø\" + msg + \"?\");\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    doExit();\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    return;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void doExit(){\r\n        try{\r\n\r\n          Escaneo_Pallet = false;\r\n            super.finish();\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    public void ExitFormPick(View view){\r\n        msgAskExit(\"Est√° seguro de salir\");\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        try{\r\n            msgAskExit(\"Est√° seguro de salir\");\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n\r\n        try{\r\n\r\n            super.onResume();\r\n\r\n            if (browse==1){\r\n                browse=0;\r\n                super.finish();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"OnResume\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/dts/tom/Transacciones/Picking/frm_picking_datos.java	(revision 5deab67d6a21a44cc275f189c4f92dc1aa94a3e9)
+++ app/src/main/java/com/dts/tom/Transacciones/Picking/frm_picking_datos.java	(date 1612942954552)
@@ -509,6 +509,7 @@
 
                                                     if (plistPickingUbi.items.get(vTempIndex).IdUbicacion==gIdUbicacion){
                                                         gBeProducto = BeStockPallet;
+                                                        //Primer llamado
                                                         Cargar_Datos_Producto_Picking_Consolidado();
                                                         return;
                                                     }else{
@@ -606,6 +607,7 @@
                 }
 
                 if (Escaneo_Pallet && vPalletValido){
+                    //Segundo llamado
                     Cargar_Datos_Producto_Picking_Consolidado();
 
                 }else if ((!Escaneo_Pallet) && (!gBePickingUbic.Lic_plate.isEmpty()) &&
@@ -617,6 +619,7 @@
                 }else{
 
                     gBeProducto = new clsBeProducto();
+                    //Get_BeProducto_By_Codigo_For_HH (Primera vez)
                     execws(4);
                 }
 
@@ -697,6 +700,7 @@
 
                                                     if (plistPickingUbi.items.get(vTempIndex).IdUbicacion==gIdUbicacion){
                                                         gBeProducto = BeStockPallet;
+                                                        //Tercer llamado
                                                         Cargar_Datos_Producto_Picking();
                                                         return;
                                                     }else{
@@ -794,6 +798,7 @@
                 }
 
                 if (Escaneo_Pallet && vPalletValido){
+                    //Cuarto llamado
                     Cargar_Datos_Producto_Picking();
 
                 }else if ((!Escaneo_Pallet) && (!gBePickingUbic.Lic_plate.isEmpty()) &&
@@ -804,8 +809,16 @@
 
                 }else{
 
-                    gBeProducto = new clsBeProducto();
-                    execws(4);
+                    //#CKFK 20210210 Puse esto en comentario porque inicializaba el producto, y daba error
+                    // porque no se puede buscar en la vista VW_ProductoSI por LicPlate
+
+                   //gBeProducto = new clsBeProducto();
+                   // execws(4); //Get_BeProducto_By_Codigo_For_HH (Segunda vez)
+
+                    msgbox("El c√≥digo de licencia no es v√°lido, ingr√©selo nuevamente");
+                    btnConfirmarPk.setEnabled(false);
+                    txtBarra.setSelectAllOnFocus(true);
+                    txtBarra.requestFocus();
                 }
 
             }
@@ -859,6 +872,7 @@
                     if (TipoLista==1){
                         Cargar_Datos_Producto_Picking_Consolidado();
                     }else{
+                        //Quinto llamado
                         Cargar_Datos_Producto_Picking();
                     }
                 }
@@ -895,6 +909,7 @@
             if (TipoLista==1){
                 Cargar_Datos_Producto_Picking_Consolidado();
             }else{
+                //Sexto llamado
                 Cargar_Datos_Producto_Picking();
             }
 
@@ -926,6 +941,7 @@
 
                 //#EJC20200610: No me gusta como se ve esto, pero tengo demo ma;ana
                 gBeProducto = new clsBeProducto();
+                //Get_BeProducto_By_Codigo_For_HH (Tercera vez)
                 execws(4);
                 return;
             }
@@ -1266,7 +1282,9 @@
                         callMethod("Get_All_Presentaciones_By_IdProducto","pIdProducto",gBeProducto.IdProducto,"pActivo",true);
                         break;
                     case 4:
-                        callMethod("Get_BeProducto_By_Codigo_For_HH","pCodigo",txtBarra.getText().toString(),"IdBodega",gl.IdBodega);
+                        callMethod("Get_BeProducto_By_Codigo_For_HH",
+                                "pCodigo",txtBarra.getText().toString().replace("$", ""),
+                                "IdBodega",gl.IdBodega);
                         break;
                     case 5:
                         callMethod("ObtenerPickingDet","oBeTrans_picking_det",BePickingDet);
@@ -1420,6 +1438,7 @@
                     if (TipoLista==1){
                         Cargar_Datos_Producto_Picking_Consolidado();
                     }else{
+                        //S√©ptimo llamado
                         Cargar_Datos_Producto_Picking();
                     }
                 }else{
Index: app/src/main/res/layout/activity_frm_cambio_ubicacion_ciega.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".Transacciones.CambioUbicacion.frm_cambio_ubicacion_ciega\">\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/relbot\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"48dp\"\r\n        android:layout_alignParentStart=\"true\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_marginStart=\"0dp\"\r\n        android:layout_marginBottom=\"1dp\"\r\n        android:background=\"@drawable/color_medium\">\r\n\r\n        <Button\r\n            android:id=\"@+id/btnBack\"\r\n            android:layout_width=\"61dp\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_alignParentStart=\"true\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_marginBottom=\"0dp\"\r\n            android:background=\"@drawable/back\"\r\n            android:onClick=\"Regresar\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/btnGuardarCiega\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_alignParentEnd=\"true\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_toEndOf=\"@+id/btnBack\"\r\n            android:background=\"@drawable/color_medium\"\r\n            android:onClick=\"AplicarCambio\"\r\n            android:text=\"Procesar\"\r\n            android:textColor=\"@android:color/background_light\"\r\n            android:textSize=\"24sp\"\r\n            android:textStyle=\"bold\" />\r\n    </RelativeLayout>\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/reltop\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"48dp\"\r\n        android:layout_alignParentStart=\"false\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:background=\"@drawable/color_medium\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/lblTituloForma\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:gravity=\"center\"\r\n            android:text=\"Cambio de ubicaci√≥n ciega\"\r\n            android:textColor=\"#FFFFFF\"\r\n            android:textSize=\"18sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n    </RelativeLayout>\r\n\r\n    <ScrollView\r\n        android:id=\"@+id/scrollCiego\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_above=\"@+id/relbot\"\r\n        android:layout_below=\"@+id/reltop\"\r\n        android:layout_alignParentStart=\"true\"\r\n        android:background=\"#F8DEDE\">\r\n\r\n        <LinearLayout\r\n            android:id=\"@+id/LinearCiego\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <TableRow\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/lblOrigen\"\r\n                    android:layout_width=\"150dp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:paddingLeft=\"5dp\"\r\n                    android:text=\"Origen:\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"16sp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <EditText\r\n                    android:id=\"@+id/txtUbicOrigen\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:inputType=\"number\"\r\n                    android:textColor=\"@android:color/black\" />\r\n            </TableRow>\r\n\r\n            <TableRow\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/lblUbicCompleta\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"40dp\"\r\n                    android:layout_marginStart=\"0dp\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:paddingLeft=\"5dp\"\r\n                    android:text=\"-\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"18sp\" />\r\n            </TableRow>\r\n\r\n            <TableRow\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/textView26\"\r\n                    style=\"@style/StyleText\"\r\n                    android:layout_width=\"150dp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:text=\"Lic Plate:\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"16sp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <EditText\r\n                    android:id=\"@+id/txtLipPlate\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:inputType=\"text\" />\r\n            </TableRow>\r\n\r\n            <TableRow\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/lblCodigo\"\r\n                    android:layout_width=\"150dp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_marginTop=\"0dp\"\r\n                    android:layout_marginEnd=\"0dp\"\r\n                    android:layout_marginBottom=\"0dp\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:paddingLeft=\"5dp\"\r\n                    android:text=\"C√≥digo:\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"16sp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <EditText\r\n                    android:id=\"@+id/txtCodigoPrd\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:inputType=\"textPersonName\"\r\n                    android:textColor=\"@android:color/black\" />\r\n            </TableRow>\r\n\r\n            <TableRow\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/lblDescProducto\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"40dp\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:paddingLeft=\"5dp\"\r\n                    android:text=\"-\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"18sp\" />\r\n            </TableRow>\r\n\r\n            <TableRow\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/lblPresentacion\"\r\n                    android:layout_width=\"150dp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_marginBottom=\"0dp\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:paddingLeft=\"5dp\"\r\n                    android:text=\"Presentaci√≥n:\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"16sp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <Spinner\r\n                    android:id=\"@+id/cmbPresentacion\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"45dp\"\r\n                    android:layout_marginEnd=\"0dp\" />\r\n            </TableRow>\r\n\r\n            <TableRow\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/lblLote\"\r\n                    android:layout_width=\"150dp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_marginStart=\"0dp\"\r\n                    android:layout_marginTop=\"0dp\"\r\n                    android:layout_marginEnd=\"0dp\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:paddingLeft=\"5dp\"\r\n                    android:text=\"Lote:\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"16sp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <Spinner\r\n                    android:id=\"@+id/cmbLote\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"45dp\" />\r\n\r\n            </TableRow>\r\n\r\n            <TableRow\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/lblVence\"\r\n                    android:layout_width=\"150dp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:paddingLeft=\"5dp\"\r\n                    android:text=\"Vence:\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"16sp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <Spinner\r\n                    android:id=\"@+id/cmbVence\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"45dp\" />\r\n            </TableRow>\r\n\r\n            <TableRow\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/lblEstadoOrigen\"\r\n                    android:layout_width=\"150dp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:paddingLeft=\"5dp\"\r\n                    android:text=\"Estado:\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"16sp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <Spinner\r\n                    android:id=\"@+id/cmbEstadoOrigen\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"45dp\" />\r\n\r\n            </TableRow>\r\n\r\n            <TableRow\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/lblCantidad\"\r\n                    android:layout_width=\"150dp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:paddingLeft=\"5dp\"\r\n                    android:text=\"Cantidad:\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"16sp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <EditText\r\n                    android:id=\"@+id/txtCantidad\"\r\n                    android:layout_width=\"150dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:inputType=\"numberDecimal\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"24sp\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/lblCant\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_marginBottom=\"0dp\"\r\n                    android:gravity=\"right|center_vertical\"\r\n                    android:numeric=\"decimal\"\r\n                    android:paddingLeft=\"3dp\"\r\n                    android:text=\"00.00\"\r\n                    android:textColor=\"@color/colorPrimary\"\r\n                    android:textSize=\"17sp\" />\r\n            </TableRow>\r\n--PEso\r\n\r\n            <TableRow\r\n                android:id=\"@+id/trPeso\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/lblPeso\"\r\n                    android:layout_width=\"150dp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:paddingLeft=\"5dp\"\r\n                    android:text=\"Peso:\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"16sp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <EditText\r\n                    android:id=\"@+id/txtPeso\"\r\n                    android:layout_width=\"150dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:inputType=\"numberDecimal\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"24sp\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/lblPesoEst\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_marginBottom=\"0dp\"\r\n                    android:gravity=\"right|center_vertical\"\r\n                    android:inputType=\"numberDecimal\"\r\n                    android:paddingLeft=\"3dp\"\r\n                    android:text=\"0.00\"\r\n                    android:textColor=\"@color/colorPrimary\"\r\n                    android:textSize=\"17sp\" />\r\n            </TableRow>\r\n\r\n            <TableRow\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/lblDestino\"\r\n                    android:layout_width=\"150dp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:paddingLeft=\"5dp\"\r\n                    android:text=\"Destino:\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"16sp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <EditText\r\n                    android:id=\"@+id/txtUbicDestino\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:inputType=\"number\" />\r\n\r\n            </TableRow>\r\n\r\n            <TableRow\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/lblUbicCompDestino\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"45dp\"\r\n                    android:layout_marginStart=\"0dp\"\r\n                    android:layout_marginTop=\"7dp\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:paddingLeft=\"5dp\"\r\n                    android:text=\"-\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"18sp\" />\r\n            </TableRow>\r\n\r\n            <TableRow\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/lblEstadoDestino\"\r\n                    android:layout_width=\"150dp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:paddingLeft=\"5dp\"\r\n                    android:text=\"Est. Destino:\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"16sp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <Spinner\r\n                    android:id=\"@+id/cmbEstadoDestino\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"45dp\" />\r\n\r\n            </TableRow>\r\n\r\n        </LinearLayout>\r\n    </ScrollView>\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_frm_cambio_ubicacion_ciega.xml	(revision 5deab67d6a21a44cc275f189c4f92dc1aa94a3e9)
+++ app/src/main/res/layout/activity_frm_cambio_ubicacion_ciega.xml	(date 1612936458727)
@@ -361,10 +361,19 @@
 
                 <EditText
                     android:id="@+id/txtUbicDestino"
-                    android:layout_width="match_parent"
+                    android:layout_width="150dp"
                     android:layout_height="wrap_content"
                     android:inputType="number" />
 
+                <TextView
+                    android:id="@+id/txtUbicSug"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:gravity="right|center_vertical"
+                    android:paddingLeft="3dp"
+                    android:text="-"
+                    android:textColor="@color/colorPrimary" />
+
             </TableRow>
 
             <TableRow
