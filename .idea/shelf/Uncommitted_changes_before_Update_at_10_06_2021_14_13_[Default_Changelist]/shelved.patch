Index: app/src/main/java/com/dts/ladapt/list_adapt_detalle_recepcion.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.dts.ladapt;\r\n\r\nimport android.content.Context;\r\nimport android.graphics.Color;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.BaseAdapter;\r\nimport android.widget.TextView;\r\n\r\nimport com.dts.classes.Transacciones.OrdenCompra.Trans_oc_det.clsBeTrans_oc_det;\r\nimport com.dts.tom.R;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class list_adapt_detalle_recepcion extends BaseAdapter {\r\n\r\n    private static ArrayList<clsBeTrans_oc_det> BeDetalleOC;\r\n\r\n    private int selectedIndex;\r\n\r\n    private LayoutInflater l_Inflater;\r\n    private boolean Es_Poliza_Consolidada=false;\r\n\r\n    public list_adapt_detalle_recepcion(Context context, ArrayList<clsBeTrans_oc_det> results, boolean pEs_Poliza_Consolidada) {\r\n        BeDetalleOC = results;\r\n        l_Inflater = LayoutInflater.from(context);\r\n        selectedIndex = -1;\r\n        Es_Poliza_Consolidada = pEs_Poliza_Consolidada;\r\n    }\r\n\r\n    public void setSelectedIndex(int ind) {\r\n        selectedIndex = ind;\r\n        notifyDataSetChanged();\r\n    }\r\n\r\n    public void refreshItems() {\r\n        notifyDataSetChanged();\r\n    }\r\n\r\n    public int getCount() {\r\n        return BeDetalleOC.size();\r\n    }\r\n\r\n    public Object getItem(int position) {\r\n        return BeDetalleOC.get(position);\r\n    }\r\n\r\n    public long getItemId(int position) {\r\n        return position;\r\n    }\r\n\r\n    public View getView(int position, View convertView, ViewGroup parent) {\r\n        ViewHolder holder;\r\n\r\n        if (convertView == null) {\r\n            convertView = l_Inflater.inflate(R.layout.activity_list_adapt_detalle_recepcion, null);\r\n            holder = new ViewHolder();\r\n\r\n            holder.lblNoLinea = (TextView) convertView.findViewById(R.id.lblNoLinea);\r\n            holder.lblCodigo = (TextView) convertView.findViewById(R.id.lblCodigo);\r\n            holder.lblProducto = (TextView) convertView.findViewById(R.id.lblProducto);\r\n            holder.lblPres = (TextView) convertView.findViewById(R.id.lblPres);\r\n            holder.lblUmbas = (TextView) convertView.findViewById(R.id.lblUmbas);\r\n            holder.lblCantidad = (TextView) convertView.findViewById(R.id.lblCantidad);\r\n            holder.lblCantRec = (TextView) convertView.findViewById(R.id.lblCantRec);\r\n            holder.lblDiferencia = (TextView) convertView.findViewById(R.id.lblDiferencia);\r\n            holder.lblCosto = (TextView) convertView.findViewById(R.id.lblCosto);\r\n            holder.lblFactor = (TextView) convertView.findViewById(R.id.lblFactor);\r\n            holder.lblIdOcDet = (TextView) convertView.findViewById(R.id.lblIdOcDet);\r\n            holder.lblIdOcEnc = (TextView) convertView.findViewById(R.id.lblIdOcEnc);\r\n            holder.lblIdOcEnc = (TextView) convertView.findViewById(R.id.lblIdOcEnc);\r\n            holder.lblIdPropietarioBodega = (TextView) convertView.findViewById(R.id.lblIdPropietarioBodega);\r\n            holder.lblNombrePropietario =  (TextView) convertView.findViewById(R.id.lblNombrePropietario);\r\n\r\n            convertView.setTag(holder);\r\n        } else {\r\n            holder = (ViewHolder) convertView.getTag();\r\n        }\r\n\r\n        if (position==0){\r\n\r\n            holder.lblNombrePropietario.setText(\"Propietario\");\r\n            holder.lblNombrePropietario.setTextColor(R.style.titlestyle);\r\n            if (!Es_Poliza_Consolidada) {\r\n                holder.lblNombrePropietario.setVisibility(View.GONE);\r\n            }\r\n            holder.lblNoLinea.setText(\"NoLinea\");\r\n            holder.lblCodigo.setText(\"Código\");\r\n            holder.lblCodigo.setTextColor(R.style.titlestyle);\r\n            holder.lblProducto.setText(\"Producto\");\r\n            holder.lblProducto.setTextColor(R.style.titlestyle);\r\n            holder.lblPres.setText(\"Presentación\");\r\n            holder.lblPres.setTextColor(R.style.titlestyle);\r\n            holder.lblUmbas.setText(\"UmBas\");\r\n            holder.lblUmbas.setTextColor(R.style.titlestyle);\r\n            holder.lblCantidad.setText(\"Cantidad\");\r\n            holder.lblCantidad.setTextColor(R.style.titlestyle);\r\n            holder.lblCantRec.setText(\"CantidadRec\");\r\n            holder.lblCantRec.setTextColor(R.style.titlestyle);\r\n            holder.lblDiferencia.setText(\"Diferencia\");\r\n            holder.lblDiferencia.setTextColor(R.style.titlestyle);\r\n            holder.lblCosto.setText(\"Costo\");\r\n            holder.lblCantRec.setTextColor(R.style.titlestyle);\r\n            holder.lblFactor.setText(\"Factor\");\r\n            holder.lblFactor.setTextColor(R.style.titlestyle);\r\n            holder.lblIdOcDet.setText(\"IdDocDet\");\r\n            holder.lblIdOcDet.setTextColor(R.style.titlestyle);\r\n            holder.lblIdOcDet.setVisibility(View.GONE);\r\n            holder.lblIdOcEnc.setText(\"IdDocEnc\");\r\n            holder.lblIdOcEnc.setTextColor(R.style.titlestyle);\r\n            holder.lblIdOcEnc.setVisibility(View.GONE);\r\n            holder.lblIdPropietarioBodega.setText(\"IdPropietarioBodega\");\r\n            holder.lblIdPropietarioBodega.setTextColor(R.style.titlestyle);\r\n            if (!Es_Poliza_Consolidada) {\r\n                holder.lblIdPropietarioBodega.setVisibility(View.GONE);\r\n            }\r\n\r\n        }else{\r\n\r\n            holder.lblNombrePropietario.setText(\"--\");\r\n            holder.lblNoLinea.setText(\"0\");\r\n            holder.lblCodigo.setText(\"--\");\r\n            holder.lblProducto.setText(\"--\");\r\n            holder.lblPres.setText(\"--\");\r\n            holder.lblUmbas.setText(\"--\");\r\n            holder.lblCantidad.setText(\"0\");\r\n            holder.lblCantRec.setText(\"0\");\r\n            holder.lblDiferencia.setText(\"0\");\r\n            holder.lblCosto.setText(\"0\");\r\n            holder.lblFactor.setText(\"0\");\r\n            holder.lblIdOcDet.setText(\"0\");\r\n            holder.lblIdOcDet.setVisibility(View.GONE);\r\n            holder.lblIdOcEnc.setText(\"0\");\r\n            holder.lblIdOcEnc.setVisibility(View.GONE);\r\n            holder.lblIdPropietarioBodega.setText(\"0\");\r\n\r\n            if (!Es_Poliza_Consolidada) {\r\n                holder.lblIdPropietarioBodega.setVisibility(View.GONE);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).No_Linea>0){\r\n                holder.lblNoLinea.setText(\"\"+BeDetalleOC.get(position).No_Linea);\r\n            }\r\n            if(BeDetalleOC.get(position).Producto.Codigo!=null){\r\n                holder.lblCodigo.setText(BeDetalleOC.get(position).Producto.Codigo);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).Producto.Nombre!=null){\r\n                holder.lblProducto.setText(BeDetalleOC.get(position).Producto.Nombre);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).Presentacion.Nombre!=null){\r\n                holder.lblPres.setText(BeDetalleOC.get(position).Presentacion.Nombre);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).UnidadMedida.Nombre!=null){\r\n                holder.lblUmbas.setText(BeDetalleOC.get(position).UnidadMedida.Nombre);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).Cantidad>0){\r\n                holder.lblCantidad.setText(\"\"+BeDetalleOC.get(position).Cantidad);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).Cantidad_recibida>0){\r\n                holder.lblCantRec.setText(\"\"+BeDetalleOC.get(position).Cantidad_recibida);\r\n            }\r\n\r\n            holder.lblDiferencia.setText(\"\"+(BeDetalleOC.get(position).Cantidad_recibida-BeDetalleOC.get(position).Cantidad));\r\n\r\n            if(BeDetalleOC.get(position).Costo>0){\r\n                holder.lblCosto.setText(\"\"+BeDetalleOC.get(position).Costo);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).FactorPresentacion>0){\r\n                holder.lblFactor.setText(\"\"+BeDetalleOC.get(position).FactorPresentacion);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).IdOrdenCompraDet>0){\r\n                holder.lblIdOcDet.setText(\"\"+BeDetalleOC.get(position).IdOrdenCompraDet);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).IdOrdenCompraEnc>0){\r\n                holder.lblIdOcEnc.setText(\"\"+BeDetalleOC.get(position).IdOrdenCompraEnc);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).IdPropietarioBodega>0){\r\n                holder.lblIdPropietarioBodega.setText(\"\"+BeDetalleOC.get(position).IdPropietarioBodega);\r\n            }\r\n\r\n            if(!BeDetalleOC.get(position).Nombre_Propietario.isEmpty()){\r\n                holder.lblNombrePropietario.setText(\"\"+BeDetalleOC.get(position).Nombre_Propietario);\r\n            }\r\n\r\n            if (position > 0 && BeDetalleOC.get(position).Cantidad_recibida > 0.0) {\r\n                //#GT 20210524 Aquí ponemos la letra de color rojo para identificar que ya fue recepcionado\r\n                holder.lblNoLinea.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblCodigo.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblProducto.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblPres.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblUmbas.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblCantidad.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblCosto.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblCantRec.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblDiferencia.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblCantRec.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblFactor.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblIdOcDet.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblIdOcEnc.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblIdPropietarioBodega.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblNombrePropietario.setTextColor(Color.parseColor(\"#f7400f\"));\r\n\r\n            } else {\r\n                holder.lblNoLinea.setTextColor(R.style.titlestyle);\r\n                holder.lblCodigo.setTextColor(R.style.titlestyle);\r\n                holder.lblProducto.setTextColor(R.style.titlestyle);\r\n                holder.lblPres.setTextColor(R.style.titlestyle);\r\n                holder.lblUmbas.setTextColor(R.style.titlestyle);\r\n                holder.lblCosto.setTextColor(R.style.titlestyle);\r\n                holder.lblCantidad.setTextColor(R.style.titlestyle);\r\n                holder.lblCantRec.setTextColor(R.style.titlestyle);\r\n                holder.lblDiferencia.setTextColor(R.style.titlestyle);\r\n                holder.lblCantRec.setTextColor(R.style.titlestyle);\r\n                holder.lblFactor.setTextColor(R.style.titlestyle);\r\n                holder.lblIdOcDet.setTextColor(R.style.titlestyle);\r\n                holder.lblIdOcEnc.setTextColor(R.style.titlestyle);\r\n                holder.lblIdPropietarioBodega.setTextColor(R.style.titlestyle);\r\n                holder.lblNombrePropietario.setTextColor(R.style.titlestyle);\r\n            }\r\n\r\n        }\r\n\r\n        if(selectedIndex!= -1 && position == selectedIndex) {\r\n            convertView.setBackgroundColor(Color.rgb(0, 128, 0));\r\n        } else {\r\n            if (position==0){\r\n                convertView.setBackgroundResource(R.drawable.color_medium);\r\n                holder.lblNoLinea.setTextColor(R.style.titlestyle);\r\n            }else{\r\n                //#CKFK 20210525 Aquí ponemos la fila de color verde claro para identificar que ya fue recepcionado\r\n                if (BeDetalleOC.get(position).Cantidad_recibida > 0.0) {\r\n                    convertView.setBackgroundColor(Color.parseColor(\"#9eff92\"));\r\n                }else{\r\n                    convertView.setBackgroundColor(Color.TRANSPARENT);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return convertView;\r\n    }\r\n\r\n    static class ViewHolder {\r\n        TextView lblNoLinea,\r\n                 lblCodigo,\r\n                 lblProducto,\r\n                 lblPres,\r\n                 lblUmbas,\r\n                 lblCantidad,\r\n                 lblCantRec,\r\n                 lblDiferencia,\r\n                 lblCosto,\r\n                 lblFactor,\r\n                 lblIdOcDet,\r\n                 lblIdOcEnc,\r\n                 lblIdPropietarioBodega,\r\n                 lblNombrePropietario;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/dts/ladapt/list_adapt_detalle_recepcion.java	(revision b5ce5ac9d108fb929605f7a4b57b5971a4882985)
+++ app/src/main/java/com/dts/ladapt/list_adapt_detalle_recepcion.java	(date 1623350614719)
@@ -86,32 +86,33 @@
                 holder.lblNombrePropietario.setVisibility(View.GONE);
             }
             holder.lblNoLinea.setText("NoLinea");
+            holder.lblNoLinea.setTextColor(Color.parseColor("#FFFFFF"));
             holder.lblCodigo.setText("Código");
-            holder.lblCodigo.setTextColor(R.style.titlestyle);
+            holder.lblCodigo.setTextColor(Color.parseColor("#FFFFFF"));
             holder.lblProducto.setText("Producto");
-            holder.lblProducto.setTextColor(R.style.titlestyle);
+            holder.lblProducto.setTextColor(Color.parseColor("#FFFFFF"));
             holder.lblPres.setText("Presentación");
-            holder.lblPres.setTextColor(R.style.titlestyle);
+            holder.lblPres.setTextColor(Color.parseColor("#FFFFFF"));
             holder.lblUmbas.setText("UmBas");
-            holder.lblUmbas.setTextColor(R.style.titlestyle);
+            holder.lblUmbas.setTextColor(Color.parseColor("#FFFFFF"));
             holder.lblCantidad.setText("Cantidad");
-            holder.lblCantidad.setTextColor(R.style.titlestyle);
+            holder.lblCantidad.setTextColor(Color.parseColor("#FFFFFF"));
             holder.lblCantRec.setText("CantidadRec");
-            holder.lblCantRec.setTextColor(R.style.titlestyle);
+            holder.lblCantRec.setTextColor(Color.parseColor("#FFFFFF"));
             holder.lblDiferencia.setText("Diferencia");
-            holder.lblDiferencia.setTextColor(R.style.titlestyle);
+            holder.lblDiferencia.setTextColor(Color.parseColor("#FFFFFF"));
             holder.lblCosto.setText("Costo");
-            holder.lblCantRec.setTextColor(R.style.titlestyle);
+            holder.lblCantRec.setTextColor(Color.parseColor("#FFFFFF"));
             holder.lblFactor.setText("Factor");
-            holder.lblFactor.setTextColor(R.style.titlestyle);
+            holder.lblFactor.setTextColor(Color.parseColor("#FFFFFF"));
             holder.lblIdOcDet.setText("IdDocDet");
-            holder.lblIdOcDet.setTextColor(R.style.titlestyle);
+            holder.lblIdOcDet.setTextColor(Color.parseColor("#FFFFFF"));
             holder.lblIdOcDet.setVisibility(View.GONE);
             holder.lblIdOcEnc.setText("IdDocEnc");
-            holder.lblIdOcEnc.setTextColor(R.style.titlestyle);
+            holder.lblIdOcEnc.setTextColor(Color.parseColor("#FFFFFF"));
             holder.lblIdOcEnc.setVisibility(View.GONE);
             holder.lblIdPropietarioBodega.setText("IdPropietarioBodega");
-            holder.lblIdPropietarioBodega.setTextColor(R.style.titlestyle);
+            holder.lblIdPropietarioBodega.setTextColor(Color.parseColor("#FFFFFF"));
             if (!Es_Poliza_Consolidada) {
                 holder.lblIdPropietarioBodega.setVisibility(View.GONE);
             }
@@ -192,7 +193,7 @@
                 holder.lblNombrePropietario.setText(""+BeDetalleOC.get(position).Nombre_Propietario);
             }
 
-            if (position > 0 && BeDetalleOC.get(position).Cantidad_recibida > 0.0) {
+          /*  if (position > 0 && BeDetalleOC.get(position).Cantidad_recibida > 0.0) {
                 //#GT 20210524 Aquí ponemos la letra de color rojo para identificar que ya fue recepcionado
                 holder.lblNoLinea.setTextColor(Color.parseColor("#f7400f"));
                 holder.lblCodigo.setTextColor(Color.parseColor("#f7400f"));
@@ -226,7 +227,7 @@
                 holder.lblIdOcEnc.setTextColor(R.style.titlestyle);
                 holder.lblIdPropietarioBodega.setTextColor(R.style.titlestyle);
                 holder.lblNombrePropietario.setTextColor(R.style.titlestyle);
-            }
+            }*/
 
         }
 
@@ -238,8 +239,11 @@
                 holder.lblNoLinea.setTextColor(R.style.titlestyle);
             }else{
                 //#CKFK 20210525 Aquí ponemos la fila de color verde claro para identificar que ya fue recepcionado
-                if (BeDetalleOC.get(position).Cantidad_recibida > 0.0) {
-                    convertView.setBackgroundColor(Color.parseColor("#9eff92"));
+                if (BeDetalleOC.get(position).Cantidad_recibida == BeDetalleOC.get(position).Cantidad) {
+                    convertView.setBackgroundColor(Color.parseColor("#c9ffc0"));
+                }else if (BeDetalleOC.get(position).Cantidad_recibida < BeDetalleOC.get(position).Cantidad  &&
+                          BeDetalleOC.get(position).Cantidad_recibida >0) {
+                    convertView.setBackgroundColor(Color.parseColor("#f5ffae"));
                 }else{
                     convertView.setBackgroundColor(Color.TRANSPARENT);
                 }
Index: app/src/main/res/layout/activity_frm_list_rec_prod_detalle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".Transacciones.Recepcion.frm_list_rec_prod_detalle\">\r\n\r\n    <HorizontalScrollView\r\n        android:id=\"@+id/srollRecDet\"\r\n        android:layout_width=\"392dp\"\r\n        android:layout_height=\"379dp\"\r\n        android:layout_above=\"@+id/btnCorregir\"\r\n        android:layout_below=\"@id/txtCodigoProductoRecepcion2\"\r\n        android:layout_marginBottom=\"5dp\">\r\n\r\n        <ListView\r\n            android:id=\"@+id/listRecDet\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_marginTop=\"1dp\"\r\n            android:layout_marginBottom=\"1dp\" />\r\n    </HorizontalScrollView>\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView97\"\r\n        style=\"@style/StyleText\"\r\n        android:layout_width=\"150dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignTop=\"@id/txtCodigoProductoRecepcion2\"\r\n        android:layout_alignBottom=\"@id/txtCodigoProductoRecepcion2\"\r\n        android:text=\"Código:\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/txtCodigoProductoRecepcion2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@id/btnCompletaRec2\"\r\n        android:layout_alignStart=\"@id/btnCompletaRec2\"\r\n        android:layout_alignEnd=\"@id/btnCompletaRec2\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:layout_marginEnd=\"0dp\"\r\n        android:inputType=\"textPersonName\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/imgImprimir\"\r\n        android:layout_width=\"70dp\"\r\n        android:layout_height=\"54dp\"\r\n        android:layout_above=\"@id/textView97\"\r\n        android:layout_below=\"@id/lblNoDocumento2\"\r\n        android:onClick=\"Imprimir\"\r\n        android:padding=\"10dp\"\r\n        android:src=\"@drawable/login_printer\"\r\n        android:visibility=\"invisible\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btnCompletaRec2\"\r\n        android:layout_width=\"204dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@id/lblNoDocumento2\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_marginStart=\"93dp\"\r\n        android:layout_marginTop=\"1dp\"\r\n        android:layout_marginEnd=\"44dp\"\r\n        android:layout_toEndOf=\"@+id/imageView13\"\r\n        android:background=\"@android:color/holo_red_dark\"\r\n        android:text=\"Incompleta\"\r\n        android:textColor=\"@android:color/background_light\"\r\n        android:textSize=\"18sp\"\r\n        android:textStyle=\"bold\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/lblNoDocumento2\"\r\n        style=\"@style/StyleText\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"35dp\"\r\n        android:layout_below=\"@+id/reltop\"\r\n        android:background=\"@drawable/color_light\"\r\n        android:gravity=\"center\"\r\n        android:text=\"NoDocumento:\" />\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/relbot\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"48dp\"\r\n        android:layout_alignParentStart=\"true\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_marginStart=\"0dp\"\r\n        android:layout_marginBottom=\"1dp\"\r\n        android:background=\"@drawable/color_medium\">\r\n\r\n        <Button\r\n            android:id=\"@+id/btnBack\"\r\n            android:layout_width=\"61dp\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_alignParentStart=\"true\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_marginBottom=\"0dp\"\r\n            android:background=\"@drawable/back\"\r\n            android:onClick=\"BacKList\" />\r\n\r\n    </RelativeLayout>\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/reltop\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"48dp\"\r\n        android:layout_alignParentStart=\"false\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:background=\"@drawable/color_medium\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/lblTituloForma\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:gravity=\"center\"\r\n            android:text=\"Detalle de productos recepcionados\"\r\n            android:textColor=\"#FFFFFF\"\r\n            android:textSize=\"18sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n    </RelativeLayout>\r\n\r\n    <Button\r\n        android:id=\"@+id/btnBorrarTd\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_above=\"@+id/relbot\"\r\n        android:layout_alignParentStart=\"true\"\r\n        android:layout_marginStart=\"30dp\"\r\n        android:layout_marginBottom=\"5dp\"\r\n        android:background=\"@android:color/holo_red_light\"\r\n        android:text=\"Borra todas\"\r\n        android:textColor=\"#FAF9F9\"\r\n        android:visibility=\"invisible\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btnCorregir\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignTop=\"@+id/btnBorrarTd\"\r\n        android:layout_alignBottom=\"@+id/btnBorrarTd\"\r\n        android:layout_marginStart=\"20dp\"\r\n        android:layout_marginTop=\"0dp\"\r\n        android:layout_marginBottom=\"0dp\"\r\n        android:layout_toEndOf=\"@+id/btnBorrarTd\"\r\n        android:background=\"@color/colorPrimary\"\r\n        android:text=\"Corregir\"\r\n        android:textColor=\"#FBF9F9\"\r\n        android:visibility=\"invisible\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btnRegs\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignTop=\"@+id/btnCorregir\"\r\n        android:layout_alignBottom=\"@+id/btnCorregir\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_marginStart=\"20dp\"\r\n        android:layout_marginTop=\"0dp\"\r\n        android:layout_marginEnd=\"40dp\"\r\n        android:layout_toEndOf=\"@+id/btnCorregir\"\r\n        android:background=\"#03508A\"\r\n        android:text=\"Regs: 1\"\r\n        android:textColor=\"#FDFCFC\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btnModo\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignTop=\"@+id/txtCodigoProductoRecepcion2\"\r\n        android:layout_alignBottom=\"@+id/txtCodigoProductoRecepcion2\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_toEndOf=\"@+id/txtCodigoProductoRecepcion2\"\r\n        android:background=\"@color/colorPrimary\"\r\n        android:text=\"R.\"\r\n        android:textColor=\"#FAF9F9\" />\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_frm_list_rec_prod_detalle.xml	(revision b5ce5ac9d108fb929605f7a4b57b5971a4882985)
+++ app/src/main/res/layout/activity_frm_list_rec_prod_detalle.xml	(date 1622620196813)
@@ -63,9 +63,9 @@
         android:layout_marginTop="1dp"
         android:layout_marginEnd="44dp"
         android:layout_toEndOf="@+id/imageView13"
-        android:background="@android:color/holo_red_dark"
+        android:background="@color/rosado"
         android:text="Incompleta"
-        android:textColor="@android:color/background_light"
+        android:textColor="@color/colorPrimaryDark"
         android:textSize="18sp"
         android:textStyle="bold" />
 
Index: app/src/main/java/com/dts/tom/Transacciones/Recepcion/frm_list_rec_prod.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.dts.tom.Transacciones.Recepcion;\r\n\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.app.Dialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.util.Base64;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.KeyEvent;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.AdapterView;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.EditText;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\n\r\nimport com.dts.base.WebService;\r\nimport com.dts.base.XMLObject;\r\nimport com.dts.classes.Mantenimientos.Barra_pallet.clsBeI_nav_barras_pallet;\r\nimport com.dts.classes.Mantenimientos.Barra_pallet.clsBeI_nav_barras_palletList;\r\nimport com.dts.classes.Mantenimientos.Configuracion_barra_pallet.clsBeConfiguracion_barra_pallet;\r\nimport com.dts.classes.Mantenimientos.Producto.clsBeProducto;\r\nimport com.dts.classes.Transacciones.OrdenCompra.Trans_oc_det.clsBeTrans_oc_det;\r\nimport com.dts.classes.Transacciones.OrdenCompra.Trans_oc_det.clsBeTrans_oc_detList;\r\nimport com.dts.classes.Transacciones.OrdenCompra.Trans_oc_enc.clsBeTrans_oc_enc;\r\nimport com.dts.classes.Transacciones.OrdenCompra.Trans_oc_ti.clsBeTrans_oc_ti;\r\nimport com.dts.classes.Transacciones.Recepcion.Trans_re_det.clsBeTrans_re_detList;\r\nimport com.dts.classes.Transacciones.Recepcion.Trans_re_oc.clsBeTrans_re_oc;\r\nimport com.dts.classes.Transacciones.Stock.Stock_rec.clsBeStock_rec;\r\nimport com.dts.classes.Transacciones.Stock.Stock_rec.clsBeStock_recList;\r\nimport com.dts.tom.DrawingView;\r\nimport com.dts.tom.PBase;\r\nimport com.dts.tom.R;\r\nimport com.dts.ladapt.list_adapt_detalle_recepcion;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.List;\r\n\r\nimport static br.com.zbra.androidlinq.Linq.stream;\r\n\r\npublic class frm_list_rec_prod extends PBase {\r\n\r\n    private WebServiceHandler ws;\r\n    private XMLObject xobj;\r\n\r\n    private TextView lblNoDocumento;\r\n    private Button btnRegs,btnCompletaRec,btnGuardarFirma,btnSalirFirma,btnLimpiar;\r\n    private ListView listView;\r\n    private EditText txtCodigoProductoRecepcion;\r\n    private DrawingView txtFirma;\r\n    private ProgressDialog progress;\r\n    private CheckBox chkRecepcionados;\r\n\r\n    private clsBeTrans_oc_enc gBeOrdenCompra = new clsBeTrans_oc_enc();\r\n    private clsBeTrans_re_detList pListTransRecDet = new clsBeTrans_re_detList();\r\n    private  clsBeTrans_re_oc gBeReOC = new clsBeTrans_re_oc();\r\n    private clsBeTrans_oc_detList pListDetalleOC = new clsBeTrans_oc_detList();\r\n    public static clsBeConfiguracion_barra_pallet gBeConfiguracionBarraPallet =  new clsBeConfiguracion_barra_pallet();\r\n    private static clsBeI_nav_barras_palletList lBeINavBarraPallet = new clsBeI_nav_barras_palletList();\r\n    public static clsBeI_nav_barras_pallet BeINavBarraPallet= new clsBeI_nav_barras_pallet();\r\n    private clsBeStock_recList pListBeStockRecPI = new clsBeStock_recList();\r\n    public static clsBeStock_rec gBeStockRec = new clsBeStock_rec();\r\n    private static ArrayList<clsBeTrans_oc_det> BeListDetalleOC= new ArrayList<clsBeTrans_oc_det>() ;\r\n    public  static clsBeProducto BeProducto = new clsBeProducto();\r\n    private int gotop;\r\n\r\n    private boolean Escaneo_Pallet;\r\n    private boolean Finalizada = false, Anulada = false;\r\n    private double Cant_Recibida_Anterior;\r\n    private int browse;\r\n    public String pLP=\"\";\r\n    private String vLP=\"\";\r\n    public String vCodigoBodegaBarraPallet = \"\";\r\n    public String vCodigoProductoBarraPallet= \"\";\r\n    public static boolean EsTransferenciaInternaWMS=false;\r\n    private  int vIdOrdenCompra=0;\r\n    private double vTipoDiferencia=0;\r\n    private boolean Finalizar=false;\r\n    private Dialog dialog;\r\n    private Bitmap FirmaPiloto;\r\n    private byte[] firmByte;\r\n    private String encodedImage;\r\n\r\n    private int Idx = -1;\r\n\r\n    private clsBeTrans_oc_det selitem;\r\n\r\n    private list_adapt_detalle_recepcion listdetadapter;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_frm_list_rec_prod);\r\n\r\n        super.InitBase();\r\n\r\n        ws = new WebServiceHandler(frm_list_rec_prod.this, gl.wsurl);\r\n        xobj = new XMLObject(ws);\r\n\r\n        lblNoDocumento = (TextView) findViewById(R.id.lblNoDocumento);\r\n\r\n        btnRegs = (Button) findViewById(R.id.btnRegs);\r\n        btnCompletaRec = (Button)findViewById(R.id.btnCompletaRec);\r\n        listView = (ListView)findViewById(R.id.listRec);\r\n        chkRecepcionados =(CheckBox)findViewById(R.id.chkRecepcionados);\r\n\r\n        txtCodigoProductoRecepcion = (EditText)findViewById(R.id.txtCodigoProductoRecepcion);\r\n\r\n        browse = 0;\r\n\r\n        setHandlers();\r\n\r\n        ProgressDialog();\r\n\r\n        Load();\r\n\r\n    }\r\n\r\n    private void Procesa_Barra_Producto(){\r\n\r\n        int FilaActual= 0;\r\n        boolean LongitudValida = true;\r\n        vCodigoBodegaBarraPallet = \"\";\r\n        vCodigoProductoBarraPallet= \"\";\r\n        vLP=\"\";\r\n        pLP=\"\";\r\n        boolean vPalletOk = false;\r\n        boolean TxtCantidadHasFocus = false;\r\n\r\n        try{\r\n\r\n            if (!txtCodigoProductoRecepcion.getText().toString().isEmpty()){\r\n\r\n                String vStarWithParameter = \"$\";\r\n\r\n                if (gBeConfiguracionBarraPallet!=null){\r\n                    if (!gBeConfiguracionBarraPallet.IdentificadorInicio.isEmpty()){\r\n                        vStarWithParameter = gBeConfiguracionBarraPallet.IdentificadorInicio;\r\n                    }\r\n                }\r\n\r\n                if (txtCodigoProductoRecepcion.getText().toString().startsWith(\"$\") |\r\n                        txtCodigoProductoRecepcion.getText().toString().startsWith(\"(01)\") |\r\n                        txtCodigoProductoRecepcion.getText().toString().startsWith(vStarWithParameter)){\r\n\r\n                    int vLengthBarra  = txtCodigoProductoRecepcion.getText().toString().length();\r\n\r\n                     if(gl.gBeRecepcion.IdTipoTransaccion.equals(\"PICH000\")\r\n                             | gl.gBeRecepcion.IdTipoTransaccion.equals(\"HCOC00\")\r\n                             && vLengthBarra > 6){\r\n\r\n                         LongitudValida = true;\r\n                     }else{\r\n                         LongitudValida = false;\r\n                     }\r\n\r\n                     if (LongitudValida){\r\n\r\n                         Escaneo_Pallet=true;\r\n                         gl.Escaneo_Pallet=true;\r\n\r\n                         if (gl.gBeRecepcion.IdTipoTransaccion.equals(\"PICH000\")){\r\n                             pLP = txtCodigoProductoRecepcion.getText().toString().substring(4, 16);\r\n                             gBeStockRec = stream(pListBeStockRecPI.items).where(c->c.Lic_plate.equals(pLP)).first();\r\n                         }else{\r\n\r\n                             int vLongitudBodegaOrigen  = 4;\r\n\r\n                             if (gBeConfiguracionBarraPallet!=null){\r\n                                 vLongitudBodegaOrigen = gBeConfiguracionBarraPallet.LongCodBodegaOrigen;\r\n                             }\r\n\r\n                             int vLongitudCodigoProducto=8;\r\n                             if (gBeConfiguracionBarraPallet!=null){\r\n                                 vLongitudCodigoProducto = gBeConfiguracionBarraPallet.LongCodProducto;\r\n                             }\r\n\r\n                             int vLongitudCodigoPallet=8;\r\n                             if (gBeConfiguracionBarraPallet!=null){\r\n                                 vLongitudCodigoPallet = gBeConfiguracionBarraPallet.LongLP;\r\n                             }\r\n\r\n                             pLP = txtCodigoProductoRecepcion.getText().toString().replace(\"$\", \"\");\r\n\r\n                             vCodigoBodegaBarraPallet = pLP.substring(0, vLongitudBodegaOrigen);\r\n\r\n                             vCodigoBodegaBarraPallet = vCodigoBodegaBarraPallet.replace(\"0\", \"\");\r\n\r\n                             vCodigoProductoBarraPallet = pLP.substring(vLongitudBodegaOrigen, vLongitudCodigoProducto+3);\r\n\r\n                             if (gBeConfiguracionBarraPallet!=null){\r\n                                 if (gBeConfiguracionBarraPallet.CodigoNumerico){\r\n                                     vCodigoProductoBarraPallet =String.valueOf(Integer.parseInt(vCodigoProductoBarraPallet)); //vCodigoProductoBarraPallet.replaceFirst (\"^0*\", \"\");\r\n                                 }else{\r\n                                     vCodigoProductoBarraPallet = vCodigoProductoBarraPallet;\r\n                                 }\r\n                             }\r\n\r\n                             int vLongitudBarraPallet=pLP.length();\r\n\r\n                            if ((vLongitudBodegaOrigen + vLongitudCodigoProducto + vLongitudCodigoPallet)>= vLongitudBarraPallet){\r\n\r\n                                int ln1 = vLongitudBodegaOrigen + vLongitudCodigoProducto;\r\n                                vLP = pLP.substring(ln1,vLongitudBarraPallet);\r\n\r\n                                if (vLP.equals(\"\")){\r\n                                    txtCodigoProductoRecepcion.setText(\"\");\r\n                                    mu.msgbox(\"La barra de pallet no tiene el formato correcto\");\r\n                                    return;\r\n                                }\r\n\r\n                            }else{\r\n                                vLP = pLP.substring(vLongitudBodegaOrigen + vLongitudCodigoProducto, vLongitudBarraPallet - (vLongitudBodegaOrigen + vLongitudCodigoProducto));\r\n                            }\r\n\r\n                            if (gBeOrdenCompra.IdTipoIngresoOC == 4){\r\n                                EsTransferenciaInternaWMS =true;\r\n                             }\r\n\r\n                            execws(5);\r\n\r\n                            if (gBeStockRec!=null){\r\n                                if(gBeStockRec.IdStockRec>0){\r\n                                    gBeStockRec = stream(pListBeStockRecPI.items).where(c->c.Lic_plate.equals(pLP)).first();\r\n                                }\r\n                            }\r\n\r\n                         }\r\n\r\n                     }else{\r\n                         mu.msgbox(\"El código de pallet : \"+pLP+\" no tiene la longitud válida\");\r\n                         txtCodigoProductoRecepcion.setText(\"\");\r\n                         txtCodigoProductoRecepcion.requestFocus();\r\n                         return;\r\n                     }\r\n\r\n                }else{\r\n\r\n                    Escaneo_Pallet = false;\r\n                    gl.Escaneo_Pallet=false;\r\n\r\n                    BeProducto = new clsBeProducto();\r\n\r\n                    execws(9);\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Procesa_Barra_Producto: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void ValidaEstadoPallet(){\r\n\r\n        if (gBeStockRec!=null && gBeStockRec.IdStockRec>0 ){\r\n\r\n            mu.msgbox(\"El número de pallet \"+ pLP+\" no es válido para la recepción\");\r\n            txtCodigoProductoRecepcion.setText(\"\");\r\n            txtCodigoProductoRecepcion.requestFocus();\r\n            return;\r\n\r\n        }else{\r\n\r\n            if (gBeStockRec.Uds_lic_plate == gBeStockRec.Cantidad){\r\n                mu.msgbox(\"El pallet ya fue recibido\");\r\n                txtCodigoProductoRecepcion.setText(\"\");\r\n                txtCodigoProductoRecepcion.requestFocus();\r\n                return;\r\n            }\r\n\r\n            if (BeProducto==null){\r\n                execws(6);\r\n            }\r\n\r\n        }\r\n\r\n        msgValidaProductoPallet(\"¿El pallet está completo y en buen estado?\");\r\n    }\r\n\r\n    private void msgValidaProductoPallet(String msg) {\r\n\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setCancelable(false);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                   Guardar_Pallet();\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    execws(8);\r\n                    return;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n    }\r\n\r\n    private void Guardar_Pallet(){\r\n\r\n        try{\r\n\r\n/*            vIdOrdenCompra=0;\r\n\r\n            if (gl.gBeRecepcion.OrdenCompraRec!=null){\r\n                if ( gl.gBeRecepcion.OrdenCompraRec.IdOrdenCompraEnc>0){\r\n                    vIdOrdenCompra = gl.gBeRecepcion.OrdenCompraRec.IdOrdenCompraEnc;\r\n                }\r\n            }\r\n*/\r\n            gBeStockRec.Uds_lic_plate = gBeStockRec.Cantidad;\r\n            gBeStockRec.No_bulto = 0;\r\n\r\n            execws(7);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Guardar_Pallet\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Continua_Validando_Barra(){\r\n\r\n        try{\r\n\r\n            if (gBeOrdenCompra.ProveedorBodega.Proveedor.Codigo.trim().equals(vCodigoBodegaBarraPallet.trim()) | BeINavBarraPallet.Bodega_Destino.trim().equals(gl.gCodigoBodega)){\r\n\r\n            List AuxList = stream(pListDetalleOC.items).select(c->c.Codigo_Producto).toList();\r\n\r\n                Idx = AuxList.indexOf(vCodigoProductoBarraPallet);\r\n\r\n                if (Idx>-1){\r\n                    if (BeINavBarraPallet!=null){\r\n\r\n                        if (!BeINavBarraPallet.Recibido){\r\n                            if (BeINavBarraPallet.Activo){\r\n                                gl.mode=1;\r\n                                selitem = pListDetalleOC.items.get(Idx);\r\n                                gl.gselitem = selitem;\r\n                                gl.gEscaneo_Pallet = true;\r\n\r\n                                gl.CodigoRecepcion = selitem.Producto.Codigo_barra;\r\n                                gl.gpListDetalleOC.items = pListDetalleOC.items;\r\n\r\n                                browse=1;\r\n                                startActivity(new Intent(this, frm_recepcion_datos.class));\r\n\r\n                            }else{\r\n                                mu.msgbox(\"El código de pallet : \"+ BeINavBarraPallet.Codigo_barra +\" está inactivo: \"+BeINavBarraPallet.Codigo_barra+\" valide tabla de interface\");\r\n                                txtCodigoProductoRecepcion.setText(\"\");\r\n                                txtCodigoProductoRecepcion.requestFocus();\r\n                                return;\r\n                            }\r\n                        }else{\r\n                            mu.msgbox(\"El código de pallet: \"+BeINavBarraPallet.Codigo_barra+\" ya fue recibido con fecha: \"+BeINavBarraPallet.Fecha_Agregado);\r\n                            txtCodigoProductoRecepcion.setText(\"\");\r\n                            txtCodigoProductoRecepcion.requestFocus();\r\n                            return;\r\n                        }\r\n\r\n                    }else{\r\n                        mu.msgbox(\"El código de pallet: \"+pLP+\" no existe en el listado de barras válidas para ingreso\");\r\n                        txtCodigoProductoRecepcion.setText(\"\");\r\n                        txtCodigoProductoRecepcion.requestFocus();\r\n                        return;\r\n                    }\r\n                }else{\r\n                    mu.msgbox(\"El producto: \"+vCodigoProductoBarraPallet+\" no coincide con ningún artículo del documento\");\r\n                    txtCodigoProductoRecepcion.setText(\"\");\r\n                    txtCodigoProductoRecepcion.requestFocus();\r\n                    return;\r\n                }\r\n            }else{\r\n                mu.msgbox(\"El almacen emisor: \"+vCodigoBodegaBarraPallet+\" no coincide con el proveedor del documento: \"+gBeOrdenCompra.ProveedorBodega.Proveedor.Codigo);\r\n                txtCodigoProductoRecepcion.setText(\"\");\r\n                txtCodigoProductoRecepcion.requestFocus();\r\n                return;\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Continua_Validando_Barra\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    public void ProgressDialog(){\r\n        progress=new ProgressDialog(this);\r\n        progress.setProgressStyle(ProgressDialog.STYLE_SPINNER);\r\n        progress.setIndeterminate(true);\r\n        progress.setProgress(0);\r\n        progress.show();\r\n    }\r\n\r\n    private void Load(){\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Inicializando valores\");\r\n\r\n            lblNoDocumento.setText(\"\");\r\n\r\n            this.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);\r\n\r\n            if (gl.tipoTarea==1){\r\n\r\n                if (gl.gBeRecepcion!=null){\r\n\r\n                    pListTransRecDet = gl.gBeRecepcion.Detalle;\r\n\r\n                    gBeOrdenCompra = new clsBeTrans_oc_enc();\r\n                    gBeReOC = new clsBeTrans_re_oc();\r\n                    pListDetalleOC =new clsBeTrans_oc_detList();\r\n\r\n                    gBeOrdenCompra = gl.gBeRecepcion.OrdenCompraRec.OC;\r\n                    gl.gBeOrdenCompra = gBeOrdenCompra;\r\n\r\n                    vIdOrdenCompra=0;\r\n\r\n                    if (gl.gBeRecepcion.OrdenCompraRec!=null){\r\n                        if ( gl.gBeRecepcion.OrdenCompraRec.IdOrdenCompraEnc>0){\r\n                            vIdOrdenCompra = gl.gBeRecepcion.OrdenCompraRec.IdOrdenCompraEnc;\r\n                        }\r\n                    }\r\n\r\n                    gBeReOC = gl.gBeRecepcion.OrdenCompraRec;\r\n                    chkRecepcionados.setChecked(false);\r\n\r\n                    pListDetalleOC = gl.gBeRecepcion.OrdenCompraRec.OC.DetalleOC;\r\n\r\n                    gl.gpListDetalleOC = pListDetalleOC;\r\n\r\n                    if (frm_detalle_ingresos.gBeConfiguracionBarraPallet!=null){\r\n                        if (frm_detalle_ingresos.gBeConfiguracionBarraPallet.IdConfiguracionPallet>0){\r\n                            gBeConfiguracionBarraPallet = frm_detalle_ingresos.gBeConfiguracionBarraPallet;\r\n                        }\r\n                    }\r\n\r\n                    if(gBeOrdenCompra.No_Documento!=null & gBeOrdenCompra.Referencia!=null){\r\n                        lblNoDocumento.setText(\"No. Documento:\"+ gBeOrdenCompra.No_Documento+ \" - \"+gBeOrdenCompra.Referencia);\r\n                    }\r\n\r\n                    if(gBeOrdenCompra.IdEstadoOC != 3){\r\n\r\n                        gBeOrdenCompra.EstadoOC.IdEstadoOC = 3;\r\n                        gBeOrdenCompra.IdEstadoOC = 3;\r\n                        gBeOrdenCompra.Fecha_Recepcion = du.getActDate()+\"\";\r\n                        gBeOrdenCompra.Hora_Inicio_Recepcion =  du.getActDate()+\"\";\r\n                        gBeOrdenCompra.User_Mod = gl.IdOperador+\"\";\r\n                        gBeOrdenCompra.Fec_Mod =  du.getActDate()+\"\";\r\n\r\n                    }\r\n\r\n                    progress.setMessage(\"Inicializando Oc\");\r\n                    execws(1);\r\n\r\n                }\r\n\r\n            }else{\r\n                mu.msgbox(\"Falta programar\");\r\n            }\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            mu.msgbox(e.getClass()+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void setHandlers() {\r\n\r\n        try{\r\n\r\n            listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                @Override\r\n                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\r\n\r\n                    selid = 0;\r\n\r\n                    if (position>0){\r\n\r\n                        Object lvObj = listView.getItemAtPosition(position);\r\n                        clsBeTrans_oc_det sitem = (clsBeTrans_oc_det) lvObj;\r\n                        selitem = pListDetalleOC.items.get(position-1);\r\n\r\n                        selid = sitem.No_Linea;\r\n                        selidx = position;\r\n                        listdetadapter.setSelectedIndex(position);\r\n\r\n                        procesar_registro();\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            });\r\n\r\n            listView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {\r\n\r\n                @Override\r\n                public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\r\n\r\n                    selid = 0;\r\n\r\n                    if (position>0){\r\n\r\n                        Object lvObj = listView.getItemAtPosition(position);\r\n                        clsBeTrans_oc_det sitem = (clsBeTrans_oc_det) lvObj;\r\n                        selitem = pListDetalleOC.items.get(position-1);\r\n\r\n                        selid = sitem.No_Linea;\r\n                        selidx = position;\r\n                        listdetadapter.setSelectedIndex(position);\r\n\r\n                        msgIngresaDetalle(\"Quiere ver el detalle del código: \" +selitem.Codigo_Producto);\r\n\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n\r\n            });\r\n\r\n            txtCodigoProductoRecepcion.setOnKeyListener(new View.OnKeyListener() {\r\n                @Override\r\n                public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                    if ((event.getAction()==KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER)){\r\n\r\n                        if (!txtCodigoProductoRecepcion.getText().toString().isEmpty()){\r\n                            Procesa_Barra_Producto();\r\n                        }\r\n\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            chkRecepcionados.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n                @Override\r\n                public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n\r\n                    if (chkRecepcionados.isChecked()==true) {\r\n                        //pListDetalleOC.items = stream(pListDetalleOC.items).where(c->c.Cantidad_recibida>0).toList();\r\n                        Lista_Detalle_Documento_Ingreso();\r\n                    }else{\r\n                        Lista_Detalle_Documento_Ingreso();\r\n                    }\r\n                }\r\n            });\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(e.getClass()+\" \"+ e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void doExit(){\r\n        try{\r\n\r\n            //LimpiaValores();\r\n            gl.CodigoRecepcion =\"\";\r\n            gl.Carga_Producto_x_Pallet = false;\r\n            gl.gFechaVenceAnterior = \"\";\r\n            gl.gLoteAnterior =\"\";\r\n            gl.Escaneo_Pallet=false;\r\n            super.finish();\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void ValidaProductoForRece(){\r\n\r\n        try{\r\n\r\n            if (BeProducto!=null){\r\n\r\n                List AuxList = stream(pListDetalleOC.items).select(c->c.Codigo_Producto).toList();\r\n\r\n                Idx = AuxList.indexOf(txtCodigoProductoRecepcion.getText().toString());\r\n\r\n                if (Idx>-1){\r\n\r\n                    if (gBeStockRec!=null){\r\n                        if (gBeStockRec.IdStockRec>0){\r\n                            gl.Carga_Producto_x_Pallet=true;\r\n                        }else{\r\n                            gl.Carga_Producto_x_Pallet=false;\r\n                        }\r\n                    }else{\r\n                        gl.Carga_Producto_x_Pallet= false;\r\n                    }\r\n\r\n                    selitem = pListDetalleOC.items.get(Idx);\r\n                    gl.gselitem = selitem;\r\n\r\n                    gl.CodigoRecepcion = selitem.Producto.Codigo_barra;\r\n                    gl.gpListDetalleOC.items = pListDetalleOC.items;\r\n\r\n                    gl.mode =1;\r\n                    browse=1;\r\n\r\n                    startActivity(new Intent(this, frm_recepcion_datos.class));\r\n\r\n\r\n                }else{\r\n                    mu.msgbox(\"El código de producto no es válido para la recepción\");\r\n                    txtCodigoProductoRecepcion.setText(\"\");\r\n                    txtCodigoProductoRecepcion.requestFocus();\r\n                    return;\r\n                }\r\n\r\n            }else{\r\n                mu.msgbox(\"El código de producto no es válido para la recepción\");\r\n                txtCodigoProductoRecepcion.setText(\"\");\r\n                txtCodigoProductoRecepcion.requestFocus();\r\n                return;\r\n            }\r\n\r\n        }catch (Exception e){\r\n         mu.msgbox(\"ValidaProductoForRece:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void procesar_registro(){\r\n\r\n        try {\r\n\r\n\r\n            if (Finalizada & Anulada){\r\n                doExit();\r\n            }else{\r\n\r\n                gl.gEscaneo_Pallet = Escaneo_Pallet;\r\n                gl.gselitem = selitem;\r\n\r\n                gl.CodigoRecepcion = selitem.Producto.Codigo_barra;\r\n                gl.gpListDetalleOC.items = pListDetalleOC.items;\r\n\r\n                browse=1;\r\n                startActivity(new Intent(this, frm_recepcion_datos.class));\r\n\r\n            }\r\n        }catch (Exception e){\r\n            mu.msgbox(e.getClass()+\" \"+ e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void procesar_registro_detalle(){\r\n\r\n        try {\r\n\r\n\r\n            if (Finalizada & Anulada){\r\n                doExit();\r\n            }else{\r\n\r\n                if (selitem.Cantidad_recibida>0){\r\n\r\n                    gl.gEscaneo_Pallet = Escaneo_Pallet;\r\n                    gl.gselitem = selitem;\r\n\r\n                    gl.CodigoRecepcion = selitem.Producto.Codigo_barra;\r\n                    gl.gpListDetalleOC.items = pListDetalleOC.items;\r\n\r\n                    browse=1;\r\n                    startActivity(new Intent(this, frm_list_rec_prod_detalle.class));\r\n\r\n                }else{\r\n                    mu.msgbox(\"No existen recepciones de ese producto\");\r\n                }\r\n\r\n            }\r\n        }catch (Exception e){\r\n            mu.msgbox(e.getClass()+\" \"+ e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private boolean Recepcion_Completa(){\r\n        boolean Completa=false;\r\n        vTipoDiferencia=0;\r\n        double Cantidad_recibida,Cantidad;\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Validando estado de recepción\");\r\n\r\n            if (gBeOrdenCompra.DetalleOC.items!=null){\r\n\r\n                for (clsBeTrans_oc_det Obj: gBeOrdenCompra.DetalleOC.items) {\r\n\r\n                    Cantidad_recibida = Obj.Cantidad_recibida;\r\n                    Cantidad = Obj.Cantidad;\r\n\r\n                    if (Cantidad_recibida>0){\r\n\r\n                        vTipoDiferencia = mu.round(Cantidad_recibida-Cantidad,7);\r\n\r\n                        if (vTipoDiferencia<0){\r\n\r\n                            btnCompletaRec.setText(\"DIF - (NEG)\");\r\n                            btnCompletaRec.setBackgroundColor(Color.parseColor(\"#ffcc0000\"));\r\n                            progress.cancel();\r\n                            return false;\r\n\r\n                        }else if(vTipoDiferencia>0){\r\n\r\n                            btnCompletaRec.setText(\" DIF - (POS)\");\r\n                            btnCompletaRec.setBackgroundColor(Color.parseColor(\"#FF0399D5\"));\r\n                            progress.cancel();\r\n                            return false;\r\n\r\n                        }else if (vTipoDiferencia==0) {\r\n\r\n                            btnCompletaRec.setText(\"COMPLETA\");\r\n                            btnCompletaRec.setBackgroundColor(Color.parseColor(\"#FF99CC00\"));\r\n\r\n                            Completa= true;\r\n                        }\r\n\r\n                    }else{\r\n\r\n                        btnCompletaRec.setText(\"DIF - (NEG)\");\r\n                        btnCompletaRec.setBackgroundColor(Color.parseColor(\"#ffcc0000\"));\r\n                        progress.cancel();\r\n                        return false;\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            progress.cancel();\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            mu.msgbox(e.getClass()+\" \"+ e.getMessage());\r\n        }\r\n\r\n        return  Completa;\r\n\r\n    }\r\n\r\n    private void Lista_Detalle_Documento_Ingreso(){\r\n\r\n        clsBeTrans_oc_det vItem;\r\n        BeListDetalleOC.clear();\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Cargando detalle de documento de ingreso.\");\r\n\r\n            if(pListDetalleOC.items!=null){\r\n\r\n                vItem = new clsBeTrans_oc_det();\r\n\r\n                BeListDetalleOC.add(vItem);\r\n\r\n                for (int i = pListDetalleOC.items.size()-1; i>=0; i--) {\r\n\r\n                    vItem = new clsBeTrans_oc_det();\r\n\r\n                    if (chkRecepcionados.isChecked()==true){\r\n\r\n                        if (pListDetalleOC.items.get(i).Cantidad_recibida!=0){\r\n\r\n                            vItem.No_Linea = pListDetalleOC.items.get(i).No_Linea;\r\n                            vItem.Producto.Codigo = pListDetalleOC.items.get(i).Producto.Codigo;\r\n                            vItem.Producto.Nombre = pListDetalleOC.items.get(i).Producto.Nombre;\r\n                            vItem.Presentacion.Nombre = pListDetalleOC.items.get(i).Presentacion.Nombre;\r\n                            vItem.UnidadMedida.Nombre = pListDetalleOC.items.get(i).UnidadMedida.Nombre;\r\n                            vItem.Cantidad = pListDetalleOC.items.get(i).Cantidad;\r\n                            vItem.Cantidad_recibida = pListDetalleOC.items.get(i).Cantidad_recibida;\r\n                            vItem.Costo = pListDetalleOC.items.get(i).Costo;\r\n                            vItem.FactorPresentacion = pListDetalleOC.items.get(i).FactorPresentacion;\r\n                            vItem.IdOrdenCompraDet = pListDetalleOC.items.get(i).IdOrdenCompraDet;\r\n                            vItem.IdOrdenCompraEnc = pListDetalleOC.items.get(i).IdOrdenCompraEnc;\r\n                            vItem.IdPropietarioBodega = pListDetalleOC.items.get(i).IdPropietarioBodega;\r\n                            vItem.Nombre_Propietario = pListDetalleOC.items.get(i).Nombre_Propietario;\r\n\r\n                            BeListDetalleOC.add(vItem);\r\n\r\n                        }\r\n\r\n                    }else{\r\n\r\n                            vItem.No_Linea = pListDetalleOC.items.get(i).No_Linea;\r\n                            vItem.Producto.Codigo = pListDetalleOC.items.get(i).Producto.Codigo;\r\n                            vItem.Producto.Nombre = pListDetalleOC.items.get(i).Producto.Nombre;\r\n                            vItem.Presentacion.Nombre = pListDetalleOC.items.get(i).Presentacion.Nombre;\r\n                            vItem.UnidadMedida.Nombre = pListDetalleOC.items.get(i).UnidadMedida.Nombre;\r\n                            vItem.Cantidad = pListDetalleOC.items.get(i).Cantidad;\r\n                            vItem.Cantidad_recibida = pListDetalleOC.items.get(i).Cantidad_recibida;\r\n                            vItem.Costo = pListDetalleOC.items.get(i).Costo;\r\n                            vItem.FactorPresentacion = pListDetalleOC.items.get(i).FactorPresentacion;\r\n                            vItem.IdOrdenCompraDet = pListDetalleOC.items.get(i).IdOrdenCompraDet;\r\n                            vItem.IdOrdenCompraEnc = pListDetalleOC.items.get(i).IdOrdenCompraEnc;\r\n                            vItem.IdPropietarioBodega = pListDetalleOC.items.get(i).IdPropietarioBodega;\r\n                            vItem.Nombre_Propietario = pListDetalleOC.items.get(i).Nombre_Propietario;\r\n\r\n                            BeListDetalleOC.add(vItem);\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                btnRegs.setText(\"Regs: \"+pListDetalleOC.items.size());\r\n            }\r\n\r\n            Collections.sort(BeListDetalleOC,new OrdenarItems());\r\n\r\n            //#EJC20210318: Obtener el tipo de documento de ingreso para saber si es una poliza consolidada o no.\r\n            boolean es_poliza_consolidada = false;\r\n            clsBeTrans_oc_ti TipoIngreso=new clsBeTrans_oc_ti();\r\n            TipoIngreso = gBeOrdenCompra.getTipoIngreso();\r\n            if(TipoIngreso!=null) es_poliza_consolidada = TipoIngreso.Es_Poliza_Consolidada;\r\n\r\n            listdetadapter =new list_adapt_detalle_recepcion(this,BeListDetalleOC,es_poliza_consolidada);\r\n            listView.setAdapter(listdetadapter);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(e.getClass()+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    public void BotonFinalizarRec(View view){\r\n\r\n        try{\r\n\r\n            execws(10);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"BotonFinalizarRec\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    public void BotonDetalle(View view){\r\n\r\n        try{\r\n\r\n            browse=2;\r\n            startActivity(new Intent(this, frm_recepcion_datos.class));\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"BotonDetalle:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgIngresaDetalle(String msg) {\r\n\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(\"¿\"+msg+\"?\");\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    procesar_registro_detalle();\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                   return;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n    }\r\n\r\n    private void Finalizar_Recepcion(){\r\n\r\n        try{\r\n            gl.gBeRecepcion.Firma_piloto = encodedImage;//Byte.parseByte(FirmaPiloto.toString());\r\n            execws(12);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Finalizar_Recepcion:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    public void GuardarFirma(View view ){\r\n        Finalizar_Recepcion();\r\n    }\r\n\r\n    public class OrdenarItems implements Comparator<clsBeTrans_oc_det> {\r\n\r\n        public int compare(clsBeTrans_oc_det left,clsBeTrans_oc_det rigth){\r\n            return left.No_Linea-rigth.No_Linea;\r\n            //return left.Nombre.compareTo(rigth.Nombre);\r\n        }\r\n\r\n    }\r\n\r\n    public class WebServiceHandler extends WebService {\r\n\r\n        public WebServiceHandler(PBase Parent,String Url) {\r\n            super(Parent,Url);\r\n        }\r\n\r\n        @Override\r\n        public void wsExecute(){\r\n\r\n            try{\r\n\r\n                switch (ws.callback) {\r\n\r\n                    case 1:\r\n                        callMethod(\"Iniciar_Recepcion_OC\",\"oBeTrans_oc_enc\",gBeOrdenCompra);\r\n                        break;\r\n                    case 2:\r\n                        callMethod(\"Actualizar_Estado_Recepcion\",\"pIdRecepcionEnc\",gl.gIdRecepcionEnc,\r\n                                \"Estado\",\"Pendiente\");\r\n                        break;\r\n                    case 3:\r\n                        callMethod(\"Get_Single_BeTrans_OC_Estado\",\"pBeTrans_oc_estado\",gBeOrdenCompra.EstadoOC);\r\n                        break;\r\n                    case 4:\r\n                        callMethod(\"Get_Banderas_Recepcion\",\"pIdRecepcionEnc\",gl.gIdRecepcionEnc,\r\n                                \"pFinalizada\",Finalizada,\r\n                                \"pAnulada\",Anulada);\r\n                        break;\r\n                    case 5:\r\n                       callMethod(\"Get_All_Pallet_Ingreso_By_Barra\",\"pCodigoBarraPallet\",pLP,\r\n                               \"pIdBodega\",gl.IdBodega,\r\n                               \"BeProducto\",BeProducto);\r\n                        break;\r\n                    case 6:\r\n                        callMethod(\"Get_BeProducto_By_LP_For_HH\",\"pLic_Plate\",pLP,\r\n                                \"IdRecepcionEnc\",gl.gIdRecepcionEnc,\"pBeStockRec\",gBeStockRec);\r\n                        break;\r\n                    case 7:\r\n                        callMethod(\"Finalizar_Recepcion_Parcial\",\"pRecEnc\",gl.gBeRecepcion,\r\n                                \"pIdOrdenCompraEnc\",vIdOrdenCompra,\"pIdRecepcionEnc\",gl.gIdRecepcionEnc,\r\n                                \"pIdEmpresa\",gl.IdEmpresa,\"pIdBodega\",gl.IdBodega,\r\n                                \"pIdUsuario\",gl.IdOperador,\"pBeStockRec\",gBeStockRec);\r\n                        break;\r\n                    case 8:\r\n                        callMethod(\"Get_BeProducto_By_LP_For_HH\",\"pLic_Plate\",pLP,\r\n                                \"IdRecepcionEnc\",gl.gIdRecepcionEnc,\"pBeStockRec\",gBeStockRec);\r\n                        break;\r\n                    case 9:\r\n                        callMethod(\"Get_BeProducto_By_Codigo_For_HH\",\r\n                                \"pCodigo\",txtCodigoProductoRecepcion.getText().toString(),\"IdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 10:\r\n                        callMethod(\"Get_Banderas_Recepcion\",\"pIdRecepcionEnc\",gl.gIdRecepcionEnc,\"pFinalizada\",Finalizada,\"pAnulada\",Anulada);\r\n                        break;\r\n                    case 11:\r\n                        callMethod(\"Get_Detalle_By_IdRecepcionEnc\",\"pIdRecepcionEnc\",gl.gIdRecepcionEnc);\r\n                        break;\r\n                    case  12:\r\n                        callMethod(\"Actualizar_Estado_Recepcion\",\"pIdRecepcionEnc\",gl.gIdRecepcionEnc,\"Estado\",\"Procesado\");\r\n                        break;\r\n                    case 13:\r\n                        callMethod(\"Guarda_Firma_Recepcion\",\"pIdRecepcionEnc\",gl.gIdRecepcionEnc,\"Firma_piloto\",gl.gBeRecepcion.Firma_piloto);\r\n                        break;\r\n                    case 14:\r\n                        callMethod(\"Finalizar_Recepcion\",\"pRecEnc\",gl.gBeRecepcion,\"backOrder\",false,\r\n                                \"pIdOrdenCompraEnc\",vIdOrdenCompra,\"pIdRecepcionEnc\",gl.gIdRecepcionEnc,\"pIdEmpresa\",\r\n                                gl.IdEmpresa,\"pIdBodega\",gl.IdBodega,\"pIdUsuario\",gl.IdOperador,\"pListObjDetR\",\r\n                                pListTransRecDet.items,\"pHabilitarStock\",gl.gBeRecepcion.Habilitar_Stock);\r\n                        break;\r\n                }\r\n\r\n            }catch (Exception e){\r\n                mu.msgbox(e.getClass()+e.getMessage());\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n        @Override\r\n    public void wsCallBack(Boolean throwing,String errmsg,int errlevel) {\r\n\r\n            try {\r\n\r\n                if (throwing) throw new Exception(errmsg);\r\n\r\n                switch (ws.callback) {\r\n                    case 1:\r\n                        progress.setMessage(\"Actualizando estado de oc\");\r\n                        execws(2);\r\n                        break;\r\n                    case 2:\r\n                        progress.setMessage(\"Obteniendo valores de OC\");\r\n                        execws(3);\r\n                        break;\r\n                    case 3:\r\n                        Lista_Detalle_Documento_Ingreso();\r\n                        Recepcion_Completa();\r\n                        execws(4);\r\n                        break;\r\n                    case 4:\r\n                        processBanderasRecep();\r\n                        break;\r\n                    case 5:\r\n                        processPalletIngreso();\r\n                        break;\r\n                    case 6:\r\n                        processProductoByLP();\r\n                        break;\r\n                    case 7:\r\n                        mu.msgbox(\"Pallet procesado correctamente\");\r\n                        txtCodigoProductoRecepcion.setText(\"\");\r\n                        txtCodigoProductoRecepcion.requestFocus();\r\n                        break;\r\n                    case 8:\r\n                        procesProductoByLPNo();\r\n                        break;\r\n                    case 9:\r\n                        processGetProductoByCodigo();\r\n                        break;\r\n                    case 10:\r\n                        processBanderasRecepFinaliza();\r\n                        break;\r\n                    case 11:\r\n                        processGetDetalleByIdRepcionEnc();\r\n                        break;\r\n                    case 12:\r\n                        execws(13);\r\n                        break;\r\n                    case 13:\r\n                        execws(14);\r\n                        break;\r\n                    case 14:\r\n                        doExit();\r\n                        break;\r\n                }\r\n\r\n            } catch (Exception e) {\r\n                msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n            }\r\n\r\n    }\r\n\r\n    private void processBanderasRecep(){\r\n\r\n        try {\r\n\r\n            Finalizada =(Boolean) xobj.getSingle(\"pFinalizada\",Boolean.class);\r\n            Anulada =(Boolean) xobj.getSingle(\"pAnulada\",Boolean.class);\r\n\r\n            if (Finalizada){\r\n                mu.msgbox(\"La recepción \"+ gl.gIdRecepcionEnc + \" ya fue finalizada\");\r\n            }\r\n\r\n            if (Anulada){\r\n                mu.msgbox(\"La recepción \"+ gl.gIdRecepcionEnc + \" fue anulada\");\r\n            }\r\n\r\n            if (Finalizada & Anulada){\r\n                gl.CodigoRecepcion =\"\";\r\n                gl.Carga_Producto_x_Pallet = false;\r\n                gl.gFechaVenceAnterior = \"\";\r\n                gl.gLoteAnterior =\"\";\r\n                gl.Escaneo_Pallet=false;\r\n                super.finish();\r\n            }\r\n\r\n\r\n\r\n        } catch (Exception e) {\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processPalletIngreso(){\r\n\r\n        try{\r\n\r\n            lBeINavBarraPallet = xobj.getresult(clsBeI_nav_barras_palletList.class,\"Get_All_Pallet_Ingreso_By_Barra\");\r\n\r\n            BeProducto = xobj.getresultSingle(clsBeProducto.class,\"BeProducto\");\r\n\r\n           // ValidaEstadoPallet();\r\n\r\n            if (lBeINavBarraPallet!=null){\r\n                if (lBeINavBarraPallet.items!=null){\r\n\r\n                    if (lBeINavBarraPallet.items.size()==1){\r\n                        BeINavBarraPallet = lBeINavBarraPallet.items.get(0);\r\n                    }else {\r\n                        if(gBeOrdenCompra.IdTipoIngresoOC ==4){\r\n                            BeINavBarraPallet = stream(lBeINavBarraPallet.items).where(c->c.Bodega_Origen.equals(gBeOrdenCompra.ProveedorBodega.Proveedor.Codigo) && c.Bodega_Destino.equals(gl. gCodigoBodega)).first();\r\n                        }else{\r\n                            mu.msgbox(\"Excepción no controlada por barra de pallet en tipo de documento, reporte esto a desarrollo (Desarrollo, en teoría, no debería ocurrir):\"+gBeOrdenCompra.IdTipoIngresoOC);\r\n                        return;\r\n                        }\r\n                    }\r\n\r\n                }else{\r\n                    mu.msgbox(\"El código de pallet : \"+ pLP+\" no existe en el listado de barras válidas para ingreso.\");\r\n                    return;\r\n                }\r\n            }else{\r\n                mu.msgbox(\"El código de pallet : \"+ pLP+\" no existe en el listado de barras válidas para ingreso.\");\r\n                return;\r\n            }\r\n\r\n            Continua_Validando_Barra();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processPalletIngreso\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processProductoByLP(){\r\n\r\n        try{\r\n\r\n            BeProducto = xobj.getresult(clsBeProducto.class,\"Get_BeProducto_By_LP_For_HH\");\r\n\r\n            msgValidaProductoPallet(\"¿El pallet está completo y en buen estado?\");\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processProductoByLP\");\r\n        }\r\n    }\r\n\r\n    private void procesProductoByLPNo(){\r\n        try{\r\n            BeProducto = xobj.getresult(clsBeProducto.class,\"Get_BeProducto_By_LP_For_HH\");\r\n            ValidaProductoForRece();\r\n        }catch (Exception e){\r\n            mu.msgbox(\"procesProductoByLPNo:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processGetProductoByCodigo(){\r\n\r\n        try{\r\n\r\n            BeProducto = xobj.getresult(clsBeProducto.class,\"Get_BeProducto_By_Codigo_For_HH\");\r\n\r\n           ValidaProductoForRece();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processGetProductoByCodigo\");\r\n        }\r\n    }\r\n\r\n    private void processBanderasRecepFinaliza(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo banderas de recepción\");\r\n\r\n            Finalizada =(Boolean) xobj.getSingle(\"pFinalizada\",Boolean.class);\r\n            Anulada =(Boolean) xobj.getSingle(\"pAnulada\",Boolean.class);\r\n\r\n            if (Finalizada){\r\n                mu.msgbox(\"La recepción \"+ gl.gIdRecepcionEnc + \" ya fue finalizada\");\r\n            }\r\n\r\n            if (Anulada){\r\n                mu.msgbox(\"La recepción \"+ gl.gIdRecepcionEnc + \" fue anulada\");\r\n            }\r\n\r\n            if (Finalizada | Anulada){\r\n                onResume();\r\n            }else{\r\n                pListTransRecDet = new clsBeTrans_re_detList();\r\n                execws(11);\r\n            }\r\n\r\n\r\n\r\n        } catch (Exception e) {\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processGetDetalleByIdRepcionEnc(){\r\n        try{\r\n\r\n            pListTransRecDet = xobj.getresult(clsBeTrans_re_detList.class,\"Get_Detalle_By_IdRecepcionEnc\");\r\n\r\n            if (pListTransRecDet!=null){\r\n                if (pListTransRecDet.items!=null){\r\n\r\n                    if (gl.TipoOpcion ==1){\r\n                        if (!Recepcion_Completa()){\r\n\r\n                            if (vTipoDiferencia!=0){\r\n                                pListDetalleOC.items =stream(gBeOrdenCompra.DetalleOC.items).where(c->c.Cantidad-c.Cantidad_recibida!=0).toList();\r\n                                Lista_Detalle_Documento_Ingreso();\r\n                            }\r\n\r\n                            if (vTipoDiferencia<0){\r\n\r\n                                msgValidaFaltantes(\"La recepción aún tiene faltante de producto. ¿Finalizar de todas formas?\");\r\n\r\n                            }else if(vTipoDiferencia >0){\r\n\r\n                                msgValidaSobrantes(\"La recepción tiene excedente de producto.¿finalizar de todas formas?\");\r\n\r\n                            }else if(vTipoDiferencia==0|vTipoDiferencia==0.0){\r\n\r\n                                msgValidaFaltantes(\"La recepción aún tiene faltante de producto. ¿Finalizar de todas formas?\");\r\n\r\n                            }\r\n\r\n                        }else{\r\n                            Finalizar = true;\r\n                            Termina_Finalizacion_Recepcion();\r\n                        }\r\n                    }\r\n\r\n                }else{\r\n\r\n                }\r\n            }else{\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processGetDetalleByIdRepcionEnc\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgValidaFaltantes(String msg) {\r\n\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    Finalizar = true;\r\n                    Termina_Finalizacion_Recepcion();\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    Finalizar = false;\r\n                    return;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n    }\r\n\r\n    private void msgValidaSobrantes(String msg) {\r\n\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    Finalizar = true;\r\n                    Termina_Finalizacion_Recepcion();\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    Finalizar = false;\r\n                    return;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n    }\r\n\r\n    private void msgPreguntaFinalizar(String msg) {\r\n\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                   execws(11);\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                   return;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n    }\r\n\r\n    private void Termina_Finalizacion_Recepcion(){\r\n\r\n        try{\r\n\r\n            if (Finalizar){\r\n\r\n                if (gl.gBeRecepcion.Firma_piloto.equals(\"\")){\r\n\r\n                    MuestraPantallaFirma(this);\r\n\r\n                }else{\r\n                    Finalizar_Recepcion();\r\n                }\r\n\r\n            }else{\r\n                return;\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Termina_Finalizacion_Recepcion\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void MuestraPantallaFirma(Activity activity){\r\n\r\n        try{\r\n\r\n            dialog = new Dialog(activity);\r\n            dialog.setCancelable(false);\r\n            dialog.setContentView(R.layout.frmfirmadig);\r\n\r\n            txtFirma = (DrawingView)dialog.findViewById(R.id.drawV);\r\n            DisplayMetrics metrics = new DisplayMetrics();\r\n            getWindowManager().getDefaultDisplay().getMetrics(metrics);\r\n            txtFirma.init(metrics);\r\n\r\n            btnGuardarFirma = (Button)dialog.findViewById(R.id.btnGuardarFirma);\r\n            btnLimpiar = (Button)dialog.findViewById(R.id.btnLimpiar);\r\n            btnSalirFirma = (Button)dialog.findViewById(R.id.btnSalirFirma);\r\n\r\n            btnGuardarFirma.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n\r\n                    FirmaPiloto = txtFirma.getBitmap();\r\n                    //CM_20201130: Se obtienen los bytes de la firma para convertirlos y guardarlos.\r\n                    firmByte = txtFirma.getBytes();\r\n                    encodedImage = Base64.encodeToString(firmByte, Base64.DEFAULT);\r\n                    dialog.cancel();\r\n                    Finalizar_Recepcion();\r\n                }\r\n            });\r\n\r\n            btnLimpiar.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    txtFirma.clear();\r\n                }\r\n            });\r\n\r\n            btnSalirFirma.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    dialog.cancel();\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n            //startActivity(new Intent(this, frmFirma.class));\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"MuestraPantallaFirma\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void execws(int callbackvalue) {\r\n        ws.callback=callbackvalue;\r\n        ws.execute();\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n\r\n        try{\r\n\r\n            super.onResume();\r\n\r\n            if (browse==1){\r\n                browse=0;\r\n                pListDetalleOC.items= gl.gpListDetalleOC.items;\r\n                Lista_Detalle_Documento_Ingreso();\r\n               if(Recepcion_Completa()){\r\n                   msgPreguntaFinalizar(\"Recepción completa. ¿Finalizar?\");\r\n               }\r\n            }\r\n\r\n            if (browse==2){\r\n                browse=0;\r\n                pListDetalleOC.items= gl.gpListDetalleOC.items;\r\n                Lista_Detalle_Documento_Ingreso();\r\n              Recepcion_Completa();\r\n            }\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"OnResume\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    public void Salir(View view){\r\n        msgAskExit(\"Está seguro de salir\");\r\n    }\r\n\r\n    private void msgAskExit(String msg) {\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(\"¿\" + msg + \"?\");\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    doExit();\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    ;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        try{\r\n            msgAskExit(\"Está seguro de salir\");\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/dts/tom/Transacciones/Recepcion/frm_list_rec_prod.java	(revision b5ce5ac9d108fb929605f7a4b57b5971a4882985)
+++ app/src/main/java/com/dts/tom/Transacciones/Recepcion/frm_list_rec_prod.java	(date 1622608839076)
@@ -726,7 +726,7 @@
                         if (vTipoDiferencia<0){
 
                             btnCompletaRec.setText("DIF - (NEG)");
-                            btnCompletaRec.setBackgroundColor(Color.parseColor("#ffcc0000"));
+                            btnCompletaRec.setBackgroundColor(Color.parseColor("#ffa5a0"));
                             progress.cancel();
                             return false;
 
@@ -748,7 +748,7 @@
                     }else{
 
                         btnCompletaRec.setText("DIF - (NEG)");
-                        btnCompletaRec.setBackgroundColor(Color.parseColor("#ffcc0000"));
+                        btnCompletaRec.setBackgroundColor(Color.parseColor("#ffa5a0"));
                         progress.cancel();
                         return false;
                     }
Index: app/src/main/java/com/dts/tom/Transacciones/CambioUbicacion/frm_cambio_ubicacion_ciega.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.dts.tom.Transacciones.CambioUbicacion;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.DialogInterface;\r\nimport android.graphics.Color;\r\nimport android.graphics.Typeface;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.text.InputType;\r\nimport android.util.Log;\r\nimport android.view.KeyEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Spinner;\r\nimport android.widget.TableRow;\r\nimport android.widget.TextView;\r\n\r\nimport com.dts.base.WebService;\r\nimport com.dts.base.XMLObject;\r\nimport com.dts.classes.Mantenimientos.Bodega.clsBeBodega_ubicacion;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_estado.clsBeProducto_estado;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_estado.clsBeProducto_estadoList;\r\nimport com.dts.classes.Mantenimientos.Producto.clsBeProducto;\r\nimport com.dts.classes.Mantenimientos.Producto.clsBeProductoList;\r\nimport com.dts.classes.Transacciones.CambioUbicacion.clsBeMotivo_ubicacion.clsBeMotivo_ubicacionList;\r\nimport com.dts.classes.Transacciones.Movimiento.Trans_movimientos.clsBeTrans_movimientos;\r\nimport com.dts.classes.Transacciones.Movimiento.USUbicStrucStage5.USUbicStrucStage5List;\r\nimport com.dts.classes.Transacciones.Stock.Stock.clsBeStock;\r\nimport com.dts.classes.Transacciones.Stock.Stock_res.clsBeVW_stock_res;\r\nimport com.dts.classes.Transacciones.Stock.Stock_res.clsBeVW_stock_resList;\r\nimport com.dts.tom.PBase;\r\nimport com.dts.tom.R;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\nimport static br.com.zbra.androidlinq.Linq.stream;\r\n\r\npublic class frm_cambio_ubicacion_ciega extends PBase {\r\n\r\n    private frm_cambio_ubicacion_ciega.WebServiceHandler ws;\r\n    private XMLObject xobj;\r\n    private ProgressDialog progress;\r\n\r\n    private EditText txtUbicOrigen, txtCodigoPrd, txtCantidad, txtUbicDestino,txtLicPlate, txtPosiciones, txtPeso;\r\n    private TextView lblUbicCompleta, lblDescProducto, lblLote, lblVence, lblEstadoDestino, txtUbicSug, lblCant,lblPesoEst, lblPeso,lblTituloForma,lblUbicCompDestino;\r\n    private Spinner cmbPresentacion, cmbLote, cmbVence, cmbEstadoOrigen, cmbEstadoDestino;\r\n    private Button btnGuardarCiega;\r\n    private TableRow trPeso;\r\n\r\n    private clsBeMotivo_ubicacionList pListBeMotivoUbicacion = new clsBeMotivo_ubicacionList();\r\n\r\n    private clsBeProducto cvProd = new clsBeProducto();\r\n    private clsBeProductoList productoList = new clsBeProductoList();\r\n\r\n    private clsBeVW_stock_res vStockRes = new clsBeVW_stock_res();\r\n    private clsBeVW_stock_resList stockResList = new clsBeVW_stock_resList();\r\n    private clsBeVW_stock_resList lotesList = new clsBeVW_stock_resList();\r\n    private clsBeVW_stock_resList venceList = new clsBeVW_stock_resList();\r\n    private clsBeVW_stock_resList presentacionList = new clsBeVW_stock_resList();\r\n    private clsBeVW_stock_resList productoEstadoOrigenList = new clsBeVW_stock_resList();\r\n\r\n    /*private clsBeProducto producto_ubicacion = new clsBeProducto();\r\n    private ArrayList<clsBeProducto> productoArrayList = new ArrayList<clsBeProducto>();\r\n    private ArrayList<clsBeVW_stock_res> fechaVenceArrayList = new ArrayList<clsBeVW_stock_res>();\r\n    private ArrayList<clsBeVW_stock_res> loteArrayList = new ArrayList<clsBeVW_stock_res>();\r\n    private clsBeProducto_estado producto_estado_origen = new clsBeProducto_estado();\r\n    private ArrayList<clsBeProducto_estado> productoEstadoOrigenArrayList = new ArrayList<clsBeProducto_estado>();\r\n    private clsBeProducto_estado producto_estado_destino = new clsBeProducto_estado();\r\n    private ArrayList<clsBeProducto_estado> productoEstadoDestinoArrayList = new ArrayList<clsBeProducto_estado>();\r\n    private clsBeProducto_Presentacion presentacion = new clsBeProducto_Presentacion();\r\n    private ArrayList<clsBeProducto_Presentacion> presentacionArrayList = new ArrayList<clsBeProducto_Presentacion>();*/\r\n\r\n    private clsBeProducto_estadoList productoEstadoDestinoList = new clsBeProducto_estadoList();\r\n\r\n    private USUbicStrucStage5List lUbicSug = new USUbicStrucStage5List();\r\n\r\n    private ArrayList<String> cmbPresentacionList = new ArrayList<String>();\r\n    private ArrayList<String> cmbLoteList = new ArrayList<String>();\r\n    private ArrayList<String> cmbVenceList = new ArrayList<String>();\r\n    private ArrayList<String> cmbEstadoOrigenList = new ArrayList<String>();\r\n    private ArrayList<String> cmbEstadoDestinoList = new ArrayList<String>();\r\n\r\n    private String lote = \"\", fechaVence = \"\";\r\n\r\n    private String  fechaVenceU;\r\n\r\n    private int cvUbicOrigID;\r\n    private int cvProdID;\r\n    private int cvPresID;\r\n    private String cvLote;\r\n    private String cvVence;\r\n    private int cvEstOrigen=0;\r\n    private int cvEstDestino;\r\n    private int cvUbicDestID=0;\r\n    private int cvStockID;\r\n    private String cvAtrib;\r\n    private int cvPropID;\r\n    private int cvUMBID;\r\n    private double vFactorPres;\r\n    private boolean validarDatos = false;\r\n    private boolean datosCorrectos = false;\r\n    private boolean vProcesar =false;\r\n\r\n    private boolean Es_Explosion = false;\r\n    private int vIdStockNuevo = 0;\r\n    private int vIdMovimientoNuevo= 0;\r\n    private int vPosiciones=0;\r\n\r\n    private boolean Existe_Lp=false;\r\n\r\n    private boolean EsPalletNoEstandar=false;\r\n    private boolean TienePosiciones=false;\r\n    private boolean Ubicacion_Es_Valida= false;\r\n\r\n    private boolean escaneoPallet;\r\n\r\n    private clsBeTrans_movimientos gMovimientoDet;\r\n    private clsBeBodega_ubicacion bodega_ubicacion_destino;\r\n    private clsBeBodega_ubicacion bodega_ubicacion_origen;\r\n    private clsBeProducto_estado gProdEstado;\r\n    private clsBeVW_stock_res cvStockItem;\r\n    private clsBeVW_stock_res BeStockPallet;\r\n    private clsBeStock pStock;\r\n\r\n    private clsBeProducto BeProductoUbicacion;\r\n    private int IdProductoUbicacion;\r\n    private String vNuevoPalletId;\r\n    private String pLicensePlate;\r\n\r\n    private double vCantidadAUbicar, vCantidadDisponible, vPesoAUbicar, vPesoDisponible;\r\n\r\n    private TextToSpeech mTTS;\r\n    private String text = \"\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        try {\r\n            super.onCreate(savedInstanceState);\r\n            setContentView(R.layout.activity_frm_cambio_ubicacion_ciega);\r\n\r\n            super.InitBase();\r\n\r\n            ws = new frm_cambio_ubicacion_ciega.WebServiceHandler(frm_cambio_ubicacion_ciega.this, gl.wsurl);\r\n            xobj = new XMLObject(ws);\r\n\r\n            txtUbicOrigen = (EditText) findViewById(R.id.txtUbicOrigen);\r\n            txtCodigoPrd = (EditText) findViewById(R.id.txtCodigoPrd);\r\n            txtCantidad = (EditText) findViewById(R.id.txtCantidad);\r\n            txtUbicDestino = (EditText) findViewById(R.id.txtUbicDestino);\r\n            txtLicPlate = (EditText)findViewById(R.id.txtLipPlate);\r\n            txtPeso = (EditText) findViewById(R.id.txtPeso);\r\n\r\n            lblUbicCompleta = (TextView) findViewById(R.id.lblUbicCompleta);\r\n            lblDescProducto = (TextView) findViewById(R.id.lblDescProducto);\r\n            lblLote = (TextView) findViewById(R.id.lblLote);\r\n            lblVence = (TextView) findViewById(R.id.lblVence);\r\n            lblEstadoDestino = (TextView) findViewById(R.id.lblEstadoDestino);\r\n            lblCant = (TextView) findViewById(R.id.lblCant);\r\n            lblPesoEst = (TextView) findViewById(R.id.lblPesoEst);\r\n            lblPeso = (TextView) findViewById(R.id.lblPeso);\r\n            lblTituloForma = (TextView) findViewById(R.id.lblTituloForma);\r\n            lblUbicCompDestino = (TextView) findViewById(R.id.lblUbicCompDestino);\r\n            txtUbicSug = (TextView) findViewById(R.id.txtUbicSug);\r\n\r\n            cmbPresentacion = (Spinner) findViewById(R.id.cmbPresentacion);\r\n            cmbLote = (Spinner) findViewById(R.id.cmbLote);\r\n            cmbVence = (Spinner) findViewById(R.id.cmbVence);\r\n            cmbEstadoOrigen = (Spinner) findViewById(R.id.cmbEstadoOrigen);\r\n            cmbEstadoDestino = (Spinner) findViewById(R.id.cmbEstadoDestino);\r\n\r\n            btnGuardarCiega = (Button) findViewById(R.id.btnGuardarCiega);\r\n\r\n            trPeso = (TableRow)findViewById(R.id.trPeso);\r\n\r\n            txtPosiciones = new EditText(this,null);\r\n            txtPosiciones.setInputType(InputType.TYPE_CLASS_NUMBER);\r\n\r\n            cmbEstadoDestino.setVisibility(gl.modo_cambio == 1 ? View.GONE : View.VISIBLE);\r\n            lblEstadoDestino.setVisibility(gl.modo_cambio == 1 ? View.GONE : View.VISIBLE);\r\n\r\n            lblTituloForma.setText(String.format(\"Cambio de %s\",(gl.modo_cambio==1?\"ubicación N.D.\":\"estado N.D\")));\r\n\r\n            ProgressDialog(\"Cargando forma\");\r\n\r\n            setHandlers();\r\n\r\n            Load();\r\n\r\n        } catch (Exception ex) {\r\n            addlog(new Object() {\r\n            }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n            msgbox(new Object() {\r\n            }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Load() {\r\n\r\n        try {\r\n            if(gl.modo_cambio==1){\r\n                execws(1);\r\n            }else{\r\n                txtUbicOrigen.requestFocus();\r\n                progress.cancel();\r\n            }\r\n        } catch (Exception ex) {\r\n            addlog(new Object() {\r\n            }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n            msgbox(new Object() {\r\n            }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void setHandlers() {\r\n\r\n        cmbPresentacion.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n                try {\r\n\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n\r\n                    if (spinlabel!=null){\r\n                        spinlabel.setTextColor(Color.BLACK);\r\n                        spinlabel.setPadding(5, 0, 0, 0);\r\n                        spinlabel.setTextSize(18);\r\n                        spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                        cvPresID = Integer.valueOf( cmbPresentacion.getSelectedItem().toString().split(\" - \")[0].toString());\r\n                        LlenaLotes();\r\n                    }\r\n\r\n                } catch (Exception ex) {\r\n                    addlog(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n                    msgbox(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parentView) {\r\n                return;\r\n            }\r\n\r\n        });\r\n\r\n        cmbLote.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n                try {\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n\r\n                    if (spinlabel!=null){\r\n                        spinlabel.setTextColor(Color.BLACK);\r\n                        spinlabel.setPadding(5, 0, 0, 0);\r\n                        spinlabel.setTextSize(18);\r\n                        spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                        lote = stockResList.items.get(position).Lote;\r\n                        LlenaFechaVence();\r\n                    }\r\n\r\n                } catch (Exception ex) {\r\n                    addlog(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n                    msgbox(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parentView) {\r\n                return;\r\n            }\r\n\r\n        });\r\n\r\n        cmbVence.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n                try {\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n\r\n                    if (spinlabel!=null){\r\n                        spinlabel.setTextColor(Color.BLACK);\r\n                        spinlabel.setPadding(5, 0, 0, 0);\r\n                        spinlabel.setTextSize(18);\r\n                        spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                        fechaVence = stockResList.items.get(position).getFecha_Vence();\r\n\r\n                        LlenaEstadoOrigen();\r\n\r\n                    }\r\n\r\n                } catch (Exception ex) {\r\n                    addlog(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n                    msgbox(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parentView) {\r\n                return;\r\n            }\r\n\r\n        });\r\n\r\n        cmbEstadoOrigen.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n                try {\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n\r\n                    if (spinlabel!=null){\r\n                        spinlabel.setTextColor(Color.BLACK);\r\n                        spinlabel.setPadding(5, 0, 0, 0);\r\n                        spinlabel.setTextSize(18);\r\n                        spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                        cvEstOrigen = productoEstadoOrigenList.items.get(position).getIdProductoEstado();\r\n                    }\r\n\r\n                } catch (Exception ex) {\r\n                    addlog(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n                    msgbox(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parentView) {\r\n                return;\r\n            }\r\n\r\n        });\r\n\r\n        cmbEstadoDestino.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n                try {\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n\r\n                    if (spinlabel!=null){\r\n                        spinlabel.setTextColor(Color.BLACK);\r\n                        spinlabel.setPadding(5, 0, 0, 0);\r\n                        spinlabel.setTextSize(18);\r\n                        spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                        cvEstDestino = productoEstadoDestinoList.items.get(position).IdEstado;\r\n                    }\r\n\r\n                } catch (Exception ex) {\r\n                    addlog(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n                    msgbox(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parentView) {\r\n                return;\r\n            }\r\n\r\n        });\r\n\r\n        txtCodigoPrd.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if ((event.getAction() == KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER)) {\r\n                    llenaDatosProducto();\r\n                }\r\n\r\n                return false;\r\n            }\r\n        });\r\n\r\n        txtLicPlate.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if ((event.getAction() == KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER)) {\r\n\r\n                    inicializaTareaLP();\r\n\r\n                    Procesa_Lp();\r\n                }\r\n\r\n                return false;\r\n            }\r\n        });\r\n\r\n        txtUbicOrigen.setOnKeyListener(new View.OnKeyListener() {\r\n\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (event.getAction() == KeyEvent.ACTION_DOWN) {\r\n                    switch (keyCode) {\r\n                        case KeyEvent.KEYCODE_ENTER:\r\n                            inicializaTarea(false);\r\n                            validaOrigen();\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        txtUbicOrigen.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View v, boolean hasFocus) {\r\n                if(!hasFocus) {\r\n                    if (txtUbicOrigen.getText().toString().equals(\"\") ||\r\n                            txtUbicOrigen.getText().toString().isEmpty() ||\r\n                            txtUbicOrigen.getText().toString()==null){\r\n\r\n                        if(validarDatos){\r\n                            lblUbicCompleta.setText(\"\");\r\n                            mu.msgbox(\"Debe ingresar la ubicación origen\");\r\n\r\n                            final Handler cbhandler = new Handler();\r\n                            cbhandler.postDelayed(new Runnable() {\r\n                                @Override\r\n                                public void run() {\r\n                                    txtUbicOrigen.requestFocus();\r\n                                }\r\n                            }, 500);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        txtUbicDestino.setOnKeyListener(new View.OnKeyListener() {\r\n\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (event.getAction() == KeyEvent.ACTION_DOWN) {\r\n                    switch (keyCode) {\r\n                        case KeyEvent.KEYCODE_ENTER:\r\n                            validaDestino();\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        txtUbicDestino.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View v, boolean hasFocus) {\r\n                if(!hasFocus) {\r\n                    if (txtUbicDestino.getText().toString().equals(\"\") ||\r\n                            txtUbicDestino.getText().toString().isEmpty() ||\r\n                            txtUbicDestino.getText().toString()==null){\r\n\r\n                        if (validarDatos){\r\n                            mu.msgbox(\"Debe ingresar la ubicación destino\");\r\n\r\n                            final Handler cbhandler = new Handler();\r\n                            cbhandler.postDelayed(new Runnable() {\r\n                                @Override\r\n                                public void run() {\r\n                                    txtUbicDestino.requestFocus();\r\n                                }\r\n                            }, 500);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        txtCantidad.setOnKeyListener(new View.OnKeyListener() {\r\n\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (event.getAction() == KeyEvent.ACTION_DOWN) {\r\n                    switch (keyCode) {\r\n                        case KeyEvent.KEYCODE_ENTER:\r\n\r\n                            try {\r\n\r\n                                String Cantwithformat =txtCantidad.getText().toString();\r\n                                Cantwithformat = Cantwithformat.replace(\",\",\"\");\r\n\r\n                                if(Double.valueOf(Cantwithformat)>0) {\r\n\r\n                                    Recalcula_Peso();\r\n\r\n                                    if (txtPeso.getVisibility()==View.VISIBLE){\r\n                                        txtPeso.requestFocus();\r\n                                    }else{\r\n                                        txtUbicDestino.requestFocus();\r\n                                    }\r\n                                }\r\n                            } catch (NumberFormatException e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        txtPeso.setOnKeyListener(new View.OnKeyListener() {\r\n\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (event.getAction() == KeyEvent.ACTION_DOWN) {\r\n                    switch (keyCode) {\r\n                        case KeyEvent.KEYCODE_ENTER:\r\n\r\n                            try {\r\n\r\n                                String Cantwithformat =txtPeso.getText().toString();\r\n                                Cantwithformat = Cantwithformat.replace(\",\",\"\");\r\n\r\n                                if(Double.valueOf(Cantwithformat)>0) {\r\n                                    txtUbicDestino.requestFocus();\r\n                                }\r\n                            } catch (NumberFormatException e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n\r\n    private void LlenaPresentaciones() {\r\n\r\n        String valor;\r\n\r\n        try {\r\n\r\n            cmbPresentacionList.clear();\r\n\r\n            List AuxList = stream(stockResList.items)\r\n                    .where(c -> c.IdProducto == cvProdID)\r\n                    .toList();\r\n\r\n            presentacionList.items = AuxList;\r\n\r\n            for (int i = 0; i < presentacionList.items.size(); i++) {\r\n\r\n                valor = presentacionList.items.get(i).getIdPresentacion() + \" - \" +\r\n                        presentacionList.items.get(i).getNombre_Presentacion().toString();\r\n\r\n                if (cmbPresentacionList.indexOf(valor)==-1){\r\n                    cmbPresentacionList.add(valor);\r\n                }\r\n\r\n            }\r\n\r\n            ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, cmbPresentacionList);\r\n            dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n            cmbPresentacion.setAdapter(dataAdapter);\r\n\r\n            if (cmbPresentacionList.size() > 0) {\r\n\r\n                if (escaneoPallet && productoList !=null ){\r\n                    int sel = cmbPresentacionList.indexOf(BeStockPallet.getIdPresentacion() + \" - \" +\r\n                                                          BeStockPallet.getNombre_Presentacion());\r\n                    cmbPresentacion.setSelection(sel);\r\n                    cmbPresentacion.setEnabled(false);\r\n                }else{\r\n                    cmbPresentacion.setSelection(0);\r\n                    if (cmbPresentacionList.size() == 1){\r\n                        cmbPresentacion.setEnabled(false);\r\n                    }else{\r\n                        cmbPresentacion.setEnabled(true);\r\n                    }\r\n                }\r\n\r\n                cvPresID =Integer.valueOf( cmbPresentacion.getSelectedItem().toString().split(\" - \")[0].toString());\r\n\r\n            }else{\r\n                LlenaLotes();\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n            addlog(new Object() {\r\n            }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n            msgbox(new Object() {\r\n            }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void LlenaLotes() {\r\n\r\n        String valor;\r\n\r\n        try {\r\n\r\n            cmbLoteList.clear();\r\n\r\n                cvLote = \"\";\r\n\r\n                cmbLote.setVisibility(BeProductoUbicacion.Control_lote ? View.VISIBLE : View.GONE);\r\n                lblLote.setVisibility(BeProductoUbicacion.Control_lote ? View.VISIBLE : View.GONE);\r\n\r\n                if (BeProductoUbicacion.Control_lote) {\r\n\r\n                    try {\r\n\r\n                        List AuxList;\r\n\r\n                        //if (escaneoPallet && productoList != null) {\r\n                        //Quité esta validación porque en stockResList ya está filtrado por LicensePlate\r\n\r\n                        AuxList = stream(stockResList.items)\r\n                                .where(c -> c.IdProducto == cvProdID)\r\n                                .where(c -> c.getIdPresentacion() == cvPresID)\r\n                                .toList();\r\n\r\n                        if (AuxList == null) {\r\n                            cvLote = \"\";\r\n                            LlenaFechaVence();\r\n                        } else {\r\n\r\n                            lotesList.items = AuxList;\r\n\r\n                            for (int i = 0; i < lotesList.items.size(); i++) {\r\n\r\n                                valor = lotesList.items.get(i).Lote;\r\n\r\n                                if (cmbLoteList.indexOf(valor)==-1){\r\n                                    cmbLoteList.add(valor);\r\n                                }\r\n                            }\r\n\r\n                            ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, cmbLoteList);\r\n                            dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                            cmbLote.setAdapter(dataAdapter);\r\n\r\n                            if (cmbLoteList.size() > 0) {\r\n                                cmbLote.setSelection(0);\r\n\r\n                                cvLote = cmbLote.getSelectedItem().toString();\r\n                            }\r\n                        }\r\n                    } catch (Exception ex) {\r\n                        cvLote = \"\";\r\n                        msgbox(\"Llena lote : \" + ex.getMessage());\r\n                        LlenaFechaVence();\r\n                    }\r\n\r\n                } else {\r\n                    LlenaFechaVence();\r\n                }\r\n\r\n        } catch (Exception ex) {\r\n            addlog(new Object() {\r\n            }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n            msgbox(new Object() {\r\n            }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void LlenaFechaVence() {\r\n\r\n        String valor;\r\n\r\n        try {\r\n\r\n            cmbVenceList.clear();\r\n\r\n            cvVence = \"01/01/1900\";\r\n\r\n            cmbVence.setVisibility(BeProductoUbicacion.Control_vencimiento ? View.VISIBLE : View.GONE);\r\n            lblVence.setVisibility(BeProductoUbicacion.Control_vencimiento ? View.VISIBLE : View.GONE);\r\n\r\n            if (BeProductoUbicacion.Control_vencimiento) {\r\n\r\n                try {\r\n\r\n                    Date currentTime = Calendar.getInstance().getTime();\r\n\r\n                    if (cmbLote.getAdapter()!=null && cmbLote.getAdapter().getCount()>0){\r\n                        cvLote = cmbLote.getSelectedItem().toString();\r\n                    }\r\n\r\n                    cvVence =app.strFecha(currentTime);\r\n\r\n                    List AuxList;\r\n\r\n                    if (BeProductoUbicacion.Control_lote) {\r\n                        //if (escaneoPallet && productoList != null) {\r\n                        //Quité esta validación porque en stockResList ya está filtrado por LicensePlate\r\n\r\n                        AuxList = stream(stockResList.items)\r\n                                .where(c -> c.IdProducto == cvProdID)\r\n                                .where(c -> c.getIdPresentacion() == cvPresID)\r\n                                .where(c -> c.getLote() == cvLote)\r\n                                .toList();\r\n\r\n                    } else {\r\n                        //if (escaneoPallet && productoList != null) {\r\n                        //Quité esta validación porque en stockResList ya está filtrado por LicensePlate\r\n\r\n                        AuxList = stream(stockResList.items)\r\n                                .where(c -> c.IdProducto == cvProdID)\r\n                                .where(c -> c.getIdPresentacion() == cvPresID)\r\n                                .toList();\r\n                    }\r\n\r\n                    if (AuxList == null) {\r\n                        cvVence = \"01/01/1900\";\r\n                        LlenaEstadoOrigen();\r\n                    } else {\r\n\r\n                        venceList.items = AuxList;\r\n\r\n                        for (int i = 0; i < venceList.items.size(); i++) {\r\n\r\n                            valor =app.strFecha(venceList.items.get(i).Fecha_Vence);\r\n\r\n                            if (cmbVenceList.indexOf(valor)==-1){\r\n                                cmbVenceList.add(valor);\r\n                            }\r\n                        }\r\n\r\n                        ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, cmbVenceList);\r\n                        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                        cmbVence.setAdapter(dataAdapter);\r\n\r\n                        if (cmbVenceList.size() > 0) {\r\n                            cmbVence.setSelection(0);\r\n                            cvVence = cmbVence.getSelectedItem().toString();\r\n                        }\r\n                    }\r\n                } catch (Exception ex) {\r\n                    cvVence = \"01/01/1900\";\r\n                    msgbox(\"Llena vence : \" + ex.getMessage());\r\n                    LlenaEstadoOrigen();\r\n                }\r\n\r\n\r\n            } else {\r\n               LlenaEstadoOrigen();\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n            addlog(new Object() {\r\n            }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n            msgbox(new Object() {\r\n            }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void LlenaEstadoOrigen() {\r\n\r\n        String valor;\r\n\r\n        try {\r\n\r\n            cmbEstadoOrigenList.clear();\r\n\r\n            List AuxList;\r\n\r\n            if (BeProductoUbicacion.Control_vencimiento && !cvVence.equals(\"01/01/1900\")) {\r\n\r\n                if (BeProductoUbicacion.Control_lote) {\r\n\r\n                    AuxList = stream(stockResList.items)\r\n                            .where(c -> c.IdProducto == cvProdID)\r\n                            .where(c -> c.getIdPresentacion() == cvPresID)\r\n                            .where(c -> c.getLote() == cvLote)\r\n                            .where(c -> (app.strFecha(c.Fecha_Vence).equals(cvVence)))\r\n                            .toList();\r\n\r\n                } else {\r\n\r\n                    AuxList = stream(stockResList.items)\r\n                            .where(c -> c.IdProducto == cvProdID)\r\n                            .where(c -> c.getIdPresentacion() == cvPresID)\r\n                            .where(c -> (app.strFecha(c.Fecha_Vence).equals(cvVence)))\r\n                            .toList();\r\n                }\r\n\r\n            }else{\r\n\r\n                if (BeProductoUbicacion.Control_lote) {\r\n\r\n                    AuxList = stream(stockResList.items)\r\n                            .where(c -> c.IdProducto == cvProdID)\r\n                            .where(c -> c.getIdPresentacion() == cvPresID)\r\n                            .where(c -> c.getLote() == cvLote)\r\n                            .toList();\r\n\r\n                } else {\r\n\r\n                    AuxList = stream(stockResList.items)\r\n                            .where(c -> c.IdProducto == cvProdID)\r\n                            .where(c -> c.getIdPresentacion() == cvPresID)\r\n                            .toList();\r\n                }\r\n\r\n            }\r\n\r\n            if (AuxList == null) {\r\n                cvEstOrigen = 0;\r\n                muestraCantidad();\r\n            } else {\r\n\r\n                productoEstadoOrigenList.items = AuxList;\r\n\r\n                for (int i = 0; i < productoEstadoOrigenList.items.size(); i++) {\r\n\r\n                    valor = productoEstadoOrigenList.items.get(i).getIdProductoEstado() + \" - \" +\r\n                            productoEstadoOrigenList.items.get(i).getNomEstado();\r\n\r\n                    if (cmbEstadoOrigenList.indexOf(valor)==-1){\r\n                        cmbEstadoOrigenList.add(valor);\r\n                    }\r\n                }\r\n\r\n                ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, cmbEstadoOrigenList);\r\n                dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                cmbEstadoOrigen.setAdapter(dataAdapter);\r\n\r\n                if (cmbEstadoOrigenList.size() > 0) {\r\n\r\n                    cmbEstadoOrigen.setSelection(0);\r\n                    cvEstOrigen = Integer.valueOf(cmbEstadoOrigen.getSelectedItem().toString().split(\" - \")[0].toString());\r\n                    muestraCantidad();\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n            cvEstOrigen = 0;\r\n            muestraCantidad();\r\n\r\n            addlog(new Object() {}.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void LlenaEstadoDestino(int idPropietario) {\r\n        try {\r\n            cmbEstadoDestinoList.clear();\r\n\r\n            for (int i = 0; i < productoEstadoDestinoList.items.size(); i++) {\r\n                cmbEstadoDestinoList.add(productoEstadoDestinoList.items.get(i).Nombre);\r\n            }\r\n\r\n            ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, cmbEstadoDestinoList);\r\n            dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n            cmbEstadoDestino.setAdapter(dataAdapter);\r\n\r\n            if (cmbEstadoDestinoList.size() > 0) cmbEstadoDestino.setSelection(0);\r\n\r\n            if (escaneoPallet && productoList != null) {\r\n                //LLama este procedimiento del WS Get_Productos_By_IdUbicacion_And_LicPlate\r\n                execws(6);\r\n            } else {\r\n                //LLama este procedimiento del WS Get_Productos_By_IdUbicacion\r\n                execws(7);\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            mu.msgbox(e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Procesa_Lp() {\r\n        try {\r\n\r\n            progress.setMessage(\"Cargando datos del producto\");\r\n            progress.show();\r\n\r\n            String pbarra;\r\n\r\n            pbarra = txtCodigoPrd.getText().toString();\r\n\r\n            cvLote = \"\";\r\n            cvPresID = 0;\r\n            cvEstOrigen = 0;\r\n            cvProdID = 0;\r\n            cvVence = \"01/01/1900\";\r\n\r\n            String vStarWithParameter = \"$\";\r\n\r\n            if (!txtLicPlate.getText().toString().isEmpty()) {\r\n\r\n               escaneoPallet = true;\r\n\r\n                pLicensePlate = txtLicPlate.getText().toString().replace(\"$\", \"\");\r\n\r\n                //Llama al método del WS Existe_Lp_In_Stock\r\n                execws(18);\r\n\r\n                progress.cancel();\r\n\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n            progress.cancel();\r\n            msgbox(\"Error \" + ex.getMessage());\r\n        }\r\n        progress.cancel();\r\n    }\r\n\r\n    private void llenaDatosProducto() {\r\n        try {\r\n\r\n            progress.setMessage(\"Cargando datos del producto\");\r\n            progress.show();\r\n\r\n            String pbarra;\r\n\r\n            pbarra = txtCodigoPrd.getText().toString();\r\n\r\n            cvLote = \"\";\r\n            cvPresID = 0;\r\n            cvEstOrigen = 0;\r\n            cvProdID = 0;\r\n            cvVence = \"01/01/1900\";\r\n\r\n            String vStarWithParameter = \"$\";\r\n\r\n            //Comentario: La barra de pallet puede comenzar con $ y no con (01)\r\n            if (txtLicPlate.getText().toString().startsWith(\"$\") ||\r\n                    txtLicPlate.getText().toString().startsWith(\"(01)\") ||\r\n                    txtLicPlate.getText().toString().startsWith(vStarWithParameter)) {\r\n\r\n                //Es una barra de pallet válida por tamaño\r\n                int vLengthBarra = txtLicPlate.getText().toString().length();\r\n\r\n               // if (vLengthBarra >= 16) {\r\n\r\n                    escaneoPallet = true;\r\n\r\n                    pLicensePlate = txtLicPlate.getText().toString().replace(\"$\", \"\");\r\n\r\n                    //Llama al método del WS Get_Stock_By_Lic_Plate_And_Codigo\r\n\r\n                    execws(17);\r\n\r\n                //}\r\n\r\n            } else {\r\n                escaneoPallet = false;\r\n\r\n                //Llama al método del WS Get_BeProducto_By_Codigo_For_HH\r\n                execws(3);\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n            progress.cancel();\r\n            msgbox(\"Error \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void muestraCantidad(){\r\n\r\n        List AuxList;\r\n        Date currentTime = Calendar.getInstance().getTime();\r\n\r\n        Calendar calendar = Calendar.getInstance();\r\n        calendar.setTime(currentTime);\r\n        calendar.add(Calendar.YEAR, 1);\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo la cantidad disponible del producto\");\r\n            progress.show();\r\n\r\n            if (escaneoPallet && productoList != null) {\r\n                if(cmbVence.getAdapter() != null){\r\n                    cvVence = cmbVence.getSelectedItem().toString();\r\n                    if (cmbVence.getAdapter().getCount() == 1) {\r\n                        cmbVence.setEnabled(false);\r\n                    }\r\n                } else{\r\n                    cvVence = \"01/01/1900\";\r\n                }\r\n            }else {\r\n                if(cmbVence.getAdapter() != null){\r\n                    cvVence = cmbVence.getSelectedItem().toString();\r\n                    cmbVence.setEnabled(true);\r\n                }  else{\r\n                    cvVence = \"01/01/1900\";\r\n                }\r\n            }\r\n\r\n        }catch(Exception ex){\r\n            cvVence = app.strFecha(calendar.getTime());\r\n        }\r\n\r\n        try {\r\n            if (escaneoPallet & productoList != null) {\r\n                if(cmbEstadoOrigen.getAdapter() != null){\r\n                    cvEstOrigen = BeStockPallet.IdProductoEstado;\r\n                    if (cmbEstadoOrigen.getAdapter().getCount() == 1) {\r\n                        cmbEstadoOrigen.setEnabled(false);\r\n                    }\r\n                }else{\r\n                    cvEstOrigen =0;\r\n                }\r\n\r\n            }else {\r\n\r\n                if(cmbEstadoOrigen.getAdapter() != null){\r\n\r\n                    if (!cmbEstadoOrigen.getSelectedItem().toString().isEmpty()){\r\n                        cvEstOrigen = Integer.valueOf(cmbEstadoOrigen.getSelectedItem().toString().split(\" - \")[0]);\r\n                    }else {\r\n                        cvEstOrigen =0;\r\n                    }\r\n\r\n                    cmbEstadoOrigen.setEnabled(true);\r\n                }else{\r\n                    cvEstOrigen =0;\r\n                }\r\n\r\n            }\r\n        }catch(Exception ex){\r\n            cvEstOrigen =0;\r\n        }\r\n\r\n        vCantidadAUbicar =0;\r\n        vCantidadDisponible =0;\r\n        lblCant.setText(\"Max : \" + mu.frmdecimal(vCantidadDisponible, 6));\r\n\r\n        if (gl.gCProdAnterior.equals(txtCodigoPrd.getText())  && gl.gCUbicAnterior.equals(txtUbicOrigen.getText().toString()))\r\n        {\r\n            try{\r\n                int IndexAux;\r\n\r\n                if (gl.gCEstadoAnterior != -1 && cmbEstadoOrigen.getAdapter()!=null  && cmbEstadoOrigen.getAdapter().getCount()>0) {\r\n                    IndexAux = cmbEstadoOrigenList.indexOf(gl.gCEstadoAnterior+ \" - \" + gl.gCNomEstadoAnterior);\r\n                    cmbEstadoOrigen.setSelection(IndexAux);\r\n                }\r\n\r\n                if (gl.gCFechaAnterior.equals(\"01/01/1900\") && cmbVence.getAdapter()!=null  && cmbVence.getAdapter().getCount()>0) {\r\n                    IndexAux = cmbVenceList.indexOf(gl.gCFechaAnterior);\r\n                    cmbVence.setSelection(IndexAux);\r\n                }\r\n\r\n                if (!gl.gCLoteAnterior.isEmpty() && cmbLote.getAdapter()!=null  && cmbLote.getAdapter().getCount()>0) {\r\n                    IndexAux = cmbLoteList.indexOf(gl.gCLoteAnterior);\r\n                    cmbLote.setSelection(IndexAux);\r\n                }\r\n\r\n                if (gl.gCPresAnterior != -1 && cmbPresentacion.getAdapter()!=null && cmbPresentacion.getAdapter().getCount()>0) {\r\n                    IndexAux = cmbPresentacionList.indexOf( gl.gCPresAnterior + \" - \" + gl.gCNomPresAnterior);\r\n                    cmbPresentacion.setSelection(IndexAux);\r\n                }\r\n\r\n            }catch(Exception ex){\r\n                addlog(new Object() {}.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n                msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n            }\r\n        }\r\n\r\n        try{\r\n\r\n            //#CKFK 20200414 quité la condiciones de si se había escaneado un pallet porque el license plate se filtra al inicio\r\n            //cuando se obtiene el stockResList\r\n            AuxList = stream(stockResList.items)\r\n                    .where(c -> c.IdProducto == cvProdID)\r\n                    .where(c -> c.IdPresentacion == cvPresID)\r\n                    .where(c -> (BeProductoUbicacion.Control_lote?c.Lote.equals(cvLote):1==1))\r\n                    .where(c -> c.Atributo_variante_1 == (cvAtrib == null ? \"\" : cvAtrib))\r\n                    .where(c -> (cvEstOrigen > 0 ? c.IdProductoEstado == cvEstOrigen : c.IdProductoEstado >= 0))\r\n                    .where(c -> (BeProductoUbicacion.Control_vencimiento?app.strFecha(c.Fecha_Vence).equals(cvVence):1==1))\r\n                    .toList();\r\n\r\n            if (AuxList == null) {\r\n                return;\r\n            }\r\n\r\n        }catch(Exception ex){\r\n            msgbox(\"Llena cant : \" + ex.getMessage()) ;\r\n            return;\r\n        }\r\n\r\n        try{\r\n\r\n            clsBeVW_stock_resList tmpStockResList = new clsBeVW_stock_resList();\r\n\r\n            tmpStockResList.items = AuxList;\r\n\r\n            if (tmpStockResList.items.size() >0){\r\n                cvStockID = tmpStockResList.items.get(0).getIdStock();\r\n                vCantidadAUbicar =tmpStockResList.items.get(0).getCantidadUmBas() - tmpStockResList.items.get(0).CantidadReservadaUMBas;\r\n                vFactorPres = (tmpStockResList.items.get(0).getFactor()==0?1:tmpStockResList.items.get(0).getFactor());\r\n                vPesoAUbicar = tmpStockResList.items.get(0).getPeso();\r\n            }else{\r\n                vCantidadAUbicar = 0;\r\n                cvStockID =0;\r\n            }\r\n\r\n            if( escaneoPallet && productoList != null) {\r\n\r\n                if(BeStockPallet.Factor >0)\r\n                {\r\n                    vCantidadAUbicar = (vCantidadAUbicar / BeStockPallet.Factor);\r\n                }\r\n            }else if (cvPresID != 0) {\r\n                if( vFactorPres >0){\r\n                    vCantidadAUbicar = (vCantidadAUbicar / vFactorPres);\r\n                }\r\n            }\r\n\r\n            vCantidadDisponible =vCantidadAUbicar;\r\n\r\n            if (vCantidadDisponible==0){\r\n                msgbox(\"No hay existencias disponibles de este producto en esta ubicación o las existentes están reservadas\");\r\n                inicializaTarea(false);\r\n                return;\r\n            }else{\r\n                lblCant.setText(mu.frmdecimal(vCantidadDisponible, gl.gCantDecDespliegue));\r\n                txtCantidad.setText(mu.frmdecimal(vCantidadAUbicar, gl.gCantDecDespliegue));\r\n                txtPeso.setText(mu.frmdecimal(vPesoAUbicar, gl.gCantDecDespliegue));\r\n                txtCantidad.selectAll();\r\n            }\r\n\r\n            txtUbicDestino.setEnabled(true);\r\n            txtCantidad.setEnabled(true);\r\n            txtPeso.setEnabled(true);\r\n\r\n            txtCantidad.requestFocus();\r\n\r\n            fechaVenceU = app.strFechaXMLCombo(cvVence);\r\n            execws(15);\r\n\r\n        }catch(Exception ex){\r\n            msgbox(\"Llena cantidad \" + ex.getMessage());\r\n        }finally {\r\n            progress.cancel();\r\n        }\r\n\r\n    }\r\n\r\n    private void Recalcula_Peso(){\r\n\r\n        double vCantidad = 0, vPesoUni = 0;\r\n\r\n        try{\r\n\r\n            if (BeProductoUbicacion.getControl_peso()){\r\n                vPesoUni = BeProductoUbicacion.Peso_referencia;\r\n                vCantidad = Double.valueOf(txtCantidad.getText().toString());\r\n                txtPeso.setText(String.valueOf(vPesoUni*vCantidad));\r\n            }\r\n        }catch (Exception ex){\r\n            mu.msgbox(\"Recalcula_Peso:\" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    public void ProgressDialog(String mensaje){\r\n        progress=new ProgressDialog(this);\r\n        progress.setMessage(mensaje);\r\n        progress.setProgressStyle(ProgressDialog.STYLE_SPINNER);\r\n        progress.setIndeterminate(true);\r\n        progress.setProgress(0);\r\n        progress.show();\r\n    }\r\n\r\n    private void execws(int callbackvalue) {\r\n        ws.callback=callbackvalue;\r\n        ws.execute();\r\n    }\r\n\r\n    @Override\r\n    public void wsCallBack(Boolean throwing,String errmsg,int errlevel) {\r\n        try {\r\n            if (throwing) throw new Exception(errmsg);\r\n\r\n            switch (ws.callback) {\r\n                case 1:\r\n                    processUbicRecepcion();\r\n                    break;\r\n                case 2:\r\n                    processMotivosUbiHH();\r\n                    break;\r\n                case 3:\r\n                    processProducto();\r\n                    break;\r\n                case 4:\r\n                    processProdEstado();\r\n                    break;\r\n                case 5:\r\n                    processStockLP();\r\n                    break;\r\n                case 6:\r\n                    processProductoUbicLP();\r\n                    break;\r\n                case 7:\r\n                    processProductoUbic();\r\n                    break;\r\n                case 8:\r\n                    processNuevoCorrelativoLP();\r\n                    break;\r\n                case 9:\r\n                    processIdNuevoPallet();\r\n                    break;\r\n                case 10:\r\n                    processEstadosProp();\r\n                    break;\r\n                case 11:\r\n                    processUbicOrigen();\r\n                    break;\r\n                case 12:\r\n                    processUbicDestino();\r\n                    break;\r\n                case 13:\r\n                    processCambio();\r\n                    break;\r\n                case 14:\r\n                    processCambioUbicEstHH();\r\n                    break;\r\n                case 15:\r\n                    processUbicacionDestSugerida();\r\n                    break;\r\n                case 16:\r\n                    processUbicDestinoSug();\r\n                    break;\r\n                case 17:\r\n                    processStockLP_AndCodigo();\r\n                    break;\r\n                case 18:\r\n                    processExisteLp();\r\n                    break;\r\n                case 19:\r\n                    processPalletNoEstandar();\r\n                    break;\r\n                case 20:\r\n                    processTienePosiciones();\r\n                    break;\r\n                case 21:\r\n                    processUbicacion_Valida();\r\n                    break;\r\n\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n\r\n    public class WebServiceHandler extends WebService {\r\n\r\n        public WebServiceHandler(PBase Parent,String Url) {\r\n            super(Parent,Url);\r\n        }\r\n\r\n        @Override\r\n        public void wsExecute(){\r\n            try {\r\n                switch (ws.callback) {\r\n                    case 1://Obtiene la ubicacion por defecto de la recepción para el cambio de ubicacion o estado ciego\r\n                        callMethod(\"Get_IdUbic_Ciega_Recepcion_By_IdBodega\",\"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 2://Obtiene los motivos de ubicación\r\n                        callMethod(\"Get_Motivos_Ubicacion_For_HH\");\r\n                        break;\r\n                    case 3://Obtiene el producto\r\n                        callMethod(\"Get_BeProducto_By_Codigo_For_HH\",\"pCodigo\",txtCodigoPrd.getText().toString(),\r\n                                \"IdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 4://Obtiene el estado del producto\r\n                        callMethod(\"Get_Single_By_IdEstado\",\"pIdEstado\",gl.tareadet.IdEstadoDestino);\r\n                        break;\r\n                    case 5://Obtiene el producto que coincide con el License Plate ingresado en una bodega\r\n                        callMethod(\"Get_Stock_By_Lic_Plate\",\"pLicensePlate\",pLicensePlate,\r\n                                \"pIdBodega\", gl.IdBodega);\r\n                        break;\r\n                    case 6://Obtiene el stock de un producto en una Ubicacion con un License Plate\r\n                        callMethod(\"Get_Productos_By_IdUbicacion_And_LicPlate\",\r\n                                \"pIdUbicacion\", txtUbicOrigen.getText().toString(),\r\n                                \"pIdProductoBodega\",BeProductoUbicacion.IdProductoBodega,\r\n                                \"pLicPlate\",BeStockPallet.Lic_plate);\r\n\r\n                        break;\r\n                    case 7://Obtiene el stock de un producto en una ubicacion\r\n                        callMethod(\"Get_Productos_By_IdUbicacion\",\r\n                                \"pIdUbicacion\", txtUbicOrigen.getText().toString(),\r\n                                \"pIdProductoBodega\",BeProductoUbicacion.IdProductoBodega);\r\n                        break;\r\n                    case 8://Obtiene el nuevo correlativo de un License Plate\r\n                        callMethod(\"Get_Nuevo_Correlativo_LicensePlate\",\r\n                                \"pIdEmpresa\", gl.IdEmpresa,\r\n                                \"pIdBodega\",gl.IdBodega,\r\n                                \"pIdPropietario\",BeStockPallet.IdPropietario,\r\n                                \"pIdProducto\",BeStockPallet.IdProducto);\r\n\r\n                        break;\r\n                    case 9://Actualiza la tabla trans_movimientos\r\n                        callMethod(\"Set_Nuevo_Pallet_Id\",\r\n                                \"pIdBodega\",gl.IdBodega,\r\n                                \"pIdUsuario\",gl.OperadorBodega.getIdOperador(),\r\n                                \"pLicPlateAnt\",BeStockPallet.getLic_plate(),\r\n                                \"pLicPlateNuevo\", vNuevoPalletId,\r\n                                \"pIdStockNuevo\", vIdStockNuevo,\r\n                                \"pIdMovimientoNuevo\",vIdMovimientoNuevo);\r\n                        break;\r\n                    case 10://Obtiene los estados por propietario\r\n                        callMethod(\"Get_Estados_By_IdPropietario\",\r\n                                \"pIdPropietario\",BeProductoUbicacion.getIdPropietario());\r\n                        break;\r\n                    case 11://Valida la ubicación origen\r\n                        callMethod(\"Get_Ubicacion_By_Codigo_Barra_And_IdBodega\",\r\n                                \"pBarra\",txtUbicOrigen.getText().toString(),\r\n                                \"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 12://Valida la ubicación destino\r\n                        callMethod(\"Get_Ubicacion_By_Codigo_Barra_And_IdBodega\",\r\n                                \"pBarra\",txtUbicDestino.getText().toString(),\r\n                                \"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 13:\r\n                        callMethod(\"Actualizar_Trans_Ubic_HH_Det\",\"oBeTrans_ubic_hh_det\", gl.tareadet,\r\n                                \"pMovimiento\",gMovimientoDet);\r\n                        break;\r\n                    case 14:\r\n                        //#CKFK 20201229 Agregué campo Pallet_No_Estandar en la vista de stock_res\r\n                        callMethod(\"Aplica_Cambio_Estado_Ubic_HH\",\r\n                                \"pMovimiento\",gMovimientoDet,\r\n                                \"pStockRes\",vStockRes,\r\n                                \"pIdStockNuevo\",vIdStockNuevo,\r\n                                \"pIdMovimientoNuevo\",vIdMovimientoNuevo,\r\n                                \"pPosiciones\",vPosiciones);\r\n                        break;\r\n                    case 15:\r\n                        callMethod(\"ml_get_ubicacion_sugerida\",\"pIdProducto\",cvProdID,\r\n                                \"pIdBodega\",gl.IdBodega,\r\n                                \"pIdProductoBodega\",cvProd.IdProductoBodega,\r\n                                \"pLote\",cvLote,\r\n                                \"pFechaVence\",fechaVenceU,\r\n                                \"pIdProductoEstado\",cvEstOrigen,\r\n                                \"pIdUmBas\",cvUMBID,\r\n                                \"pIdPresentacion\",cvPresID);\r\n                        break;\r\n                    case 16://Obtiene descripción de la ubicación destino sugerida\r\n                        callMethod(\"Get_Ubicacion_By_Codigo_Barra_And_IdBodega\",\r\n                                \"pBarra\",txtUbicSug.getText().toString(),\r\n                                \"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 17://Obtiene el producto que coincide con el License Plate ingresado en una bodega\r\n                        callMethod(\"Get_Stock_By_Lic_Plate_And_Codigo\",\"pLicensePlate\",pLicensePlate,\"pCodigo\",txtCodigoPrd.getText().toString(),\r\n                                \"pIdBodega\", gl.IdBodega);\r\n                        break;\r\n                    case 18:\r\n                        callMethod(\"Existe_Lp_In_Stock\",\"pLic_Plate\",pLicensePlate);\r\n                        break;\r\n                    case 19:\r\n                        callMethod(\"Es_Pallet_No_Estandar\",\"pStock\",pStock);\r\n                        break;\r\n                    case 20:\r\n                        callMethod(\"Tiene_Posiciones\",\"pStock\",pStock);\r\n                        break;\r\n                    case 21:\r\n                        callMethod(\"Ubicacion_Es_Valida\",\"pIdProducto\",BeProductoUbicacion.IdProductoBodega,\r\n                                \"pIdUbicacion\",txtUbicDestino.getText().toString(),\"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n\r\n                }\r\n\r\n            } catch (Exception e) {\r\n                error=e.getMessage();errorflag =true;msgbox(error);\r\n                btnGuardarCiega.setVisibility(View.VISIBLE);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void processMotivosUbiHH(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo Motivos de ubicación en HH\");\r\n\r\n            pListBeMotivoUbicacion = xobj.getresult(clsBeMotivo_ubicacionList.class,\"Get_Motivos_Ubicacion_For_HH\");\r\n\r\n        } catch (Exception e) {\r\n            msgbox(new Object() {\r\n            }.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processUbicRecepcion(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo la ubicación por defecto de la recepción\");\r\n            progress.show();\r\n\r\n            cvUbicOrigID = (Integer) xobj.getSingle(\"Get_IdUbic_Ciega_Recepcion_By_IdBodegaResult\",int.class);\r\n\r\n            if (cvUbicOrigID > 0){\r\n                txtUbicOrigen.setText(String.valueOf(cvUbicOrigID));\r\n                validaOrigen();\r\n            }else{\r\n                txtUbicOrigen.setText(\"\");\r\n                progress.cancel();\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processProdEstado(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo el estado del producto\");\r\n            progress.show();\r\n\r\n            gProdEstado = xobj.getresult(clsBeProducto_estado.class,\"Get_Single_By_IdEstado\");\r\n\r\n            if (gProdEstado != null){\r\n                txtUbicDestino.setText(gProdEstado.Nombre);\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processUbicOrigen(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Validando ubicación\");\r\n            progress.show();\r\n\r\n            bodega_ubicacion_origen = xobj.getresult(clsBeBodega_ubicacion.class,\"Get_Ubicacion_By_Codigo_Barra_And_IdBodega\");\r\n\r\n            if (bodega_ubicacion_origen == null)\r\n            {\r\n                txtUbicOrigen.selectAll();\r\n                txtUbicOrigen.requestFocus();\r\n                throw new Exception(\"Ubicación no válida\");\r\n            }else{\r\n                cvUbicOrigID=bodega_ubicacion_origen.getIdUbicacion();\r\n                lblUbicCompleta.setText(bodega_ubicacion_origen.getDescripcion());\r\n            }\r\n\r\n            if (validarDatos){\r\n\r\n                datosCorrectos=true;\r\n\r\n                if (cvUbicOrigID == 0) {\r\n                    msgbox(\"Ubicación origen no válida\");\r\n                    txtUbicOrigen.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if (cvProdID == 0) {\r\n                    msgbox(\"Producto no válido\");\r\n                    txtCodigoPrd.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if (vCantidadDisponible == 0) {\r\n                    msgbox(\"Cantidad disponible es 0, no se puede realizar el movimiento\");\r\n                    txtCodigoPrd.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if (gl.modo_cambio==2) {\r\n                    if (cvEstDestino == 0){\r\n                        msgbox(\"Estado destino incorrecto\");\r\n                        cmbEstadoDestino.requestFocus();\r\n                        datosCorrectos = false;\r\n                    }\r\n                }\r\n\r\n                vCantidadAUbicar = Double.parseDouble(txtCantidad.getText().toString().replace(\",\",\"\"));\r\n                vCantidadDisponible = Double.parseDouble(lblCant.getText().toString().replace(\",\",\"\"));\r\n\r\n                if (vCantidadAUbicar<0) {\r\n                    mu.msgbox(\"La cantidad no puede ser negativa\");\r\n                    txtCantidad.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if (vCantidadAUbicar==0) {\r\n                    msgbox(\"La cantidad debe ser mayor que 0\");\r\n                    txtCantidad.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if (vCantidadAUbicar> vCantidadDisponible) {\r\n                    msgbox(\"Cantidad incorrecta\") ;\r\n                    txtCantidad.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if(cvUbicDestID == 0){\r\n                    msgbox(\"La ubicación de destino no puede ser vacía\");\r\n                    txtUbicDestino.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if ((cvUbicOrigID == cvUbicDestID) && (gl.modo_cambio ==1)){\r\n                    msgbox(\"La ubicación de destino coincide con la de origen\");\r\n                    txtUbicDestino.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if (!datosCorrectos) return;\r\n\r\n                progress.cancel();\r\n\r\n                msgAskAplicar((gl.modo_cambio ==1? \"Mover producto a ubicación: \" + bodega_ubicacion_destino.Descripcion: \"Aplicar cambio de estado?\"));\r\n\r\n            }else{\r\n                progress.cancel();\r\n                txtLicPlate.requestFocus();\r\n                txtLicPlate.selectAll();\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n    }\r\n\r\n    private void processUbicDestino(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Validando ubicación\");\r\n            progress.show();\r\n\r\n            bodega_ubicacion_destino = xobj.getresult(clsBeBodega_ubicacion.class,\"Get_Ubicacion_By_Codigo_Barra_And_IdBodega\");\r\n\r\n            if (bodega_ubicacion_destino == null){\r\n                vProcesar = false;\r\n                cvUbicDestID = 0;\r\n                txtUbicDestino.selectAll();\r\n                txtUbicDestino.requestFocus();\r\n                throw new Exception(\"Ubicación destino incorrecta\");\r\n            }else{\r\n                execws(21);\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processUbicacion_Valida(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Validando ubicación\");\r\n            progress.show();\r\n\r\n            Ubicacion_Es_Valida = xobj.getresult(Boolean.class,\"Ubicacion_Es_Valida\");\r\n\r\n            if (!Ubicacion_Es_Valida){\r\n                vProcesar = false;\r\n                cvUbicDestID = 0;\r\n                txtUbicDestino.selectAll();\r\n                txtUbicDestino.requestFocus();\r\n                throw new Exception(\"La ubicación destino, no permite este tipo de producto!\");\r\n            }else{\r\n                cvUbicDestID=bodega_ubicacion_destino.getIdUbicacion();\r\n                lblUbicCompDestino.setText(bodega_ubicacion_destino.getDescripcion());\r\n\r\n                if(gl.modo_cambio==2 && !vProcesar){\r\n                    progress.cancel();\r\n                    cmbEstadoDestino.requestFocus();\r\n                }else{\r\n                    datosOk();\r\n                }\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processUbicDestinoSug(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo descripción de la ubicación destino sugerida\");\r\n            progress.show();\r\n\r\n            bodega_ubicacion_destino = xobj.getresult(clsBeBodega_ubicacion.class,\"Get_Ubicacion_By_Codigo_Barra_And_IdBodega\");\r\n\r\n            if (bodega_ubicacion_destino == null){\r\n                throw new Exception(\"Ubicación destino sugerida incorrecta\");\r\n            }else{\r\n\r\n                cvUbicDestID=bodega_ubicacion_destino.getIdUbicacion();\r\n                lblUbicCompDestino.setText(bodega_ubicacion_destino.getDescripcion());\r\n\r\n                if (bodega_ubicacion_destino.getTramo().getEs_Rack()){\r\n\r\n                    //#CKFK 20210202: voice ubicación\r\n                    mTTS = new TextToSpeech(this, new TextToSpeech.OnInitListener() {\r\n                        @Override\r\n                        public void onInit(int status) {\r\n                            if(status == TextToSpeech.SUCCESS){\r\n                                Locale locSpanish = new Locale(\"spa\", \"MEX\");\r\n                                int result =mTTS.setLanguage(locSpanish);\r\n                                if(result == TextToSpeech.LANG_MISSING_DATA || result == TextToSpeech.LANG_NOT_SUPPORTED){\r\n                                    Log.e(\"tts\",\"Lenguaje no soportado :(\");\r\n                                }else{\r\n\r\n                                    String[] cadena_ubicacion = bodega_ubicacion_destino.getDescripcion().split(\"-\");\r\n                                    String rack = cadena_ubicacion[0].trim().substring(0);\r\n                                    String columna = cadena_ubicacion[1].trim().substring(1);\r\n                                    String tramo = cadena_ubicacion[2].trim().substring(1);\r\n                                    String nivel = cadena_ubicacion[3].trim().substring(1);\r\n                                    String pos = cadena_ubicacion[4].trim().substring(3);\r\n                                    String ubicacion = cadena_ubicacion[5].trim().substring(1);\r\n\r\n                                    text = \"Lleve producto a \" + rack + \". \"\r\n                                         + \" Tramo: \" + tramo + \".\"\r\n                                         + \" Columna: \" + columna + \".\"\r\n                                         + \" Nivel: \" + nivel + \".\"\r\n                                         + \" Posición: \" + pos + \".\"\r\n                                         + \" Y Escanee: \" + ubicacion;\r\n\r\n                                    float speed = 1f;\r\n                                    float pitch = 1f;\r\n                                    mTTS.setPitch(pitch);\r\n                                    mTTS.setSpeechRate(speed);\r\n\r\n                                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n                                        mTTS.speak(text,TextToSpeech.QUEUE_FLUSH,null,null);\r\n                                    } else {\r\n                                        mTTS.speak(text, TextToSpeech.QUEUE_FLUSH, null);\r\n                                    }\r\n                                }\r\n                            }else{\r\n                                Log.e(\"tts\",\"No he podido inicializar el TTS :(\");\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                }\r\n\r\n            }\r\n\r\n            txtCantidad.requestFocus();\r\n            progress.cancel();\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processProducto(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Cargando datos del producto\");\r\n            progress.show();\r\n\r\n            BeProductoUbicacion = xobj.getresult(clsBeProducto.class,\"Get_BeProducto_By_Codigo_For_HH\");\r\n\r\n            if (BeProductoUbicacion != null){\r\n                IdProductoUbicacion=BeProductoUbicacion.getIdProducto();\r\n\r\n                lblDescProducto.setTextColor(Color.BLUE);\r\n                cvProd = BeProductoUbicacion;\r\n                cvProdID = BeProductoUbicacion.IdProducto;\r\n                lblDescProducto.setText (BeProductoUbicacion.Nombre);\r\n                cvPropID = BeProductoUbicacion.IdPropietario;\r\n                cvUMBID = BeProductoUbicacion.IdUnidadMedidaBasica;\r\n\r\n                if (BeProductoUbicacion.getControl_peso()){\r\n                    trPeso.setVisibility(View.VISIBLE);\r\n                }else{\r\n                    trPeso.setVisibility(View.GONE);\r\n                }\r\n\r\n                //Llama al método del WS Get_Estados_By_IdPropietario\r\n                execws(10);\r\n\r\n            }else{\r\n                inicializaTareaSinUbic();\r\n                lblDescProducto.setTextColor(Color.RED);\r\n                cvProdID = 0;\r\n                lblDescProducto.setText (\"Código no válido\");\r\n                throw new Exception(\"Producto no existe\");\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processStockLP(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Validando ubicación\");\r\n            progress.show();\r\n\r\n            productoList = xobj.getresult(clsBeProductoList.class,\"Get_Stock_By_Lic_Plate\");\r\n\r\n            if (escaneoPallet && productoList == null) {\r\n                lblDescProducto.setTextColor(Color.RED);\r\n                cvProdID = 0;\r\n                lblDescProducto.setText (\"Código de LP no válido\");\r\n                progress.cancel();\r\n            }else{\r\n\r\n                if (escaneoPallet && productoList != null){\r\n\r\n                    List AuxList = stream(productoList.items)\r\n                            .where(c->c.Stock.IdUbicacion==cvUbicOrigID)\r\n                            .toList();\r\n\r\n                    if (AuxList.size() == 0){\r\n                        msgbox(\"El pallet no se encuentra en la ubicación: \" + cvUbicOrigID);\r\n                        lblDescProducto.setTextColor(Color.RED);\r\n                        cvProdID = 0;\r\n                        lblDescProducto.setText (\"LP N.E.E.U\");\r\n                        progress.cancel();\r\n                    }else{\r\n\r\n                        productoList = new clsBeProductoList();\r\n                        productoList.items = AuxList;\r\n\r\n                        if (AuxList.size() == 1){\r\n\r\n                            BeProductoUbicacion = productoList.items.get(0);\r\n                            BeStockPallet = productoList.items.get(0).Stock;\r\n\r\n                            txtCodigoPrd.setText(BeProductoUbicacion.getCodigo());\r\n\r\n                            lblDescProducto.setTextColor(Color.BLUE);\r\n                            lblDescProducto.setText(BeProductoUbicacion.getNombre());\r\n\r\n                            cvProd = BeProductoUbicacion;\r\n                            cvProdID = BeProductoUbicacion.getIdProducto();\r\n                            cvPropID = BeProductoUbicacion.getIdPropietario();\r\n                            cvUMBID = BeProductoUbicacion.getIdUnidadMedidaBasica();\r\n\r\n                            if (BeProductoUbicacion.getControl_peso()){\r\n                                trPeso.setVisibility(View.VISIBLE);\r\n                            }else{\r\n                                trPeso.setVisibility(View.GONE);\r\n                            }\r\n\r\n                            cvLote = BeStockPallet.Lote;\r\n                            cvPresID = BeStockPallet.IdPresentacion;\r\n                            cvEstOrigen = BeStockPallet.IdProductoEstado;\r\n                            cvVence = app.strFecha(BeStockPallet.Fecha_Vence);\r\n\r\n                            //Llama al método del WS Get_Estados_By_IdPropietario\r\n                            execws(10);\r\n\r\n                        }else{\r\n                            progress.cancel();\r\n                            msgbox(\"Escanee el producto que a ubicar\");\r\n                            txtCodigoPrd.requestFocus();\r\n                        }\r\n                    }\r\n                }else{\r\n                    //Llama a este método del WS Get_BeProducto_By_Codigo_For_HH\r\n                    execws(3);\r\n                }\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processProductoUbicLP(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Cargando stock de producto con License Plate\");\r\n            progress.show();\r\n\r\n            stockResList = xobj.getresult(clsBeVW_stock_resList.class,\"Get_Productos_By_IdUbicacion_And_LicPlate\");\r\n\r\n            if (stockResList != null){\r\n                LlenaPresentaciones();\r\n            }else{\r\n                msgbox(\"No hay existencias disponibles de este producto en esta ubicación o las existentes están reservadas\");\r\n                inicializaTarea(false);\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processProductoUbic(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Cargando producto en esta ubicación\");\r\n            progress.show();\r\n\r\n            stockResList = xobj.getresult(clsBeVW_stock_resList.class,\"Get_Productos_By_IdUbicacion\");\r\n\r\n            if (stockResList != null){\r\n                LlenaPresentaciones();\r\n            }else{\r\n                msgbox(\"El producto no existe en la ubicación origen\");\r\n                txtCodigoPrd.requestFocus();\r\n                txtCodigoPrd.selectAll();\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processNuevoCorrelativoLP(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo nuevo correlativo de License Plate\");\r\n            progress.show();\r\n\r\n            vNuevoPalletId = (String) xobj.getSingle(\"Get_Nuevo_Correlativo_LicensePlateResult\",String.class);\r\n\r\n            if (!vNuevoPalletId.isEmpty()){\r\n                //Set_Nuevo_Pallet_Id\r\n                execws(9);\r\n            }else{\r\n                msgbox(\"Ocurrió un error obteniendo el nuevo correlativo License Plate\");\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private void processIdNuevoPallet(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Colocando nuevo pallet\");\r\n            progress.show();\r\n\r\n            boolean result = (Boolean) xobj.getSingle(\"Set_Nuevo_Pallet_IdResult\",boolean.class);\r\n\r\n            progress.cancel();\r\n\r\n            if (result){\r\n                msgAskImpresoraLista(\"¿La impresora está lista y conectada?\");\r\n            }else{\r\n                progress.cancel();\r\n                msgbox(\"Ocurrió un error creando el Id del nuevo pallet\");\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processEstadosProp(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Validando ubicación\");\r\n            progress.show();\r\n\r\n            productoEstadoDestinoList = xobj.getresult(clsBeProducto_estadoList.class,\"Get_Estados_By_IdPropietario\");\r\n\r\n            if (productoEstadoDestinoList != null){\r\n                LlenaEstadoDestino(cvPropID);\r\n            }else{\r\n\r\n                if (escaneoPallet && productoList != null) {\r\n                    //LLama este procedimiento del WS Get_Productos_By_IdUbicacion_And_LicPlate\r\n                    execws(6);\r\n                }else{\r\n                    //LLama este procedimiento del WS Get_Productos_By_IdUbicacion\r\n                    execws(7);\r\n                }\r\n\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processCambio(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Procesando cambio de ubicación\");\r\n            progress.show();\r\n\r\n            boolean actualizar = (Boolean) xobj.getSingle(\"Actualizar_Trans_Ubic_HH_DetResult\",boolean.class);\r\n\r\n            if (actualizar){\r\n                msgAskExit(String.format(\"Cambio de %s aplicado\",(gl.modo_cambio==1?\"ubicación\":\"estado\")));\r\n            }else{\r\n                msgbox(\"Ocurrió un error al procesar el cambio de ubicación\");\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n        progress.cancel();\r\n\r\n    }\r\n\r\n    private void processCambioUbicEstHH(){\r\n        try{\r\n\r\n            boolean resultado = false;\r\n\r\n            progress.setMessage(\"Procesando cambio\");\r\n            progress.show();\r\n\r\n            resultado = (Boolean) xobj.getSingle(\"Aplica_Cambio_Estado_Ubic_HHResult\",boolean.class);\r\n            vIdStockNuevo = (Integer) xobj.getSingle(\"pIdStockNuevo\",int.class);\r\n            vIdMovimientoNuevo= (Integer) xobj.getSingle(\"pIdMovimientoNuevo\",int.class);\r\n\r\n            if( resultado){\r\n\r\n                txtCodigoPrd.setText(gl.gCProdAnterior);\r\n                txtUbicOrigen.setText(gl.gCUbicAnterior);\r\n\r\n                if (cmbEstadoOrigen.getAdapter()!=null  && cmbEstadoOrigen.getAdapter().getCount()>0){\r\n                    gl.gCEstadoAnterior = Integer.valueOf( cmbEstadoOrigen.getSelectedItem().toString().split(\" - \")[0]);\r\n                    gl.gCNomEstadoAnterior = cmbEstadoOrigen.getSelectedItem().toString().split(\" - \")[1];\r\n                }else{\r\n                    gl.gCEstadoAnterior = -1;\r\n                    gl.gCNomEstadoAnterior = \"\";\r\n                }\r\n\r\n                if (cmbVence.getAdapter()!=null && cmbVence.getAdapter().getCount()>0){\r\n                    gl.gCFechaAnterior = cmbVence.getSelectedItem().toString();\r\n                }else{\r\n                    gl.gCFechaAnterior=\"01/01/1900\";\r\n                }\r\n\r\n                if (cmbLote.getAdapter()!=null  && cmbLote.getAdapter().getCount()>0){\r\n                    gl.gCLoteAnterior = cmbLote.getSelectedItem().toString();\r\n                }else{\r\n                    gl.gCLoteAnterior = \"\";\r\n                }\r\n\r\n                if (cmbPresentacion.getAdapter()!=null && cmbPresentacion.getAdapter().getCount()>0){\r\n                    gl.gCPresAnterior = Integer.valueOf( cmbPresentacion.getSelectedItem().toString().split(\" - \")[0].toString());\r\n                    if (cmbPresentacion.getSelectedItem().toString().split(\" - \").length>1){\r\n                        gl.gCNomPresAnterior = cmbPresentacion.getSelectedItem().toString().split(\" - \")[1];\r\n                    }\r\n                }else{\r\n                    gl.gCPresAnterior = -1;\r\n                    gl.gCNomPresAnterior = \"\";\r\n                }\r\n\r\n                progress.cancel();\r\n                msgAsk(gl.modo_cambio ==1 ? \"Cambio de ubicación aplicado\": \"Cambio de estado aplicado\");\r\n\r\n            }\r\n\r\n        }catch (Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processUbicacionDestSugerida(){\r\n        try{\r\n\r\n            progress.setMessage(\"Procesando ubicación destino sugerida\");\r\n            progress.show();\r\n\r\n            lUbicSug = xobj.getresult(USUbicStrucStage5List.class,\"ml_get_ubicacion_sugerida\");\r\n\r\n            if (lUbicSug != null){\r\n                if(lUbicSug.items.size()>0){\r\n\r\n                    txtUbicSug.setText(String.valueOf(lUbicSug.items.get(0).lUbicacionesVacias.items.get(0).IdUbicacion));\r\n                    txtUbicDestino.setHint(\"Escanee \" + String.valueOf(lUbicSug.items.get(0).lUbicacionesVacias.items.get(0).IdUbicacion));\r\n                    validaDestinoSug();\r\n\r\n                }\r\n\r\n            }else{\r\n                cvUbicDestID = 0;\r\n                toast(\"No existen ubicaciones sugeridas\");\r\n                progress.cancel();\r\n            }\r\n\r\n        }catch (Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processStockLP_AndCodigo(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Validando ubicación\");\r\n            progress.show();\r\n\r\n            productoList = xobj.getresult(clsBeProductoList.class,\"Get_Stock_By_Lic_Plate_And_Codigo\");\r\n\r\n            if (escaneoPallet && productoList == null) {\r\n                lblDescProducto.setTextColor(Color.RED);\r\n                cvProdID = 0;\r\n                lblDescProducto.setText (\"Código de LP no válido\");\r\n                progress.cancel();\r\n            }else{\r\n\r\n                if (escaneoPallet && productoList != null){\r\n\r\n                    List AuxList = stream(productoList.items)\r\n                            .where(c->c.Stock.IdUbicacion==cvUbicOrigID)\r\n                            .toList();\r\n\r\n                    if (AuxList.size() == 0){\r\n                        msgbox(\"El pallet no se encuentra en la ubicación: \" + cvUbicOrigID);\r\n                        lblDescProducto.setTextColor(Color.RED);\r\n                        cvProdID = 0;\r\n                        lblDescProducto.setText (\"LP N.E.E.U\");\r\n                        progress.cancel();\r\n                    }else{\r\n\r\n                        productoList = new clsBeProductoList();\r\n                        productoList.items = AuxList;\r\n\r\n                        BeProductoUbicacion = productoList.items.get(0);\r\n                        BeStockPallet = productoList.items.get(0).Stock;\r\n\r\n                        lblDescProducto.setTextColor(Color.BLUE);\r\n                        lblDescProducto.setText(BeProductoUbicacion.getNombre());\r\n\r\n                        cvProd = BeProductoUbicacion;\r\n                        cvProdID = BeProductoUbicacion.getIdProducto();\r\n                        cvPropID = BeProductoUbicacion.getIdPropietario();\r\n                        cvUMBID = BeProductoUbicacion.getIdUnidadMedidaBasica();\r\n\r\n                        cvLote = BeStockPallet.Lote;\r\n                        cvPresID = BeStockPallet.IdPresentacion;\r\n                        cvEstOrigen = BeStockPallet.IdProductoEstado;\r\n                        cvVence = app.strFecha(BeStockPallet.Fecha_Vence);\r\n\r\n                        //Llama al método del WS Get_Estados_By_IdPropietario\r\n                        execws(10);\r\n                    }\r\n                }else{\r\n                    //Llama a este método del WS Get_BeProducto_By_Codigo_For_HH\r\n                    execws(3);\r\n                }\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processExisteLp(){\r\n\r\n        try{\r\n\r\n            Existe_Lp = xobj.getresult(Boolean.class,\"Existe_Lp_In_Stock\");\r\n\r\n            if (Existe_Lp){\r\n                progress.cancel();\r\n                txtCodigoPrd.requestFocus();\r\n\r\n                //Get_Stock_By_Lic_Plate\r\n                execws(5);\r\n            }else{\r\n                progress.cancel();\r\n                mu.msgbox(\"Lp no existe\");\r\n                txtLicPlate.selectAll();\r\n                txtLicPlate.requestFocus();\r\n            }\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processExisteLp:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processPalletNoEstandar(){\r\n\r\n        try{\r\n\r\n            EsPalletNoEstandar = xobj.getresult(Boolean.class,\"Es_Pallet_No_Estandar\");\r\n\r\n            if (EsPalletNoEstandar){\r\n                execws(20);\r\n            }else{\r\n                validaDestino();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processPalletNoEstandar:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processTienePosiciones(){\r\n\r\n        try{\r\n\r\n            TienePosiciones = xobj.getresult(Boolean.class,\"Tiene_Posiciones\");\r\n\r\n            if (!TienePosiciones){\r\n                msgAskIngresePosiciones();\r\n            }else{\r\n                validaDestino();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processPalletNoEstandar:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgAskIngresePosiciones() {\r\n\r\n        try{\r\n\r\n            final AlertDialog.Builder alert = new AlertDialog.Builder(this);\r\n\r\n            alert.setTitle(\"Ingrese número de posiciones\");\r\n\r\n            vPosiciones = 0;\r\n\r\n            final LinearLayout layout   = new LinearLayout(this);\r\n            layout.setOrientation(LinearLayout.VERTICAL);\r\n\r\n            if(txtPosiciones.getParent()!= null){\r\n                ((ViewGroup) txtPosiciones.getParent()).removeView(txtPosiciones);\r\n            }\r\n\r\n            txtPosiciones.setText(\"\");\r\n            txtPosiciones.requestFocus();\r\n\r\n            layout.addView(txtPosiciones);\r\n\r\n            alert.setView(layout);\r\n\r\n            showkeyb();\r\n            alert.setCancelable(false);\r\n            alert.create();\r\n\r\n            alert.setPositiveButton(\"Aceptar\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int whichButton) {\r\n                    layout.removeAllViews();\r\n\r\n                    vPosiciones=Integer.valueOf(txtPosiciones.getText().toString());\r\n\r\n                    if (vPosiciones==0){\r\n                        layout.removeAllViews();\r\n                        msgAskIngresePosiciones();\r\n                    }else{\r\n                        validaDestino();\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            alert.setNegativeButton(\"Cancelar\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int whichButton) {\r\n                    layout.removeAllViews();\r\n                }\r\n            });\r\n\r\n            alert.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void inicializaTarea(boolean finalizar){\r\n        try{\r\n\r\n            progress.setMessage(\"Inicializando tarea\");\r\n            progress.show();\r\n\r\n            cvUbicOrigID = 0;\r\n            txtCodigoPrd.setText(\"\");\r\n            txtLicPlate.setText(\"\");\r\n            lblDescProducto.setText(\"\");\r\n            cmbPresentacion.setAdapter(null);\r\n            cmbLote.setAdapter(null);\r\n            cmbVence.setAdapter(null);\r\n            cmbEstadoOrigen.setAdapter(null);\r\n            cmbEstadoDestino.setAdapter(null);\r\n            txtUbicSug.setText(\"\");\r\n            txtUbicDestino.setHint(\"\");\r\n\r\n            cvProdID = 0;\r\n            cvPresID = 0;\r\n            cvLote  = \"\";\r\n            cvVence = \"\";\r\n            cvUbicDestID = 0;\r\n            cvUbicOrigID = 0;\r\n            cvEstDestino = 0;\r\n            cvEstOrigen = 0;\r\n            vCantidadAUbicar = 0;\r\n            vCantidadDisponible = 0;\r\n\r\n            lblUbicCompleta.setText(\"\");\r\n\r\n            lblCant.setText(\"\");\r\n            txtUbicDestino.setText(\"\");\r\n            lblUbicCompDestino.setText(\"\");\r\n            txtCantidad.setText(\"\");\r\n            txtPeso.setText(\"\");\r\n            txtCodigoPrd.setText(\"\");\r\n\r\n            cmbPresentacion.setEnabled(false);\r\n            cmbLote.setEnabled(true);\r\n            cmbVence.setEnabled(true);\r\n            cmbEstadoDestino.setEnabled(true);\r\n\r\n            txtUbicDestino.setEnabled(true);\r\n            txtCantidad.setEnabled(true);\r\n            txtPeso.setEnabled(true);\r\n            txtCodigoPrd.setEnabled(true);\r\n            txtLicPlate.setEnabled(true);\r\n\r\n            validarDatos = false;\r\n            vProcesar = false;\r\n\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n\r\n            if(gl.modo_cambio==1 && finalizar){\r\n                execws(1);\r\n            }else{\r\n                txtUbicOrigen.requestFocus();\r\n                progress.cancel();\r\n            }\r\n\r\n        }catch (Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void inicializaTareaSinUbic(){\r\n        try{\r\n            progress.setMessage(\"Inicializando tarea\");\r\n            progress.show();\r\n\r\n            txtCodigoPrd.setText(\"\");\r\n            txtLicPlate.setText(\"\");\r\n            lblDescProducto.setText(\"\");\r\n            cmbPresentacion.setAdapter(null);\r\n            cmbLote.setAdapter(null);\r\n            cmbVence.setAdapter(null);\r\n            cmbEstadoOrigen.setAdapter(null);\r\n            cmbEstadoDestino.setAdapter(null);\r\n            txtUbicSug.setText(\"\");\r\n            txtUbicDestino.setHint(\"\");\r\n\r\n            cvProdID = 0;\r\n            cvPresID = 0;\r\n            cvLote  = \"\";\r\n            cvVence = \"\";\r\n            cvUbicDestID = 0;\r\n            cvUbicOrigID = 0;\r\n            cvEstDestino = 0;\r\n            cvEstOrigen = 0;\r\n            vCantidadAUbicar = 0;\r\n            vCantidadDisponible = 0;\r\n\r\n            lblCant.setText(\"\");\r\n            txtUbicDestino.setText(\"\");\r\n            txtCantidad.setText(\"\");\r\n            txtPeso.setText(\"\");\r\n            txtCodigoPrd.setText(\"\");\r\n\r\n            cmbPresentacion.setEnabled(false);\r\n            cmbLote.setEnabled(true);\r\n            cmbVence.setEnabled(true);\r\n            cmbEstadoDestino.setEnabled(true);\r\n\r\n            txtUbicDestino.setEnabled(true);\r\n            txtCantidad.setEnabled(true);\r\n            txtPeso.setEnabled(true);\r\n            txtCodigoPrd.setEnabled(true);\r\n            txtLicPlate.setEnabled(true);\r\n\r\n            validarDatos = false;\r\n            vProcesar = false;\r\n\r\n            txtUbicOrigen.requestFocus();\r\n\r\n            progress.cancel();\r\n\r\n        }catch (Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void inicializaTareaLP(){\r\n        try{\r\n            progress.setMessage(\"Inicializando tarea\");\r\n            progress.show();\r\n\r\n            txtCodigoPrd.setText(\"\");\r\n            lblDescProducto.setText(\"\");\r\n            cmbPresentacion.setAdapter(null);\r\n            cmbLote.setAdapter(null);\r\n            cmbVence.setAdapter(null);\r\n            cmbEstadoOrigen.setAdapter(null);\r\n            cmbEstadoDestino.setAdapter(null);\r\n            txtUbicSug.setText(\"\");\r\n            txtUbicDestino.setHint(\"\");\r\n\r\n            cvProdID = 0;\r\n            cvPresID = 0;\r\n            cvLote  = \"\";\r\n            cvVence = \"\";\r\n            cvUbicDestID = 0;\r\n            cvEstDestino = 0;\r\n            vCantidadAUbicar = 0;\r\n            vCantidadDisponible = 0;\r\n\r\n            lblCant.setText(\"\");\r\n            txtUbicDestino.setText(\"\");\r\n            txtCantidad.setText(\"\");\r\n            txtPeso.setText(\"\");\r\n            txtCodigoPrd.setText(\"\");\r\n\r\n            cmbPresentacion.setEnabled(false);\r\n            cmbLote.setEnabled(true);\r\n            cmbVence.setEnabled(true);\r\n            cmbEstadoDestino.setEnabled(true);\r\n\r\n            txtUbicDestino.setEnabled(true);\r\n            txtCantidad.setEnabled(true);\r\n            txtPeso.setEnabled(true);\r\n            txtCodigoPrd.setEnabled(true);\r\n            txtLicPlate.setEnabled(true);\r\n\r\n            validarDatos = false;\r\n            vProcesar = false;\r\n\r\n            txtUbicOrigen.requestFocus();\r\n\r\n            progress.cancel();\r\n\r\n        }catch (Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgAskExit(String msg) {\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.cambioubic);\r\n\r\n            dialog.setNeutralButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    frm_cambio_ubicacion_ciega.super.finish();\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void msgAskExplosionar(String msg){\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.cambioubic);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    Es_Explosion = true;\r\n                    inicializaTarea(true);\r\n                    msgAskImprimirEtiqueta(\"Imprimir etiqueta\");\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which)\r\n                {\r\n                    Es_Explosion = false;\r\n                    inicializaTarea(true);\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n    }\r\n\r\n    private void msgAskImprimirEtiqueta(String msg){\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.cambioubic);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    //Get_Nuevo_Correlativo_LicensePlate\r\n                     execws(8);\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which){}\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n    }\r\n\r\n    private void msgAskImpresoraLista(String msg){\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.cambioubic);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    //Imprime la etiqueta\r\n                    /*\r\n                  ZPLString As String = String.Format( _\r\n                                                    \"^XA \" & _\r\n                                                    \"^MMT \" & _\r\n                                                    \"^PW700 \" & _\r\n                                                    \"^LL0406 \" & _\r\n                                                    \"^LS0 \" & _\r\n                                                    \"^FT171,61^A0I,25,14^FH\\^FD{0}^FS \" & _\r\n                                                    \"^FT550,61^A0I,25,14^FH\\^FD{1}^FS \" & _\r\n                                                    \"^FT670,306^A0I,25,14^FH\\^FD{2}^FS \" & _\r\n                                                    \"^FT292,61^A0I,25,24^FH\\^FDBodega:^FS \" & _\r\n                                                    \"^FT670,61^A0I,25,24^FH\\^FDEmpresa:^FS \" & _\r\n                                                    \"^FT670,367^A0I,25,24^FH\\^FDTOMIMS, WMS.  Product Barcode^FS \" & _\r\n                                                    \"^FO2,340^GB670,0,14^FS \" & _\r\n                                                    \"^BY3,3,160^FT670,131^BCI,,Y,N \" & _\r\n                                                    \"^FD{3}^FS \" & _\r\n                                                    \"^PQ1,0,1,Y \" & _\r\n                                                    \"^XZ\", gCodigoBodega, _\r\n                                                    gNomEmpresa, _\r\n                                                    BeStockPallet.Codigo_Producto + \" - \" + BeStockPallet.Nombre_Producto, _\r\n                                                            ((vNuevoPalletId <> \"\", \"$\" + vNuevoPalletId, BeStockPallet.Codigo_Producto))\r\n\r\n                                            frmPrintBarraPallet As New frmPrint\r\n                                            frmPrintBarraPallet.ZplToPrint = ZPLString\r\n                                            frmPrintBarraPallet.ShowDialog()\r\n         */\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which){}\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void validaOrigen(){\r\n\r\n        try{\r\n\r\n            if (!txtUbicOrigen.getText().toString().isEmpty()){\r\n\r\n                bodega_ubicacion_origen = new clsBeBodega_ubicacion();\r\n\r\n                //Llama al método del WS Get_Ubicacion_By_Codigo_Barra_And_IdBodega para validar ubicacion origen\r\n                execws(11);\r\n\r\n            }else{\r\n                lblUbicCompleta.setText(\"\");\r\n            }\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            mu.msgbox( e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void validaDestino(){\r\n\r\n        try{\r\n            \r\n            progress.setMessage(\"Procesando ubicación destino...\");\r\n            progress.show();\r\n            \r\n            if (!txtUbicDestino.getText().toString().isEmpty()){\r\n\r\n                bodega_ubicacion_destino = new clsBeBodega_ubicacion();\r\n\r\n                //Llama al método del WS Get_Ubicacion_By_Codigo_Barra_And_IdBodega para validar ubicacion destino\r\n                execws(12);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            mu.msgbox( e.getMessage());\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n    }\r\n\r\n    private void validaDestinoSug(){\r\n\r\n        try{\r\n\r\n            if (!txtUbicSug.getText().toString().isEmpty()){\r\n\r\n                bodega_ubicacion_destino = new clsBeBodega_ubicacion();\r\n\r\n                //Llama al método del WS Get_Ubicacion_By_Codigo_Barra_And_IdBodega para validar ubicacion destino sugerida\r\n                execws(16);\r\n            }else{\r\n                progress.cancel();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            mu.msgbox( e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void datosOk(){\r\n\r\n        try{\r\n\r\n            boolean continua=true;\r\n            validarDatos = true;\r\n\r\n            execws(11);\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            mu.msgbox( e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgAsk(String msg) {\r\n\r\n        try{\r\n\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(msg);\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setNeutralButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n\r\n                    if( escaneoPallet && productoList != null){\r\n                        if( BeStockPallet.CantidadPresentacion != vCantidadAUbicar){\r\n                            msgAskExplosionar(\"La ubicación parcial de pallet requiere explosionar el material, ¿generar nuevo palletId y continuar?\");\r\n                        }else{\r\n                            inicializaTarea(true);\r\n                        }\r\n                    }else{\r\n                        inicializaTarea(true);\r\n                    }\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void msgAskAplicar(String msg) {\r\n\r\n        try{\r\n\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(\"¿\" + msg + \"?\");\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which)\r\n                {btnGuardarCiega.setVisibility(View.VISIBLE); }\r\n            });\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    //Llamar método para aplicar el cambio de estado\r\n                    aplicarCambio();\r\n\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n    }\r\n\r\n    private void aplicarCambio() {\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Aplicando el cambio\");\r\n            progress.show();\r\n\r\n            if (!Crear_Movimiento_Ubicacion_ND(gl.modo_cambio == 1? false: true)){\r\n                return;\r\n            }\r\n\r\n            vStockRes.IdProductoBodega = cvProd.IdProductoBodega;\r\n            vStockRes.IdUbicacion = cvUbicOrigID;\r\n\r\n            if( BeProductoUbicacion.Control_lote){\r\n                vStockRes.Lote = cmbLote.getSelectedItem().toString();\r\n            }else{\r\n                vStockRes.Lote = \"\";\r\n            }\r\n\r\n            if( BeProductoUbicacion.Control_vencimiento){\r\n                vStockRes.Fecha_Vence = app.strFechaXMLCombo(cmbVence.getSelectedItem().toString());\r\n            }else{\r\n                vStockRes.Fecha_Vence = \"01/01/1900\";\r\n            }\r\n\r\n            vStockRes.CantidadUmBas = vCantidadAUbicar;\r\n            vStockRes.Peso = cvStockItem.Peso;\r\n            vStockRes.IdPresentacion =cvPresID;\r\n            vStockRes.IdProductoEstado = cvEstOrigen;\r\n            vStockRes.Fecha_ingreso = app.strFechaXML(du.getFechaActual());\r\n            vStockRes.ValorFecha = app.strFechaXML(du.getFechaActual());\r\n            vStockRes.Pallet_No_Estandar=EsPalletNoEstandar;\r\n\r\n            if( escaneoPallet && productoList != null){\r\n\r\n                vStockRes.Lic_plate = BeStockPallet.Lic_plate;\r\n\r\n                if( BeStockPallet.Factor > 0){\r\n                    vStockRes.CantidadUmBas = vCantidadAUbicar * BeStockPallet.Factor;\r\n                }\r\n\r\n            }else if ( cvPresID != 0){\r\n                vStockRes.CantidadUmBas = vCantidadAUbicar * vFactorPres;\r\n            }\r\n\r\n            //Aplica_Cambio_Estado_Ubic_HH(gMovimientoDet, vStockRes, vIdStockNuevo, vIdMovimientoNuevo);\r\n            execws(14);\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            mu.msgbox( e.getMessage());\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n        }\r\n    }\r\n\r\n    public void AplicarCambio(View view){\r\n\r\n        try{\r\n\r\n            //#CKFK 20210202 Agregué estas validaciones para evitar que se guarden datos incorrectos\r\n            //******************\r\n\r\n            datosCorrectos=true;\r\n\r\n            if (cvUbicOrigID == 0) {\r\n                msgbox(\"Ubicación origen no válida\");\r\n                txtUbicOrigen.requestFocus();\r\n                datosCorrectos = false;\r\n            }\r\n\r\n            if (cvProdID == 0) {\r\n                msgbox(\"Producto no válido\");\r\n                txtCodigoPrd.requestFocus();\r\n                datosCorrectos = false;\r\n            }\r\n\r\n            if (vCantidadDisponible == 0) {\r\n                msgbox(\"Cantidad disponible es 0, no se puede realizar el movimiento\");\r\n                txtCodigoPrd.requestFocus();\r\n                datosCorrectos = false;\r\n            }\r\n\r\n            if (gl.modo_cambio==2) {\r\n                if (cvEstDestino == 0){\r\n                    msgbox(\"Estado destino incorrecto\");\r\n                    cmbEstadoDestino.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n            }\r\n\r\n            vCantidadAUbicar = Double.parseDouble(txtCantidad.getText().toString().replace(\",\",\"\"));\r\n            vCantidadDisponible = Double.parseDouble(lblCant.getText().toString().replace(\",\",\"\"));\r\n\r\n            if (vCantidadAUbicar<0) {\r\n                mu.msgbox(\"La cantidad no puede ser negativa\");\r\n                txtCantidad.requestFocus();\r\n                datosCorrectos = false;\r\n            }\r\n\r\n            if (vCantidadAUbicar==0) {\r\n                msgbox(\"La cantidad debe ser mayor que 0\");\r\n                txtCantidad.requestFocus();\r\n                datosCorrectos = false;\r\n            }\r\n\r\n            if (vCantidadAUbicar> vCantidadDisponible) {\r\n                msgbox(\"Cantidad incorrecta\") ;\r\n                txtCantidad.requestFocus();\r\n                datosCorrectos = false;\r\n            }\r\n\r\n            Recalcula_Peso();\r\n\r\n            if(cvUbicDestID == 0 && txtUbicDestino.getText().toString().isEmpty()){\r\n                msgbox(\"La ubicación de destino no puede ser vacía\");\r\n                txtUbicDestino.requestFocus();\r\n                datosCorrectos = false;\r\n            }\r\n\r\n            if ((cvUbicOrigID == cvUbicDestID) && (gl.modo_cambio ==1)){\r\n                msgbox(\"La ubicación de destino coincide con la de origen\");\r\n                txtUbicDestino.requestFocus();\r\n                datosCorrectos = false;\r\n            }\r\n\r\n            if (!datosCorrectos) return;\r\n\r\n            //********************\r\n\r\n            progress.setMessage(\"Aplicando cambio de ubicacion\");\r\n            progress.show();\r\n\r\n            btnGuardarCiega.setVisibility(View.INVISIBLE);\r\n\r\n            vProcesar = true;\r\n\r\n            pStock = new clsBeStock();\r\n            pStock.IdUbicacion = cvUbicOrigID;\r\n            pStock.IdProductoBodega = BeProductoUbicacion.getIdProductoBodega();\r\n            pStock.IdProductoEstado = cvEstOrigen;\r\n            pStock.IdPresentacion = cvPresID;\r\n            pStock.IdUnidadMedida = BeProductoUbicacion.IdUnidadMedidaBasica;\r\n            pStock.Fecha_vence = du.convierteFechaDiagonal(cvVence);\r\n            pStock.Lote = cvLote;\r\n\r\n            //Es_Pallet_No_Estandar\r\n            execws(19);\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            mu.msgbox( e.getMessage());\r\n        }finally {\r\n            progress.cancel();\r\n        }\r\n    }\r\n\r\n    private boolean Crear_Movimiento_Ubicacion_ND(boolean EsCambioEstado) {\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Creando el movimiento\");\r\n\r\n            // The preferred idiom for iterating over collections and arrays\r\n            for (clsBeVW_stock_res st : stockResList.items) {\r\n\r\n                if(escaneoPallet &&  productoList != null ) {\r\n                    if (st.IdStock == cvStockID && st.Lic_plate.equals(BeStockPallet.Lic_plate)) {\r\n                        cvStockItem = st;\r\n                        break;}\r\n                }else{\r\n                    if(BeProductoUbicacion.Control_lote && BeProductoUbicacion.Control_vencimiento ) {\r\n                        if (st.IdStock == cvStockID && st.Lote.equals(cvLote) && app.strFecha(st.Fecha_Vence).equals(cvVence) &&\r\n                                st.IdPresentacion == cvPresID && st.IdProductoEstado == cvEstOrigen && st.IdUnidadMedida == cvUMBID) {\r\n                            cvStockItem = st;\r\n                            break;\r\n                        }\r\n                    }else if( !BeProductoUbicacion.Control_lote && BeProductoUbicacion.Control_vencimiento ) {\r\n                        if (st.IdStock == cvStockID && app.strFecha(st.Fecha_Vence).equals(cvVence) &&\r\n                                st.IdPresentacion == cvPresID && st.IdProductoEstado == cvEstOrigen) {\r\n                            cvStockItem = st;\r\n                            break;\r\n                        }\r\n                    }else if(BeProductoUbicacion.Control_lote &&  !BeProductoUbicacion.Control_vencimiento ) {\r\n                        if (st.IdStock == cvStockID && st.Lote.equals(cvLote) && st.IdPresentacion == cvPresID &&\r\n                                st.IdProductoEstado == cvEstOrigen && st.IdUnidadMedida == cvUMBID) {\r\n                            cvStockItem = st;\r\n                            break;\r\n                        }\r\n                    }else if(st.IdStock == cvStockID && st.IdPresentacion == cvPresID &&\r\n                            st.IdProductoEstado == cvEstOrigen && st.IdUnidadMedida == cvUMBID ){\r\n                        cvStockItem = st;\r\n                        break;}\r\n                }\r\n            }\r\n\r\n        }catch(Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            mu.msgbox( ex.getMessage());\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n            return false;\r\n        }\r\n\r\n        try{\r\n\r\n            gMovimientoDet = new clsBeTrans_movimientos();\r\n\r\n            gMovimientoDet.IdMovimiento = 0;\r\n            gMovimientoDet.IdEmpresa = gl.IdEmpresa;\r\n            gMovimientoDet.IdBodegaOrigen = gl.IdBodega;\r\n            gMovimientoDet.IdTransaccion = 1;\r\n            gMovimientoDet.IdPropietarioBodega = cvPropID;\r\n            gMovimientoDet.IdProductoBodega = cvProd.IdProductoBodega;\r\n            gMovimientoDet.IdUbicacionOrigen = cvUbicOrigID;\r\n            gMovimientoDet.IdUbicacionDestino = cvUbicDestID;\r\n\r\n            if(cmbPresentacion.getAdapter()!=null  && cmbPresentacion.getAdapter().getCount()>0){\r\n                gMovimientoDet.IdPresentacion = (Integer.valueOf( cmbPresentacion.getSelectedItem().toString().split(\" - \")[0].toString()) == -1? 0: Integer.valueOf( cmbPresentacion.getSelectedItem().toString().split(\" - \")[0].toString()));\r\n            }else{\r\n                gMovimientoDet.IdPresentacion = 0;\r\n            }\r\n            if(cmbEstadoOrigen.getAdapter()!=null && cmbEstadoOrigen.getAdapter().getCount()>0){\r\n                gMovimientoDet.IdEstadoOrigen = Integer.valueOf( cmbEstadoOrigen.getSelectedItem().toString().split(\" - \")[0].toString());\r\n            }else{\r\n                gMovimientoDet.IdEstadoOrigen = 0;\r\n            }\r\n\r\n            gMovimientoDet.IdEstadoDestino = cvEstDestino;\r\n\r\n            if(gl.modo_cambio == 1 ){\r\n                gMovimientoDet.IdEstadoDestino = gMovimientoDet.IdEstadoOrigen;}\r\n\r\n            gMovimientoDet.IdUnidadMedida = cvStockItem.IdUnidadMedida;\r\n\r\n            if(EsCambioEstado ) {\r\n                gMovimientoDet.IdTipoTarea = 3;\r\n            }else{\r\n                gMovimientoDet.IdTipoTarea = 2;\r\n            }\r\n\r\n            gMovimientoDet.IdBodegaDestino = gl.IdBodega;\r\n            gMovimientoDet.IdRecepcion = cvStockItem.IdRecepcionEnc;\r\n            gMovimientoDet.Cantidad = vCantidadAUbicar;\r\n            gMovimientoDet.Serie = cvStockItem.Serial;\r\n            gMovimientoDet.Peso = 0;\r\n\r\n            if(cmbLote.getAdapter()!=null  && cmbLote.getAdapter().getCount()>0){\r\n                gMovimientoDet.Lote = cmbLote.getSelectedItem().toString();\r\n            }else{\r\n                gMovimientoDet.Lote = \"\";\r\n            }\r\n\r\n            clsBeProducto bprod = new clsBeProducto();\r\n\r\n            bprod = BeProductoUbicacion;\r\n\r\n            if(bprod.Control_vencimiento ){\r\n                if(cmbVence.getAdapter()!=null && cmbVence.getAdapter().getCount()>0){\r\n                    gMovimientoDet.Fecha_vence = app.strFechaXMLCombo(cmbVence.getSelectedItem().toString());\r\n                }else{\r\n                    gMovimientoDet.Fecha_vence = app.strFechaXMLCombo(\"01/01/1900\");\r\n                }\r\n\r\n            }\r\n\r\n            gMovimientoDet.Fecha = app.strFechaXML(du.getFechaActual());\r\n\r\n            if(escaneoPallet &&  productoList != null ) {\r\n                gMovimientoDet.Barra_pallet = BeStockPallet.Lic_plate;\r\n            }else{\r\n                gMovimientoDet.Barra_pallet = \"\";\r\n            }\r\n\r\n            gMovimientoDet.Hora_ini =  app.strFechaXML(du.getFechaActual());\r\n            gMovimientoDet.Hora_fin =  app.strFechaXML(du.getFechaActual());\r\n            gMovimientoDet.Fecha_agr =  app.strFechaXML(du.getFechaActual());\r\n            gMovimientoDet.Usuario_agr = String.valueOf(gl.IdOperador);\r\n            gMovimientoDet.Cantidad_hist = gMovimientoDet.Cantidad;\r\n            gMovimientoDet.Peso_hist = gMovimientoDet.Peso;\r\n            gMovimientoDet.setIsNew(true);\r\n\r\n            return true;\r\n\r\n        }catch(Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            mu.msgbox( ex.getMessage());\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    public void Regresar(View view){\r\n        finish();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/dts/tom/Transacciones/CambioUbicacion/frm_cambio_ubicacion_ciega.java	(revision b5ce5ac9d108fb929605f7a4b57b5971a4882985)
+++ app/src/main/java/com/dts/tom/Transacciones/CambioUbicacion/frm_cambio_ubicacion_ciega.java	(date 1622618972227)
@@ -121,7 +121,7 @@
     private boolean Existe_Lp=false;
 
     private boolean EsPalletNoEstandar=false;
-    private boolean TienePosiciones=false;
+    private int TienePosiciones=0;
     private boolean Ubicacion_Es_Valida= false;
 
     private boolean escaneoPallet;
@@ -456,7 +456,7 @@
                 if (event.getAction() == KeyEvent.ACTION_DOWN) {
                     switch (keyCode) {
                         case KeyEvent.KEYCODE_ENTER:
-                            validaDestino();
+                            AplicarCambioBoton();
                     }
                 }
                 return false;
@@ -1516,6 +1516,8 @@
                     datosCorrectos = false;
                 }
 
+                Recalcula_Peso();
+
                 if(cvUbicDestID == 0){
                     msgbox("La ubicación de destino no puede ser vacía");
                     txtUbicDestino.requestFocus();
@@ -1544,6 +1546,8 @@
             progress.cancel();
             msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + " . " + e.getMessage());
             btnGuardarCiega.setVisibility(View.VISIBLE);
+        }finally {
+            progress.cancel();
         }
 
     }
@@ -2156,11 +2160,12 @@
 
         try{
 
-            TienePosiciones = xobj.getresult(Boolean.class,"Tiene_Posiciones");
+            TienePosiciones = xobj.getresult(Integer.class,"Tiene_Posiciones");
 
-            if (!TienePosiciones){
+            if (TienePosiciones==0){
                 msgAskIngresePosiciones();
             }else{
+                vPosiciones = TienePosiciones;
                 validaDestino();
             }
 
@@ -2255,6 +2260,7 @@
             cvEstOrigen = 0;
             vCantidadAUbicar = 0;
             vCantidadDisponible = 0;
+            vPosiciones =0;
 
             lblUbicCompleta.setText("");
 
@@ -2582,7 +2588,6 @@
             if (!txtUbicDestino.getText().toString().isEmpty()){
 
                 bodega_ubicacion_destino = new clsBeBodega_ubicacion();
-
                 //Llama al método del WS Get_Ubicacion_By_Codigo_Barra_And_IdBodega para validar ubicacion destino
                 execws(12);
             }
@@ -2732,11 +2737,11 @@
             vStockRes.IdProductoEstado = cvEstOrigen;
             vStockRes.Fecha_ingreso = app.strFechaXML(du.getFechaActual());
             vStockRes.ValorFecha = app.strFechaXML(du.getFechaActual());
-            vStockRes.Pallet_No_Estandar=EsPalletNoEstandar;
+            vStockRes.Pallet_No_Estandar = EsPalletNoEstandar;
 
             if( escaneoPallet && productoList != null){
 
-                vStockRes.Lic_plate = BeStockPallet.Lic_plate;
+               vStockRes.Lic_plate = BeStockPallet.Lic_plate;
 
                 if( BeStockPallet.Factor > 0){
                     vStockRes.CantidadUmBas = vCantidadAUbicar * BeStockPallet.Factor;
@@ -2759,6 +2764,11 @@
 
     public void AplicarCambio(View view){
 
+        AplicarCambioBoton();
+    }
+
+    public  void AplicarCambioBoton(){
+
         try{
 
             //#CKFK 20210202 Agregué estas validaciones para evitar que se guarden datos incorrectos
Index: app/src/main/res/layout/activity_frm_list_rec_prod.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".Transacciones.Recepcion.frm_list_rec_prod\">\r\n\r\n    <HorizontalScrollView\r\n        android:id=\"@+id/srollRec\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_above=\"@id/chkRecepcionados\"\r\n        android:layout_below=\"@id/txtCodigoProductoRecepcion\">\r\n\r\n        <ListView\r\n            android:id=\"@+id/listRec\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_marginTop=\"1dp\"\r\n            android:layout_marginBottom=\"1dp\" />\r\n    </HorizontalScrollView>\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/relbot\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"48dp\"\r\n        android:layout_alignParentStart=\"true\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_marginStart=\"0dp\"\r\n        android:layout_marginBottom=\"1dp\"\r\n        android:background=\"@drawable/color_medium\">\r\n\r\n        <Button\r\n            android:id=\"@+id/btnBack\"\r\n            android:layout_width=\"61dp\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_alignParentStart=\"true\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_marginBottom=\"0dp\"\r\n            android:background=\"@drawable/back\"\r\n            android:onClick=\"Salir\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/btnFinalizarRece\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_alignParentEnd=\"true\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_toEndOf=\"@+id/btnBack\"\r\n            android:background=\"@drawable/color_medium\"\r\n            android:onClick=\"BotonFinalizarRec\"\r\n            android:text=\"Finalizar\"\r\n            android:textColor=\"@android:color/background_light\"\r\n            android:textSize=\"24sp\"\r\n            android:textStyle=\"bold\" />\r\n    </RelativeLayout>\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/reltop\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"48dp\"\r\n        android:layout_alignParentStart=\"false\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:background=\"@drawable/color_medium\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/lblTituloForma\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:gravity=\"center\"\r\n            android:text=\"Detalle de productos para ingreso\"\r\n            android:textColor=\"#FFFFFF\"\r\n            android:textSize=\"18sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n    </RelativeLayout>\r\n\r\n    <TextView\r\n        android:id=\"@+id/lblNoDocumento\"\r\n        style=\"@style/StyleText\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/reltop\"\r\n        android:background=\"@drawable/color_light\"\r\n        android:gravity=\"center\"\r\n        android:text=\"NoDocumento:\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btnCompletaRec\"\r\n        android:layout_width=\"204dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/lblNoDocumento\"\r\n        android:layout_alignParentStart=\"true\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_marginStart=\"172dp\"\r\n        android:layout_marginTop=\"1dp\"\r\n        android:layout_marginEnd=\"10dp\"\r\n        android:background=\"@android:color/holo_red_dark\"\r\n        android:text=\"Incompleta\"\r\n        android:textColor=\"@android:color/background_light\"\r\n        android:textSize=\"18sp\"\r\n        android:textStyle=\"bold\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/txtCodigoProductoRecepcion\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/btnCompletaRec\"\r\n        android:layout_alignStart=\"@+id/btnCompletaRec\"\r\n        android:layout_alignEnd=\"@+id/btnCompletaRec\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:layout_marginEnd=\"0dp\"\r\n        android:inputType=\"textPersonName\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView78\"\r\n        style=\"@style/StyleText\"\r\n        android:layout_width=\"150dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignTop=\"@+id/txtCodigoProductoRecepcion\"\r\n        android:layout_alignBottom=\"@+id/txtCodigoProductoRecepcion\"\r\n        android:text=\"Código:\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btnDetalleRec\"\r\n        android:layout_width=\"150dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_above=\"@+id/relbot\"\r\n        android:layout_alignParentStart=\"true\"\r\n        android:layout_marginStart=\"50dp\"\r\n        android:layout_marginEnd=\"14dp\"\r\n        android:layout_marginBottom=\"5dp\"\r\n        android:layout_toStartOf=\"@+id/btnRegs\"\r\n        android:background=\"@drawable/color_medium\"\r\n        android:text=\"Detalle\"\r\n        android:textColor=\"@android:color/background_light\"\r\n        android:textSize=\"18sp\"\r\n        android:visibility=\"invisible\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btnRegs\"\r\n        android:layout_width=\"150dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_above=\"@+id/relbot\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_marginEnd=\"50dp\"\r\n        android:layout_marginBottom=\"5dp\"\r\n        android:background=\"@android:color/holo_blue_dark\"\r\n        android:text=\"Registros: 0\"\r\n        android:textColor=\"@android:color/background_light\"\r\n        android:textSize=\"18sp\" />\r\n\r\n    <CheckBox\r\n        android:id=\"@+id/chkRecepcionados\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_above=\"@+id/btnDetalleRec\"\r\n        android:layout_alignParentStart=\"true\"\r\n        android:layout_marginStart=\"10dp\"\r\n        android:layout_marginBottom=\"10dp\"\r\n        android:text=\"Recepcionados\"\r\n        android:textColor=\"@color/colorPrimaryDark\"\r\n        android:textSize=\"18sp\" />\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_frm_list_rec_prod.xml	(revision b5ce5ac9d108fb929605f7a4b57b5971a4882985)
+++ app/src/main/res/layout/activity_frm_list_rec_prod.xml	(date 1622620196820)
@@ -98,11 +98,11 @@
         android:layout_marginStart="172dp"
         android:layout_marginTop="1dp"
         android:layout_marginEnd="10dp"
-        android:background="@android:color/holo_red_dark"
+        android:background="@color/rosado"
         android:text="Incompleta"
-        android:textColor="@android:color/background_light"
+        android:textColor="@color/colorPrimaryDark"
         android:textSize="18sp"
-        android:textStyle="bold" />
+        android:textStyle="normal" />
 
     <EditText
         android:id="@+id/txtCodigoProductoRecepcion"
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"colorPrimary\">#0399D5</color>\r\n    <color name=\"colorPrimaryDark\">#000404</color>\r\n    <color name=\"colorAccent\">#D81B60</color>\r\n    <color name=\"medium\">#BA5536</color>\r\n</resources>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision b5ce5ac9d108fb929605f7a4b57b5971a4882985)
+++ app/src/main/res/values/colors.xml	(date 1622607923824)
@@ -4,4 +4,5 @@
     <color name="colorPrimaryDark">#000404</color>
     <color name="colorAccent">#D81B60</color>
     <color name="medium">#BA5536</color>
+    <color name="rosado">#ffa5a0</color>
 </resources>
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.2.0'\r\n        classpath 'me.tatarka:gradle-retrolambda:3.7.1'\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision b5ce5ac9d108fb929605f7a4b57b5971a4882985)
+++ build.gradle	(date 1622672780463)
@@ -6,7 +6,7 @@
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:4.2.0'
+        classpath 'com.android.tools.build:gradle:4.2.1'
         classpath 'me.tatarka:gradle-retrolambda:3.7.1'
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
