Index: app/src/main/java/com/dts/tom/Transacciones/Recepcion/frm_recepcion_datos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.dts.tom.Transacciones.Recepcion;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.app.DatePickerDialog;\r\nimport android.app.Dialog;\r\nimport android.app.ProgressDialog;\r\nimport android.graphics.Color;\r\nimport android.graphics.Typeface;\r\nimport android.os.Bundle;\r\nimport android.text.Editable;\r\nimport android.text.InputFilter;\r\nimport android.text.InputType;\r\nimport android.text.TextWatcher;\r\nimport android.view.KeyEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Spinner;\r\nimport android.widget.TableRow;\r\nimport android.widget.TextView;\r\n\r\nimport com.dts.base.DecimalDigitsInputFilter;\r\nimport com.dts.base.WebService;\r\nimport com.dts.base.XMLObject;\r\nimport com.dts.classes.Mantenimientos.Barra_pallet.clsBeI_nav_barras_pallet;\r\nimport com.dts.classes.Mantenimientos.Motivo_devolucion.clsBeMotivo_devolucion;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_Presentacion.clsBeProducto_Presentacion;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_Presentacion.clsBeProducto_PresentacionList;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_codigos_barra.clsBeProducto_codigos_barraList;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_estado.clsBeProducto_estado;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_estado.clsBeProducto_estadoList;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_pallet.clsBeProducto_pallet;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_pallet.clsBeProducto_palletList;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_parametros.clsBeProducto_parametros;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_parametros.clsBeProducto_parametrosList;\r\nimport com.dts.classes.Mantenimientos.Producto.clsBeProducto;\r\nimport com.dts.classes.Mantenimientos.Resolucion_LP.clsBeResolucion_lp_operador;\r\nimport com.dts.classes.Mantenimientos.Unidad_medida.clsBeUnidad_medida;\r\nimport com.dts.classes.Transacciones.OrdenCompra.Trans_oc_det.clsBeTrans_oc_det;\r\nimport com.dts.classes.Transacciones.OrdenCompra.Trans_oc_det_lote.clsBeTrans_oc_det_lote;\r\nimport com.dts.classes.Transacciones.OrdenCompra.Trans_oc_det_lote.clsBeTrans_oc_det_loteList;\r\nimport com.dts.classes.Transacciones.Recepcion.LicencePlates.clsBeLicensePlatesList;\r\nimport com.dts.classes.Transacciones.Recepcion.Trans_re_det.clsBeTrans_re_det;\r\nimport com.dts.classes.Transacciones.Recepcion.Trans_re_det.clsBeTrans_re_detList;\r\nimport com.dts.classes.Transacciones.Recepcion.Trans_re_det_parametros.clsBeTrans_re_det_parametros;\r\nimport com.dts.classes.Transacciones.Recepcion.Trans_re_det_parametros.clsBeTrans_re_det_parametrosList;\r\nimport com.dts.classes.Transacciones.Recepcion.clsBeTrans_re_enc;\r\nimport com.dts.classes.Transacciones.Stock.Stock.clsBeStock;\r\nimport com.dts.classes.Transacciones.Stock.Stock_rec.clsBeStock_rec;\r\nimport com.dts.classes.Transacciones.Stock.Stock_rec.clsBeStock_recList;\r\nimport com.dts.classes.Transacciones.Stock.Stock_se_rec.clsBeStock_se_rec;\r\nimport com.dts.classes.Transacciones.Stock.Stock_se_rec.clsBeStock_se_recList;\r\nimport com.dts.tom.PBase;\r\nimport com.dts.tom.R;\r\nimport com.zebra.sdk.comm.BluetoothConnection;\r\nimport com.zebra.sdk.printer.ZebraPrinter;\r\nimport com.zebra.sdk.printer.ZebraPrinterFactory;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.NoSuchElementException;\r\nimport java.util.Objects;\r\n\r\nimport static br.com.zbra.androidlinq.Linq.stream;\r\nimport static com.dts.tom.Transacciones.Recepcion.frm_list_rec_prod.EsTransferenciaInternaWMS;\r\nimport static com.dts.tom.Transacciones.Recepcion.frm_list_rec_prod.gBeStockRec;\r\n\r\n//import com.dts.classes.Mantenimientos.Bodega.clsBeBodegaBase;\r\n\r\npublic class frm_recepcion_datos extends PBase {\r\n\r\n    Calendar calendario = Calendar.getInstance();\r\n\r\n    private Spinner cmbEstadoProductoRec,cmbPresRec, cmbVence, cmbLote;\r\n    private EditText txtNoLP,txtLoteRec,txtUmbasRec,txtCantidadRec,txtPeso,txtPesoUnitario,txtCostoReal,txtCostoOC,cmbVenceRec;\r\n    private TextView lblDatosProd,lblPropPrd,lblPeso,lblPUn,lblCosto,lblCReal,lblPres,lblLote,lblVence, lblEstiba, lblUbicacion;\r\n    private Button btnCantPendiente;\r\n    private Button btnCantRecibida;\r\n    private ProgressDialog progress;\r\n    private DatePicker dpResult;\r\n    private ImageView imgDate, cmdImprimir;\r\n    private CheckBox chkPaletizar, chkPalletNoEstandar, chkEstiba;\r\n    private TableRow tblEstiba;\r\n    private TableRow tbLPeso;\r\n    private TableRow tblVence;\r\n    private TableRow tblUbicacion;\r\n    private Dialog dialog;\r\n\r\n    private boolean imprimirDesdeBoton=false;\r\n\r\n    private TextView lblSerialP;\r\n    private TextView lblPesoTit;\r\n    private TextView lblTempTit;\r\n    private TextView lblTempEsta;\r\n    private TextView lblTempReal;\r\n    private TextView lblPresParam;\r\n    private TextView lblPesoEsta;\r\n    private TextView lblPesoReal;\r\n    private TextView lblSerialIni;\r\n    private TextView lblSerialFin;\r\n    private EditText txtLicPlate;\r\n    private EditText txtSerial;\r\n    private EditText txtAnada;\r\n    private EditText txtFechaManu;\r\n    private EditText txtTempEsta;\r\n    private EditText txtTempReal;\r\n    private EditText txtPesoEsta;\r\n    private EditText txtPesoReal;\r\n    private EditText txtSerieIni;\r\n    private EditText txtSerieFin;\r\n    private Spinner cmbPresParams;\r\n    int pIndexStock=-1;\r\n    double Cant_Recibida_Actual=0;\r\n\r\n    private WebServiceHandler ws;\r\n    private XMLObject xobj;\r\n\r\n    private boolean Mostro_Propiedades,Escaneo_Pallet;\r\n    private boolean Mostrar_Propiedades_Parametros = false;\r\n    private double Cant_Recibida_Anterior = 0,Cant_Recibida,Cant_A_Recibir,Cant_Pendiente;\r\n    private int pIdOrdenCompraDet,pIdOrdenCompraEnc,pLineaOC,pIdRecepcionDet,pIdProductoBodega;\r\n    private int IdEstadoSelect,IdPreseSelect=-1,IdPreseSelectParam=-1;     \r\n    private String pNumeroLP = \"\";\r\n\r\n    private boolean PallCorrecto= false;\r\n    private int pIndexProdPallet=-1;\r\n    private int pIndexParam=-1;\r\n    private int IndexPresSelected=-1;\r\n    private String MensajeParam=\"\";\r\n    private int pIndiceListaStock = -1;\r\n    private double CostoOC=0;\r\n    private int vPresentacion;\r\n    private String pLp=\"\";\r\n    private boolean Existe_Lp=false;\r\n    private String ubiDetLote=\"\";\r\n\r\n    private clsBeTrans_oc_det BeOcDet;\r\n    private clsBeProducto_parametrosList pListBEProductoParametro = new clsBeProducto_parametrosList();\r\n    private clsBeTrans_re_det_parametrosList plistBeReDetParametros = new clsBeTrans_re_det_parametrosList();\r\n    private clsBeStock_se_recList pListBeStockSeRec = new clsBeStock_se_recList();\r\n    private clsBeStock_recList pListBeStockRec = new clsBeStock_recList();\r\n    private clsBeProducto_palletList pListBeProductoPallet = new clsBeProducto_palletList();\r\n    private clsBeTrans_re_detList pListTransRecDet = new clsBeTrans_re_detList();\r\n    private clsBeI_nav_barras_pallet BeINavBarraPallet = new clsBeI_nav_barras_pallet();\r\n    private clsBeTrans_re_det BeTransReDet= new clsBeTrans_re_det();\r\n    private clsBeTrans_oc_det_lote BeDetalleLotes  = new clsBeTrans_oc_det_lote();\r\n    private clsBeStock_rec BeStockRecNuevaRec = new clsBeStock_rec();\r\n    private clsBeStock_recList listaStockPalletsNuevos = new clsBeStock_recList();\r\n    private clsBeProducto_palletList listaProdPalletsNuevos = new clsBeProducto_palletList();\r\n    private clsBeStock_rec vBeStockRec = new clsBeStock_rec();\r\n    private clsBeStock_rec vBeStockRecPallet = new clsBeStock_rec();\r\n    private clsBeProducto_pallet BeProdPallet  = new clsBeProducto_pallet();\r\n    private clsBeStock gBeStockAnt;\r\n    private clsBeTrans_oc_det beTransOCDet =new clsBeTrans_oc_det();\r\n    private  clsBeStock_rec ObjS = new clsBeStock_rec();\r\n    private  clsBeStock_se_rec ObjNS =new clsBeStock_se_rec();\r\n    boolean Pperzonalizados=false,PCap_Manu=false,PCap_Anada=false,PGenera_lp=false,PTiene_Ctrl_Peso=false,PTiene_Ctrl_Temp=false,PTiene_PorSeries=false,PTiene_Pres=false;\r\n\r\n    private int pIdPropietarioBodega=0;\r\n\r\n    double vFactorNuevaRec=0;\r\n    double vCantNuevaRec=0;\r\n\r\n    private clsBeProducto BeProducto = new clsBeProducto();\r\n    private clsBeProducto_estadoList LProductoEstado = new clsBeProducto_estadoList();\r\n\r\n    private final ArrayList<String> EstadoList= new ArrayList<>();\r\n    private final ArrayList<String> PresList= new ArrayList<>();\r\n    private final ArrayList<String> VenceList= new ArrayList<>();\r\n    private final ArrayList<String> LotesList = new ArrayList<>();\r\n    private final ArrayList<String> UbicLotesList = new ArrayList<>();\r\n\r\n    // date\r\n    private int year;\r\n    private int month;\r\n    private int day;\r\n\r\n    static final int DATE_DIALOG_ID = 999;\r\n\r\n    double CajasPorCama = 0;\r\n    double CamasPorTarima = 0;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_frm_recepcion_datos);\r\n\r\n        super.InitBase();\r\n\r\n        ws = new WebServiceHandler(frm_recepcion_datos.this, gl.wsurl);\r\n        xobj = new XMLObject(ws);\r\n\r\n        cmbEstadoProductoRec = findViewById(R.id.cmbEstadoProductoRec);\r\n        cmbPresRec = findViewById(R.id.cmbPresRec);\r\n        cmbVence = findViewById(R.id.cmbVence);\r\n        cmbLote = findViewById(R.id.cmbLote);\r\n        cmbVenceRec = findViewById(R.id.cmbVenceRec);\r\n\r\n        txtNoLP = findViewById(R.id.txtLP);\r\n        txtLoteRec = findViewById(R.id.txtLoteRec);\r\n        txtUmbasRec = findViewById(R.id.txtUmbasRec);\r\n        txtCantidadRec = findViewById(R.id.txtCantidadRec);\r\n        txtPeso= findViewById(R.id.txtPeso);\r\n        txtPesoUnitario = findViewById(R.id.txtPesoUnitario);\r\n        txtCostoReal = findViewById(R.id.txtCostoReal);\r\n        txtCostoOC = findViewById(R.id.txtCostoOC);\r\n\r\n        lblDatosProd = findViewById(R.id.lblTituloForma);\r\n        lblPropPrd = findViewById(R.id.lblPropPrd);\r\n        lblPeso = findViewById(R.id.textView87);\r\n        lblPUn = findViewById(R.id.textView86);\r\n        lblCReal = findViewById(R.id.textView89);\r\n        lblCosto = findViewById(R.id.textView88);\r\n        lblVence = findViewById(R.id.textView81);\r\n        lblLote = findViewById(R.id.textView82);\r\n        lblPres = findViewById(R.id.textView83);\r\n        lblEstiba = findViewById(R.id.lblEstiba);\r\n        lblUbicacion = findViewById(R.id.lblUbicacion);\r\n\r\n        btnCantRecibida = findViewById(R.id.btnCantRecibida);\r\n        btnCantPendiente = findViewById(R.id.btnCantPendiente);\r\n\r\n        dpResult = findViewById(R.id.datePicker);\r\n\r\n        imgDate = findViewById(R.id.imgDate);\r\n        cmdImprimir = findViewById(R.id.cmdImprimir);\r\n\r\n        chkPaletizar = findViewById(R.id.chkPaletizar);\r\n        chkPalletNoEstandar = findViewById(R.id.chkPalletNoEstandar);\r\n        chkEstiba = findViewById(R.id.chkEstiba);\r\n\r\n        findViewById(R.id.btnBack);\r\n        findViewById(R.id.btnIr);\r\n\r\n        tblEstiba  = findViewById(R.id.tblEstiba);\r\n        tbLPeso  = findViewById(R.id.tbLPeso);\r\n        tblVence  = findViewById(R.id.tblVence);\r\n        tblUbicacion = findViewById(R.id.tblUbicacion);\r\n\r\n        tblEstiba.setVisibility(View.GONE);\r\n        tblUbicacion.setVisibility(View.GONE);\r\n        chkPaletizar.setVisibility(View.GONE);\r\n        chkEstiba.setVisibility(View.GONE);\r\n\r\n        if (gl.gCapturaPalletNoEstandar){\r\n            chkPalletNoEstandar.setVisibility(View.VISIBLE);\r\n        }else{\r\n            chkPalletNoEstandar.setVisibility(View.GONE);\r\n        }\r\n\r\n        lblUbicacion.setText(\"\");\r\n\r\n        setCurrentDateOnView();\r\n\r\n        setHandlers();\r\n\r\n        ProgressDialog();\r\n\r\n        progress.setMessage(\"Inicializando valores\");\r\n\r\n        if (gl.gselitem != null) {\r\n            BeOcDet=gl.gselitem;\r\n        }\r\n\r\n        if(gl.gBeOrdenCompra.TipoIngreso.getEs_Poliza_Consolidada()){\r\n            pIdPropietarioBodega =  BeOcDet.IdPropietarioBodega;\r\n        }else{\r\n            pIdPropietarioBodega = gl.gBeRecepcion.PropietarioBodega.IdPropietarioBodega;\r\n        }\r\n\r\n        if(!gl.Escaneo_Pallet){\r\n            execws(1);\r\n        }else{\r\n            Load();\r\n        }\r\n\r\n        if (gl.bloquear_lp_hh) {\r\n            txtNoLP.setEnabled(false);\r\n            txtCantidadRec.requestFocus();\r\n        } else{\r\n            txtNoLP.setEnabled(true);\r\n            txtNoLP.requestFocus();\r\n        }\r\n\r\n    }\r\n\r\n    //region Events\r\n\r\n    public void ProgressDialog(){\r\n        progress=new ProgressDialog(this);\r\n        progress.setCancelable(false);\r\n        progress.setProgressStyle(ProgressDialog.STYLE_SPINNER);\r\n        progress.setIndeterminate(true);\r\n        progress.setProgress(0);\r\n        progress.show();\r\n    }\r\n\r\n    public void ChangeDate(View view){\r\n        showDialog(DATE_DIALOG_ID);\r\n    }\r\n\r\n    public void Imprimir(View view){\r\n        msgAskImprimir(\"Imprimir Licencia\");\r\n    }\r\n\r\n    @Override\r\n    protected Dialog onCreateDialog(int id) {\r\n        if (id == DATE_DIALOG_ID) {// set date picker as current date\r\n            return new DatePickerDialog(this, datePickerListener,\r\n                    year, month, day);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void setCurrentDateOnView() {\r\n\r\n        final Calendar c = Calendar.getInstance();\r\n        year = c.get(Calendar.YEAR);\r\n        month = c.get(Calendar.MONTH)+1;\r\n        day = c.get(Calendar.DAY_OF_MONTH);\r\n\r\n        // set current date into textview\r\n        cmbVenceRec.setText(new StringBuilder()\r\n                // Month is 0 based, just add 1\r\n                .append(day).append(\"-\").append(month).append(\"-\")\r\n                .append(year).append(\" \"));\r\n\r\n        // set current date into datepicker\r\n        dpResult.init(year, month, day, null);\r\n\r\n    }\r\n\r\n    private final DatePickerDialog.OnDateSetListener datePickerListener = new DatePickerDialog.OnDateSetListener() {\r\n\r\n        // when dialog box is closed, below method will be called.\r\n        public void onDateSet(DatePicker view, int selectedYear,\r\n                              int selectedMonth, int selectedDay) {\r\n\r\n            year = selectedYear;\r\n            month = selectedMonth+1;\r\n            day = selectedDay;\r\n            // set selected date into textview\r\n            cmbVenceRec.setText(new StringBuilder().append(day)\r\n                    .append(\"-\").append(month).append(\"-\").append(year)\r\n                    .append(\" \"));\r\n\r\n            // set selected date into datepicker also\r\n            dpResult.init(year, month, day, null);\r\n\r\n        }\r\n    };\r\n\r\n    private void setHandlers() {\r\n\r\n        try{\r\n\r\n            cmbEstadoProductoRec.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n\r\n                public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n                    spinlabel.setTextColor(Color.BLACK);\r\n                    spinlabel.setPadding(5,0,0,0);spinlabel.setTextSize(18);\r\n                    spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                    IdEstadoSelect=LProductoEstado.items.get(position).IdEstado;\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onNothingSelected(AdapterView<?> parentView) {\r\n                }\r\n\r\n            });\r\n\r\n            cmbPresRec.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n\r\n                public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n                    spinlabel.setTextColor(Color.BLACK);\r\n                    spinlabel.setPadding(5,0,0,0);spinlabel.setTextSize(18);\r\n                    spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                    IdPreseSelect=BeProducto.Presentaciones.items.get(position).IdPresentacion;\r\n                    IndexPresSelected=position;\r\n                    boolean EsPallet = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==IdPreseSelect).select(c->c.EsPallet).first();\r\n                    boolean PermitePaletizar = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==IdPreseSelect).select(c->c.Permitir_paletizar).first();\r\n                    CajasPorCama = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==IdPreseSelect).select(c->c.CajasPorCama).first();\r\n                    CamasPorTarima = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==IdPreseSelect).select(c->c.CamasPorTarima).first();\r\n\r\n                    if (EsPallet||PermitePaletizar){\r\n                        chkPaletizar.setVisibility(View.GONE);\r\n                    }else{\r\n                        chkPaletizar.setVisibility(View.GONE);\r\n                    }\r\n\r\n                    if (CajasPorCama > 0 && CamasPorTarima > 0){\r\n                        tblEstiba.setVisibility(View.VISIBLE);\r\n                        lblEstiba.setText(\"Camas por Tarima: \" + CamasPorTarima + \" Cajas por cama: \" +  CajasPorCama);\r\n                    }else{\r\n                        tblEstiba.setVisibility(View.GONE);\r\n                        lblEstiba.setText(\"\");\r\n                    }\r\n\r\n                    if(gl.gCapturaEstibaIngreso) {\r\n                        if (CajasPorCama==0 && CamasPorTarima==0){\r\n                            chkEstiba.setVisibility(View.VISIBLE);\r\n                        }else{\r\n                            chkEstiba.setVisibility(View.GONE);\r\n                        }\r\n                    }else{\r\n                        chkEstiba.setVisibility(View.GONE);\r\n                    }\r\n\r\n                    BeProducto.Presentacion = BeProducto.Presentaciones.items.get(position);\r\n\r\n                    if (BeProducto.Presentacion != null){\r\n                        if (BeProducto.Presentacion.Genera_lp_auto) {\r\n                            progress.setMessage(\"Buscando License Plate\");\r\n                            progress.show();\r\n                            execws(6);\r\n                            progress.cancel();\r\n                        }\r\n                    }\r\n\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onNothingSelected(AdapterView<?> parent) {\r\n                }\r\n\r\n\r\n            });\r\n\r\n            txtNoLP.setOnKeyListener((v, keyCode, event) -> {\r\n                if ((event.getAction()==KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER)){\r\n                    if (BeProducto.Control_vencimiento){\r\n                        cmbVenceRec.setSelectAllOnFocus(true);\r\n                        cmbVenceRec.requestFocus();\r\n                    }else if (BeProducto.Control_lote){\r\n                        txtLoteRec.setSelectAllOnFocus(true);\r\n                        txtLoteRec.requestFocus();\r\n                    }else {\r\n                       txtCantidadRec.requestFocus();\r\n                    }\r\n\r\n                    Procesa_Barra_Producto();\r\n\r\n                }\r\n\r\n                return false;\r\n            });\r\n\r\n            txtCantidadRec.setOnKeyListener((v, keyCode, event) -> {\r\n                if ((event.getAction()==KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER)){\r\n\r\n                    if (tbLPeso.getVisibility()==View.VISIBLE){\r\n                        txtPeso.requestFocus();\r\n                    }else{\r\n                        ValidaCampos();\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            });\r\n\r\n            txtPeso.setOnKeyListener((v, keyCode, event) -> {\r\n                if ((event.getAction()==KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER)){\r\n\r\n                    double pesoTotal = Double.parseDouble(txtPeso.getText().toString());\r\n                    double cant = Double.parseDouble(txtCantidadRec.getText().toString());\r\n                    if (cant>0){\r\n                        double pesoUni = mu.round(pesoTotal/cant,gl.gCantDecCalculo);\r\n                        txtPesoUnitario.setText(String.valueOf(pesoUni));\r\n                    }\r\n                    ValidaCampos();\r\n                }\r\n\r\n                return false;\r\n            });\r\n\r\n            cmbVenceRec .addTextChangedListener(new TextWatcher() {\r\n                @Override\r\n                public void onTextChanged(CharSequence s, int start, int before, int count) {}\r\n\r\n                @Override\r\n                public void beforeTextChanged(CharSequence s, int start, int count,int after) {}\r\n\r\n                @Override\r\n                public void afterTextChanged(Editable s) {}\r\n\r\n\r\n            });\r\n\r\n            cmbVenceRec.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n                @Override\r\n                public void onFocusChange(View v, boolean hasFocus) {\r\n                    if (!hasFocus) {\r\n                        String valor= cmbVenceRec .getText().toString();\r\n                        try{\r\n\r\n                            if (!du.EsFecha(valor)){\r\n                                msgbox(\"No es una fecha válida, se colocará la fecha actual\");\r\n                                cmbVenceRec.setText(du.getActDateStr());\r\n                            };\r\n\r\n                            // du.EsFecha(valor);\r\n                        }catch(Exception e){\r\n                            cmbVenceRec.setText(du.getActDateStr());\r\n                        }\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            cmdImprimir.setOnClickListener(v -> {\r\n                imprimirDesdeBoton=true;\r\n                Imprimir(v);\r\n            });\r\n\r\n            chkEstiba.setOnClickListener(view -> {\r\n                if(((CompoundButton) view).isChecked()){\r\n                    setEstiba();\r\n                } else {\r\n\r\n                    CajasPorCama=0;\r\n                    CamasPorTarima=0;\r\n\r\n                    if (CajasPorCama > 0 && CamasPorTarima > 0){\r\n                        tblEstiba.setVisibility(View.VISIBLE);\r\n                        lblEstiba.setText(\"Camas por Tarima: \" + CamasPorTarima + \" Cajas por cama: \" +  CajasPorCama);\r\n                    }else{\r\n                        tblEstiba.setVisibility(View.GONE);\r\n                        lblEstiba.setText(\"\");\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            cmbVence.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n                @Override\r\n                public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id)\r\n                {\r\n                    try\r\n                    {\r\n                        cmbVenceRec.setText(cmbVence.getSelectedItem().toString());\r\n                        fillLotes();\r\n\r\n                    } catch (Exception e)\r\n                    {\r\n                        msgbox(e.getMessage());\r\n                    }\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onNothingSelected(AdapterView<?> parentView) {\r\n                }\r\n\r\n            });\r\n\r\n            cmbLote.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n                @Override\r\n                public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id)\r\n                {\r\n                    try\r\n                    {\r\n                        txtLoteRec.setText(cmbLote.getSelectedItem().toString());\r\n                        fillUbicacion();\r\n                    } catch (Exception e)\r\n                    {\r\n                        msgbox(e.getMessage());\r\n                    }\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onNothingSelected(AdapterView<?> parentView) {\r\n                }\r\n\r\n            });\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(e.getClass()+\" \"+e.getMessage());\r\n            progress.cancel();\r\n        }\r\n\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region validaciones\r\n\r\n    private void ValidaCampos(){\r\n\r\n        try{\r\n\r\n            if (BeProducto.Presentaciones != null) {\r\n                if (BeProducto.Presentaciones.items != null){\r\n\r\n                    if (IdPreseSelect!=-1){\r\n                        boolean EsPallet = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==IdPreseSelect).select(c->c.EsPallet).first();\r\n                        if (EsPallet){\r\n                            if (CajasPorCama==0 && CamasPorTarima==0){\r\n                                throw new Exception(\"Debe ingresar la definición de la estiba\");\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (!txtCantidadRec.getText().toString().isEmpty() && !txtCantidadRec.getText().toString().equals(\"\")){\r\n\r\n                if (BeProducto!=null){\r\n                    if (ValidaDatosIngresados()){\r\n                        //#CKFK20200816 Quité esta validacion porque no estó correcta\r\n                   /* if (Cant_Recibida_Anterior!=Cant_Recibida && Cant_Recibida_Anterior!=0){\r\n                        Mostro_Propiedades = false;\r\n                        return;\r\n                    }*/\r\n                        Mostrar_Propiedades_Parametros();\r\n                    }\r\n                }\r\n            }else{\r\n               throw new Exception(\"La cantidad no puede ser vacía\");\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"ValidaCampos:\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private boolean ValidaDatosIngresados(){\r\n\r\n        try{\r\n\r\n            if (BeProducto.Control_vencimiento){\r\n                if(cmbVenceRec.getText().toString().isEmpty()){\r\n                    msgboxValidaFechaVence(\"La fecha no puede estar vacía.\");\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (BeProducto.Control_lote){\r\n                if(txtLoteRec.getText().toString().isEmpty()){\r\n                    msgboxValidaLote(\"El campo de lote no puede estar vacío.\");\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if(BeProducto.Control_peso){\r\n                if (txtPeso.getText().toString().isEmpty()){\r\n                    msgboxValidaPeso(\"El peso no puede estar vacío\");\r\n                    return false;\r\n                }else{\r\n                    double pesoTotal = Double.parseDouble(txtPeso.getText().toString());\r\n                    double cant = Double.parseDouble(txtCantidadRec.getText().toString());\r\n                    if (cant>0){\r\n                        double pesoUni = mu.round(pesoTotal/cant,gl.gCantDecCalculo);\r\n                        txtPesoUnitario.setText(String.valueOf(pesoUni));\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (txtCantidadRec.getText().toString().isEmpty()){\r\n                mu.msgbox(\"La cantidad no puede estar vacía\");\r\n                txtCantidadRec.requestFocus();\r\n                return false;\r\n            }\r\n\r\n            if (Double.parseDouble(txtCantidadRec.getText().toString())<=0){\r\n                mu.msgbox(\"La cantidad debe ser mayor a 0\");\r\n                txtCantidadRec.requestFocus();\r\n                return false;\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"ValidaDatosIngresados:\"+e.getMessage());\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public void msgboxValidaLote(String msg) {\r\n\r\n        try{\r\n\r\n            if (!(msg.isEmpty())){\r\n\r\n                AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n                dialog.setTitle(R.string.app_name);\r\n                dialog.setMessage(msg);\r\n                dialog.setCancelable(false);\r\n\r\n                dialog.setNeutralButton(\"OK\", (dialog1, which) -> {\r\n                    txtLoteRec.requestFocus();\r\n                    txtLoteRec.selectAll();\r\n                    txtLoteRec.setSelectAllOnFocus(true);\r\n                });\r\n                dialog.show();\r\n\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n        }\r\n    }\r\n\r\n    public void msgboxValidaFechaVence(String msg) {\r\n\r\n        try{\r\n\r\n            if (!(msg.isEmpty())){\r\n\r\n                AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n                dialog.setTitle(R.string.app_name);\r\n                dialog.setMessage(msg);\r\n                dialog.setCancelable(false);\r\n\r\n                dialog.setNeutralButton(\"OK\", (dialog1, which) -> {\r\n                    cmbVenceRec.requestFocus();\r\n                    cmbVenceRec.selectAll();\r\n                    cmbVenceRec.setSelectAllOnFocus(true);\r\n                });\r\n                dialog.show();\r\n\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n        }\r\n    }\r\n\r\n    public void msgboxValidaPeso(String msg) {\r\n\r\n        try{\r\n\r\n            if (!(msg.isEmpty())){\r\n\r\n                AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n                dialog.setTitle(R.string.app_name);\r\n                dialog.setMessage(msg);\r\n                dialog.setCancelable(false);\r\n\r\n                dialog.setNeutralButton(\"OK\", (dialog1, which) -> {\r\n                    txtPeso.requestFocus();\r\n                    txtPeso.selectAll();\r\n                    txtPeso.setSelectAllOnFocus(true);\r\n                });\r\n                dialog.show();\r\n\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n        }\r\n    }\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    private void Muestra_Propiedades_Producto(){\r\n\r\n        int vIndiceParam = -1;\r\n        double vCant;\r\n        try{\r\n\r\n\r\n            if (plistBeReDetParametros.items!=null){\r\n                List AuxDetParams = stream(plistBeReDetParametros.items).select(c->c.IdParametroDet).toList();\r\n                vIndiceParam = AuxDetParams.indexOf(pIdRecepcionDet);\r\n            }\r\n\r\n            pIndexParam = vIndiceParam;\r\n\r\n            if (Mostro_Propiedades){\r\n                return;\r\n            }\r\n\r\n            int IndexPresentacion =IndexPresSelected;//BeProducto.Presentaciones.items.indexOf(IdPreseSelect);\r\n            clsBeProducto_Presentacion bePresentacion = new clsBeProducto_Presentacion();\r\n\r\n            if (IndexPresentacion!=-1){\r\n                bePresentacion = BeProducto.Presentaciones.items.get(IndexPresentacion);\r\n            }\r\n\r\n            if (bePresentacion.EsPallet && bePresentacion.Genera_lp_auto){\r\n                if(txtCantidadRec.getText().toString().isEmpty()){\r\n                    vCant = 0;\r\n                }else {\r\n                    vCant = Double.parseDouble(txtCantidadRec.getText().toString());\r\n                }\r\n\r\n                if(vCant>1){\r\n                    mu.msgbox(\"Los license plate van a ser ingresados manualmente, no puede recepcionar más de un pallet\");\r\n//                    txtCantidadRec.setText(mu.frmdecimal(1,gl.gCantDecDespliegue)+\"\");\r\n                    txtCantidadRec.setText(1+\"\");\r\n                    txtCantidadRec.requestFocus();\r\n                    return;\r\n                }\r\n\r\n            }else if (bePresentacion.Permitir_paletizar && chkPaletizar.isChecked() &&!bePresentacion.Genera_lp_auto){\r\n                if(txtCantidadRec.getText().toString().isEmpty()){\r\n                    vCant = 0;\r\n                }else {\r\n                    vCant = Double.parseDouble(txtCantidadRec.getText().toString());\r\n                }\r\n\r\n                if (vCant>bePresentacion.CajasPorCama*bePresentacion.CamasPorTarima){\r\n                    mu.msgbox(\"Los license plate van a ser ingresados manualmente, no puede recepcionar más de \"+bePresentacion.CajasPorCama * bePresentacion.CamasPorTarima\r\n                            + \" \"+ bePresentacion.Nombre);\r\n//                    txtCantidadRec.setText(mu.frmdecimal(bePresentacion.CajasPorCama * bePresentacion.CamasPorTarima,gl.gCantDecDespliegue)+\"\");\r\n                    txtCantidadRec.setText(bePresentacion.CajasPorCama * bePresentacion.CamasPorTarima+\"\");\r\n                    txtCantidadRec.requestFocus();\r\n                    return;\r\n                }\r\n\r\n            }\r\n\r\n            //#CKFK 20210308 Agregué este cambio para que los parámetros solo se muestren cuando sea necesario\r\n           if (existen_parametros_para_mostrar()){\r\n                MuestraParametros1(this );\r\n            }else{\r\n               Guardar_Recepcion_Nueva();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Muestra_Propiedades_Producto: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private boolean existen_parametros_para_mostrar(){\r\n\r\n        int datos_ingresar = 0;\r\n        boolean mostrar = false;\r\n\r\n        try{\r\n\r\n            if (BeProducto.Fechamanufactura && BeProducto.Materia_prima){\r\n                datos_ingresar +=1;\r\n\r\n            }\r\n\r\n            if (BeProducto.Capturar_aniada){\r\n                datos_ingresar +=1;\r\n            }\r\n\r\n            if (BeProducto.Peso_recepcion){\r\n                datos_ingresar +=1;\r\n            }\r\n\r\n            if (BeProducto.Temperatura_recepcion){\r\n                datos_ingresar +=1;\r\n            }\r\n\r\n            if (BeProducto.Serializado){\r\n                datos_ingresar +=1;\r\n            }\r\n\r\n            if (BeProducto.Temperatura_recepcion){\r\n                datos_ingresar +=1;\r\n            }\r\n\r\n            if (pListBEProductoParametro!=null){\r\n                if (pListBEProductoParametro.items!=null){\r\n                    datos_ingresar +=1;\r\n                }\r\n            }\r\n\r\n            mostrar = datos_ingresar>0;\r\n\r\n        }catch (Exception ex){\r\n            mu.msgbox(\"existen_parametros_para_mostrar: \"+ex.getMessage());\r\n        }\r\n\r\n        return mostrar;\r\n    }\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    private void MuestraParametros1(Activity activity){\r\n\r\n        try{\r\n\r\n            int IndexPresentacion;\r\n            Cant_Recibida_Actual=0;\r\n\r\n            if (!txtCantidadRec.getText().toString().isEmpty()){\r\n                Cant_Recibida_Actual = Double.parseDouble(txtCantidadRec.getText().toString());\r\n            }\r\n\r\n            dialog = new Dialog(activity);\r\n            dialog.setCancelable(false);\r\n            dialog.setContentView(R.layout.frm_parametros1);\r\n\r\n            TextView lblPrducto = dialog.findViewById(R.id.lblTituloForma);\r\n            lblSerialP = dialog.findViewById(R.id.textView7);\r\n            TextView lblLicPlate = dialog.findViewById(R.id.textView5);\r\n            TextView lblFManufact = dialog.findViewById(R.id.textView77);\r\n            TextView lblAnada = dialog.findViewById(R.id.label1);\r\n            lblTempEsta = dialog.findViewById(R.id.textView8);\r\n            lblTempReal = dialog.findViewById(R.id.textView91);\r\n            lblPresParam = dialog.findViewById(R.id.textView92);\r\n            lblPesoEsta = dialog.findViewById(R.id.textView93);\r\n            lblPesoReal = dialog.findViewById(R.id.textView94);\r\n            lblSerialIni = dialog.findViewById(R.id.textView95);\r\n            lblSerialFin = dialog.findViewById(R.id.textView96);\r\n            lblTempTit = dialog.findViewById(R.id.lblTempTit);\r\n            lblPesoTit = dialog.findViewById(R.id.lblPesoTit);\r\n            //Objeto para dialogo de parametros\r\n\r\n            txtLicPlate = dialog.findViewById(R.id.txtLicPlate);\r\n            txtSerial = dialog.findViewById(R.id.txtSerial);\r\n            txtAnada = dialog.findViewById(R.id.txtAnada);\r\n            txtFechaManu = dialog.findViewById(R.id.txtFechaManu);\r\n            EditText txtFechaIng = dialog.findViewById(R.id.txtFechaIng);\r\n            txtTempEsta = dialog.findViewById(R.id.txtTempEsta);\r\n            txtTempReal = dialog.findViewById(R.id.txtTempReal);\r\n            txtPesoEsta = dialog.findViewById(R.id.txtPesoEsta);\r\n            txtPesoReal = dialog.findViewById(R.id.txtPesoReal);\r\n            txtSerieIni = dialog.findViewById(R.id.txtSerieIni);\r\n            txtSerieFin = dialog.findViewById(R.id.txtSerieFin);\r\n\r\n            txtTempReal.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtTempReal.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n            txtPesoReal.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtPesoReal.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n            txtTempEsta.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtTempEsta.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n            txtPesoEsta.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtPesoEsta.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n\r\n            cmbPresParams = dialog.findViewById(R.id.cmbPresParams);\r\n\r\n            cmbPresParams.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n\r\n                public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n                    spinlabel.setTextColor(Color.BLACK);\r\n                    spinlabel.setPadding(5,0,0,0);spinlabel.setTextSize(18);\r\n                    spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                    IdPreseSelectParam=BeProducto.Presentaciones.items.get(position).IdPresentacion;\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onNothingSelected(AdapterView<?> parent) {\r\n                }\r\n\r\n\r\n            });\r\n\r\n            lblPrducto.setText(BeProducto.Codigo + \" - \" +BeProducto.Nombre);\r\n\r\n            if (pListBeStockRec!=null){\r\n                if (pListBeStockRec.items!=null){\r\n                    List AuxStock=stream(pListBeStockRec.items).select(c->c.IdRecepcionDet).toList();\r\n                    pIndexStock =AuxStock.indexOf(pIdRecepcionDet);\r\n                }\r\n            }\r\n\r\n            IndexPresentacion = IndexPresSelected;\r\n\r\n              clsBeProducto_Presentacion bePresentacion= new clsBeProducto_Presentacion();\r\n\r\n            if (IndexPresentacion!= -1){\r\n                bePresentacion = BeProducto.Presentaciones.items.get(IndexPresentacion);\r\n            }\r\n\r\n            if (IndexPresentacion!=-1){\r\n\r\n                if((bePresentacion.EsPallet||chkPaletizar.isChecked())&&\r\n                        (bePresentacion.CamasPorTarima ==0|| bePresentacion.CajasPorCama==0)){\r\n                   // mu.msgbox(\"La presentación no tiene los valores necesarios para recepcionar pallets\");\r\n                    txtLicPlate.setFocusable(false);\r\n                    txtLicPlate.setFocusableInTouchMode(false);\r\n                    txtLicPlate.setClickable(false);\r\n                    txtLicPlate.setVisibility(View.GONE);\r\n                    lblLicPlate.setVisibility(View.GONE);\r\n                }else{\r\n                    if (bePresentacion.EsPallet ||chkPaletizar.isChecked()|| bePresentacion.Permitir_paletizar){\r\n\r\n                        if (bePresentacion.Genera_lp_auto){\r\n\r\n                            txtLicPlate.setFocusable(true);\r\n                            txtLicPlate.setFocusableInTouchMode(true);\r\n                            txtLicPlate.setClickable(true);\r\n\r\n                            if (!Existe_Lp){\r\n                                execws(6);\r\n                            }else{\r\n                                pNumeroLP = pLp;\r\n\r\n                                //#CKFK 20201229 Agregué esta condición de que si la barra tiene información se coloca eso como LP\r\n                                if (!txtNoLP.getText().toString().isEmpty()){\r\n                                    txtLicPlate.setText(txtNoLP.getText().toString().replace(\"$\",\"\"));\r\n                                }else{\r\n                                    txtLicPlate.setText(pNumeroLP);\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    } else if (!bePresentacion.EsPallet || chkPaletizar.isChecked()) {\r\n\r\n                        if (Cant_Recibida==0){\r\n                            if (pIndexStock<0){\r\n                                if (!Existe_Lp){\r\n                                    execws(6);\r\n                                }else{\r\n                                    pNumeroLP = pLp;\r\n\r\n                                    //#CKFK 20201229 Agregué esta condición de que si la barra tiene información se coloca eso como LP\r\n                                    if (!txtNoLP.getText().toString().isEmpty()){\r\n                                        txtLicPlate.setText(txtNoLP.getText().toString().replace(\"$\",\"\"));\r\n                                    }else{\r\n                                        txtLicPlate.setText(pNumeroLP);\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        }else if(Cant_Recibida_Actual>bePresentacion.Factor){\r\n                            if (pIndexStock<0){\r\n                                execws(7);\r\n                            }\r\n\r\n                        }\r\n                    }else{\r\n                        lblLicPlate.setVisibility(View.GONE);\r\n                        txtLicPlate.setFocusable(false);\r\n                        txtLicPlate.setFocusableInTouchMode(false);\r\n                        txtLicPlate.setClickable(false);\r\n                        txtLicPlate.setVisibility(View.GONE);\r\n                    }\r\n\r\n                }\r\n\r\n            }else{\r\n                lblLicPlate.setVisibility(View.GONE);\r\n                txtLicPlate.setFocusable(false);\r\n                txtLicPlate.setFocusableInTouchMode(false);\r\n                txtLicPlate.setClickable(false);\r\n                txtLicPlate.setVisibility(View.GONE);\r\n            }\r\n\r\n            if (BeProducto.Fechamanufactura && BeProducto.Materia_prima){\r\n                lblFManufact.setVisibility(View.VISIBLE);\r\n                txtFechaManu.setVisibility(View.VISIBLE);\r\n\r\n            }else{\r\n                lblFManufact.setVisibility(View.GONE);\r\n                txtFechaManu.setVisibility(View.GONE);\r\n            }\r\n\r\n            txtAnada.setText(\"0\");\r\n\r\n            if (!BeProducto.Capturar_aniada){\r\n                lblAnada.setVisibility(View.GONE);\r\n                txtAnada.setVisibility(View.GONE);\r\n            }else{\r\n                lblAnada.setVisibility(View.VISIBLE);\r\n                txtAnada.setVisibility(View.VISIBLE);\r\n            }\r\n\r\n            //ValidaPeso\r\n            Valida_Peso();\r\n\r\n            //ValidaTemperatura\r\n            Valida_Temperatura();\r\n\r\n            Valida_Perfil_Serializado();\r\n\r\n            Carga_Parametros_Personalizados();\r\n\r\n            final Calendar c = Calendar.getInstance();\r\n            year = c.get(Calendar.YEAR);\r\n            month = c.get(Calendar.MONTH)+1;\r\n            day = c.get(Calendar.DAY_OF_MONTH);\r\n\r\n            txtFechaIng.setText(new StringBuilder()\r\n                    // Month is 0 based, just add 1\r\n                    .append(day).append(\"-\").append(month).append(\"-\")\r\n                    .append(year).append(\" \"));\r\n\r\n            if  (pIndexStock>=0){\r\n\r\n                txtLicPlate.setText(pListBeStockRec.items.get(pIndexStock).Lic_plate);\r\n\r\n                pNumeroLP = pListBeStockRec.items.get(pIndexStock).Lic_plate;\r\n\r\n                if (pListBeStockRec.items.get(pIndexStock).Fecha_Ingreso!=null){\r\n                    if (pListBeStockRec.items.get(pIndexStock).Fecha_Ingreso.isEmpty()){\r\n                        txtFechaIng.setText(new StringBuilder()\r\n                                // Month is 0 based, just add 1\r\n                                .append(day).append(\"-\").append(month).append(\"-\")\r\n                                .append(year).append(\" \"));\r\n                    }else{\r\n                        txtFechaIng.setText(pListBeStockRec.items.get(pIndexStock).Fecha_Ingreso);\r\n                    }\r\n                }\r\n\r\n                if (BeProducto.Fechamanufactura && BeProducto.Materia_prima){\r\n                    txtFechaManu.setText(pListBeStockRec.items.get(pIndexStock).Fecha_Manufactura);\r\n                }\r\n\r\n                txtSerial.setText(pListBeStockRec.items.get(pIndexStock).Serial);\r\n                txtAnada.setText(pListBeStockRec.items.get(pIndexStock).Anada+\"\");\r\n\r\n                if (BeProducto.Peso_recepcion){\r\n                    txtPesoReal.setText(mu.round(pListBeStockRec.items.get(pIndexStock).Peso, gl.gCantDecCalculo)+\"\");\r\n                }else{\r\n                    txtPesoReal.setText(mu.round(0,  gl.gCantDecCalculo)+\"\");\r\n                }\r\n\r\n                if (BeProducto.Temperatura_recepcion){\r\n                txtTempReal.setText(mu.round(pListBeStockRec.items.get(pIndexStock).Temperatura,  gl.gCantDecCalculo)+\"\");\r\n                }\r\n\r\n            }\r\n\r\n            Button btnIr = dialog.findViewById(R.id.btnIr);\r\n            Button btnBack = dialog.findViewById(R.id.btnBack);\r\n\r\n            btnIr.setOnClickListener(v -> BotonIrGuardarParametros());\r\n\r\n            btnBack.setOnClickListener(v -> SalirPantallaParametros());\r\n\r\n            dialog.show();\r\n\r\n            mu.msgbox(MensajeParam);\r\n\r\n        }catch (Exception e){\r\n        mu.msgbox(\"MuestraParametros1: \"+ e.getMessage());\r\n        }\r\n    }\r\n\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    private void setEstiba(){\r\n\r\n        try{\r\n            final AlertDialog.Builder alert = new AlertDialog.Builder(this);\r\n\r\n            alert.setTitle(\"Definición de Estiba\");\r\n            alert.setMessage(\"Total de cajas: \" + (CajasPorCama * CamasPorTarima));\r\n\r\n            alert.setIcon(R.drawable.palet);\r\n\r\n            final EditText txtCamasxtarima = new EditText(this);\r\n            final EditText txtCajasxcama = new EditText(this);\r\n            final TextView lblCamasxtarima = new TextView(this);\r\n            final TextView lblCajasxcama = new TextView(this);\r\n            final LinearLayout llContent = new LinearLayout(this);\r\n            final TableRow trCajasxcama = new TableRow(this);\r\n            final TableRow trCamasxtarima = new TableRow(this);\r\n            llContent.setOrientation(LinearLayout.VERTICAL);\r\n\r\n            trCamasxtarima.setLayoutParams(new TableRow.LayoutParams(TableRow.LayoutParams.MATCH_PARENT,\r\n                    TableRow.LayoutParams.WRAP_CONTENT));\r\n            trCajasxcama.setLayoutParams(new TableRow.LayoutParams(TableRow.LayoutParams.MATCH_PARENT,\r\n                    TableRow.LayoutParams.WRAP_CONTENT));\r\n\r\n            final float scale = this.getResources().getDisplayMetrics().density;\r\n\r\n            lblCamasxtarima.setLayoutParams(new TableRow.LayoutParams(0, TableRow.LayoutParams.WRAP_CONTENT,(int) (1 * scale + 0.5f)));\r\n            txtCamasxtarima.setLayoutParams(new TableRow.LayoutParams(0, TableRow.LayoutParams.WRAP_CONTENT,(int) (1 * scale + 0.5f)));\r\n\r\n            lblCajasxcama.setLayoutParams(new TableRow.LayoutParams(0, TableRow.LayoutParams.WRAP_CONTENT,(int) (1 * scale + 0.5f)));\r\n            txtCajasxcama.setLayoutParams(new TableRow.LayoutParams(0, TableRow.LayoutParams.WRAP_CONTENT,(int) (1 * scale + 0.5f)));\r\n\r\n            txtCamasxtarima.setText(\"\" + CamasPorTarima);\r\n            txtCajasxcama.setText(\"\" + CajasPorCama);\r\n\r\n            txtCamasxtarima.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtCajasxcama.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n\r\n            lblCajasxcama.setTextSize(16);\r\n            lblCajasxcama.setText(\"Cajas por Cama\");\r\n\r\n            lblCamasxtarima.setTextSize(16);\r\n            lblCamasxtarima.setText(\"Camas por Tarima\");\r\n\r\n            trCamasxtarima.addView(lblCamasxtarima);\r\n            trCamasxtarima.addView(txtCamasxtarima);\r\n\r\n            trCajasxcama.addView(lblCajasxcama);\r\n            trCajasxcama.addView(txtCajasxcama);\r\n\r\n            llContent.addView(trCamasxtarima);\r\n            llContent.addView(trCajasxcama);\r\n\r\n            alert.setView(llContent);\r\n\r\n            ViewGroup.MarginLayoutParams marginParams = (ViewGroup.MarginLayoutParams) lblCamasxtarima.getLayoutParams();\r\n            marginParams.setMargins(10,\r\n                    marginParams.topMargin,\r\n                    marginParams.rightMargin,\r\n                    marginParams.bottomMargin);\r\n\r\n            ViewGroup.MarginLayoutParams mrglCamasxtarima = (ViewGroup.MarginLayoutParams) lblCamasxtarima.getLayoutParams();\r\n            mrglCamasxtarima.setMargins(10,\r\n                    marginParams.topMargin,\r\n                    marginParams.rightMargin,\r\n                    marginParams.bottomMargin);\r\n\r\n            ViewGroup.MarginLayoutParams mrgtCamasxtarima = (ViewGroup.MarginLayoutParams) txtCamasxtarima.getLayoutParams();\r\n            mrgtCamasxtarima.setMargins(10,\r\n                    marginParams.topMargin,\r\n                    marginParams.rightMargin,\r\n                    marginParams.bottomMargin);\r\n\r\n            //txtCamasxtarima.setWidth(100);\r\n            txtCamasxtarima.setSelectAllOnFocus(true);\r\n\r\n            ViewGroup.MarginLayoutParams mrglCajasxcama = (ViewGroup.MarginLayoutParams) lblCajasxcama.getLayoutParams();\r\n            mrglCajasxcama.setMargins(10,\r\n                    marginParams.topMargin,\r\n                    marginParams.rightMargin,\r\n                    marginParams.bottomMargin);\r\n\r\n            ViewGroup.MarginLayoutParams mrgtCajasxcama = (ViewGroup.MarginLayoutParams) txtCajasxcama.getLayoutParams();\r\n            mrgtCajasxcama.setMargins(10,\r\n                    marginParams.topMargin,\r\n                    marginParams.rightMargin,\r\n                    marginParams.bottomMargin);\r\n\r\n            //txtCajasxcama.setWidth(100);\r\n            txtCajasxcama.setSelectAllOnFocus(true);\r\n\r\n            alert.setNegativeButton(\"Cancelar\", (dialog, whichButton) -> {\r\n                chkEstiba.setChecked(false);\r\n\r\n                if (CajasPorCama > 0 && CamasPorTarima > 0){\r\n                    tblEstiba.setVisibility(View.VISIBLE);\r\n                    lblEstiba.setText(\"Camas por Tarima: \" + CamasPorTarima + \" Cajas por cama: \" +  CajasPorCama);\r\n                }else{\r\n                    tblEstiba.setVisibility(View.GONE);\r\n                    lblEstiba.setText(\"\");\r\n                }\r\n\r\n            });\r\n\r\n            alert.setPositiveButton(\"Guardar\", (dialog, whichButton) -> {\r\n\r\n                CamasPorTarima=Double.parseDouble(txtCamasxtarima.getText().toString());\r\n                CajasPorCama=Double.parseDouble(txtCajasxcama.getText().toString());\r\n                alert.setMessage(\"Total de cajas: \" + (CajasPorCama * CamasPorTarima));\r\n\r\n                if (CajasPorCama > 0 && CamasPorTarima > 0){\r\n                    tblEstiba.setVisibility(View.VISIBLE);\r\n                    lblEstiba.setText(\"Camas por Tarima: \" + CamasPorTarima + \" Cajas por cama: \" +  CajasPorCama);\r\n                }else{\r\n                    tblEstiba.setVisibility(View.GONE);\r\n                    lblEstiba.setText(\"\");\r\n                }\r\n\r\n                if(CamasPorTarima==0 || CajasPorCama==0){\r\n                   toastlong(\"Debe ingresar la definición de estiba\");\r\n                   llContent.removeAllViews();\r\n                   setEstiba();\r\n                }else{\r\n                    llContent.removeAllViews();\r\n                }\r\n            });\r\n\r\n            final AlertDialog dialog = alert.create();\r\n            dialog.show();\r\n\r\n            txtCamasxtarima.requestFocus();\r\n            showkeyb();\r\n        }catch (Exception e){\r\n            addlog(Objects.requireNonNull(new Object() {\r\n            }.getClass().getEnclosingMethod()).getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    //View view\r\n    public void BotonIrGuardarParametros(){\r\n        GuardarParametros();\r\n    }\r\n\r\n    //View view\r\n    public void SalirPantallaParametros(){\r\n        dialog.cancel();\r\n    }\r\n\r\n    private  void Valida_Perfil_Serializado(){\r\n\r\n        try{\r\n\r\n            if (BeProducto.Serializado){\r\n                switch (BeProducto.IdPerfilSerializado){\r\n\r\n                    case 1:\r\n                        lblSerialP.setVisibility(View.GONE);\r\n                        txtSerial.setVisibility(View.GONE);\r\n                        lblSerialIni.setVisibility(View.GONE);\r\n                        txtSerieIni.setVisibility(View.GONE);\r\n                        lblSerialFin.setVisibility(View.GONE);\r\n                        txtSerieFin.setVisibility(View.GONE);\r\n                        break;\r\n                    case 2:\r\n                        lblSerialP.setVisibility(View.GONE);\r\n                        txtSerial.setVisibility(View.GONE);\r\n                        break;\r\n                    case 3:\r\n                        txtSerial.setText(BeProducto.Noserie);\r\n                    default:\r\n                        lblSerialP.setVisibility(View.GONE);\r\n                        txtSerial.setVisibility(View.GONE);\r\n                        lblSerialIni.setVisibility(View.GONE);\r\n                        txtSerieIni.setVisibility(View.GONE);\r\n                        lblSerialFin.setVisibility(View.GONE);\r\n                        txtSerieFin.setVisibility(View.GONE);\r\n                        break;\r\n                }\r\n            }else{\r\n                lblSerialP.setVisibility(View.GONE);\r\n                txtSerial.setVisibility(View.GONE);\r\n                lblSerialIni.setVisibility(View.GONE);\r\n                txtSerieIni.setVisibility(View.GONE);\r\n                lblSerialFin.setVisibility(View.GONE);\r\n                txtSerieFin.setVisibility(View.GONE);\r\n            }\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Valida_Perfil_Serializado\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Valida_Temperatura(){\r\n\r\n        try{\r\n\r\n            if (BeProducto.Temperatura_recepcion){\r\n                txtTempEsta.setText( mu.round(BeProducto.Temperatura_referencia,  gl.gCantDecCalculo)+\"\");\r\n            }else{\r\n                lblTempTit.setVisibility(View.GONE);\r\n                lblTempEsta.setVisibility(View.GONE);\r\n                lblTempReal.setVisibility(View.GONE);\r\n                txtTempEsta.setVisibility(View.GONE);\r\n                txtTempReal.setVisibility(View.GONE);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Valida_Temperatura: \"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Valida_Peso(){\r\n\r\n        try{\r\n\r\n            if (BeProducto.Peso_recepcion){\r\n\r\n                txtPesoEsta.setText(mu.round(BeProducto.Peso_referencia,  gl.gCantDecCalculo)+\"\");\r\n\r\n                if (!txtPesoUnitario.getText().toString().isEmpty() && !txtPesoUnitario.getText().toString().equals(\"\")){\r\n                    txtPesoReal.setText(txtPesoUnitario.getText()+\"\");\r\n                }else{\r\n                    throw new Exception(\"Debe ingresar el peso del producto\");\r\n                }\r\n\r\n                if (BeProducto.Presentaciones.items!=null){\r\n\r\n                    PresList.clear();\r\n\r\n                    for (int i = 0; i <BeProducto.Presentaciones.items.size(); i++) {\r\n                        PresList.add(BeProducto.Presentaciones.items.get(i).Nombre);\r\n                    }\r\n\r\n                    ArrayAdapter<String> dataAdapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, PresList);\r\n                    dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                    cmbPresParams.setAdapter(dataAdapter);\r\n\r\n                    if (PresList.size()>0) cmbPresParams.setSelection(0);\r\n\r\n                }\r\n\r\n                cmbPresParams.setFocusable(false);\r\n                cmbPresParams.setFocusableInTouchMode(false);\r\n                cmbPresParams.setClickable(false);\r\n\r\n                if (IdPreseSelect!= -1){\r\n                    List AuxPresParam = stream(BeProducto.Presentaciones.items).select(c->c.IdPresentacion).toList();\r\n                    int IndexPresentacion = AuxPresParam.indexOf(IdPreseSelect);\r\n                    cmbPresParams.setSelection(IndexPresentacion);\r\n                }\r\n\r\n            }else{\r\n                lblPresParam.setVisibility(View.GONE);\r\n                cmbPresParams.setVisibility(View.GONE);\r\n                lblPesoTit.setVisibility(View.GONE);\r\n                lblPesoEsta.setVisibility(View.GONE);\r\n                txtPesoEsta.setVisibility(View.GONE);\r\n                lblPesoReal.setVisibility(View.GONE);\r\n                txtPesoReal.setVisibility(View.GONE);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Valida Peso: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void GuardarParametros(){\r\n\r\n        boolean Parametros_Ingresados;\r\n        MensajeParam=\"\";\r\n\r\n        try{\r\n\r\n            Parametros_Ingresados =Parametros_Obligatorios_Ingresados();\r\n\r\n            if (!Parametros_Ingresados){\r\n                mu.msgbox(\"¿Está seguro de que no va a ingresar los parámetros obligatorios del producto?\");\r\n\r\n                Parametros_Ingresados = true;\r\n            }\r\n\r\n            if (BeProducto.getControl_peso()){\r\n                Peso_Correcto();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"GuardarParamaetros: \"+ e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void Carga_Parametros_Personalizados(){\r\n\r\n        boolean Carga_Param=false;\r\n\r\n        try{\r\n\r\n            if (pIndexParam==-1){\r\n\r\n                if (pListBEProductoParametro!=null){\r\n\r\n                    if (pListBEProductoParametro.items!=null){\r\n                    }else{\r\n                        execws(10);\r\n\r\n                    }\r\n\r\n               }\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Carga_Parametros_Personalizados:\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void Temperatura_Correcta(){\r\n\r\n        try{\r\n\r\n            if (BeProducto.Temperatura_recepcion){\r\n\r\n                if (BeProducto.Temperatura_referencia>0){\r\n\r\n                    if (txtTempReal.getText().toString().isEmpty()){\r\n                        MensajeParam+=\"Debe de ingresar la temperatura \\n\";\r\n                        return;\r\n                    }else if (Double.parseDouble(txtTempReal.getText().toString())<=0){\r\n                        MensajeParam+=\"La temperatura debe ser mayor a 0 \\n\";\r\n                        return;\r\n                    }\r\n\r\n                }\r\n\r\n                double PorcentajeToleranciaTemp = mu.round(BeProducto.Temperatura_referencia * BeProducto.Temperatura_tolerancia,  gl.gCantDecCalculo) / 100;\r\n                double TemperaturaMax  = mu.round(BeProducto.Temperatura_referencia + PorcentajeToleranciaTemp,  gl.gCantDecCalculo);\r\n                double TemperaturaMin  = mu.round(BeProducto.Temperatura_referencia - PorcentajeToleranciaTemp,  gl.gCantDecCalculo);\r\n                double vTemp=0;\r\n                if (!txtTempReal.getText().toString().isEmpty()){\r\n                    vTemp = Double.parseDouble(txtTempReal.getText().toString());\r\n                }\r\n                double ValorTemperatura  = mu.round(vTemp,  gl.gCantDecCalculo);\r\n\r\n                if ((ValorTemperatura < TemperaturaMin)||(ValorTemperatura > TemperaturaMax)){\r\n                    msgContinuarTemp(\"La temperatura ingresada es menor a \"+TemperaturaMin + \" o mayor a \"+TemperaturaMax + \"(tolerancia permitida en base a la temperatura estadística). ¿Desea continuar?\");\r\n                    //Correcta =TCorrecta;\r\n                }else {\r\n                    if (BeProducto.Genera_lp){\r\n                        execws(8);\r\n                    }else{\r\n                        PallCorrecto=true;\r\n                        ContinuaValidandoParametros();\r\n                    }\r\n                }\r\n\r\n            }else{\r\n                if (BeProducto.Genera_lp){\r\n                    execws(8);\r\n                }else{\r\n                    PallCorrecto=true;\r\n                    ContinuaValidandoParametros();\r\n                }\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Temperatura_Correcta: \"+ e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void Peso_Correcto(){\r\n\r\n        double val;\r\n\r\n        try{\r\n\r\n            if (BeProducto.Peso_recepcion){\r\n\r\n                val = Double.parseDouble(txtPesoEsta.getText().toString());\r\n\r\n                if (val>0){\r\n\r\n                    if (txtPesoReal.getText().toString().isEmpty()){\r\n                        MensajeParam +=\"Debe ingresar peso \\n\";\r\n                        return;\r\n                    }else if(Double.parseDouble(txtPesoReal.getText().toString())<=0){\r\n                        MensajeParam+=\"El peso debe ser mayor a 0 \\n\";\r\n                        return;\r\n                    }\r\n\r\n                }\r\n\r\n                double PorcentajeToleranciaPeso = (Double.parseDouble(txtPesoEsta.getText().toString()) * (BeProducto.Peso_tolerancia));\r\n                double PesoMaximoReferencia = mu.round( Double.parseDouble(txtPesoEsta.getText().toString()) + PorcentajeToleranciaPeso,  gl.gCantDecCalculo);\r\n                double PesoMinimoReferencia = mu.round(Double.parseDouble(txtPesoEsta.getText().toString()) - PorcentajeToleranciaPeso,  gl.gCantDecCalculo);\r\n                double ValorPeso  = mu.round(Double.parseDouble(txtPesoReal.getText().toString()),  gl.gCantDecCalculo);\r\n\r\n                if (!(ValorPeso >= PesoMinimoReferencia)&&(ValorPeso <= PesoMaximoReferencia)){\r\n                    msgContinuarPeso(\"El peso ingresado es menor que \"+PesoMinimoReferencia +\" o mayor que \"+ PesoMaximoReferencia+\" (tolerancia permitida en base al peso estadístico). ¿Desea continuar?\");\r\n                }else{\r\n                    Temperatura_Correcta();\r\n                }\r\n\r\n\r\n            }else{\r\n                Temperatura_Correcta();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Peso_Correcto: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void ContinuaValidandoParametros(){\r\n\r\n        clsBeStock_rec BeStock_rec  = new clsBeStock_rec();\r\n\r\n        try {\r\n\r\n            if (PallCorrecto){\r\n\r\n                if (pIndexStock==-1){\r\n\r\n                    BeStock_rec  = new clsBeStock_rec();\r\n                    pListBeStockRec.items = new ArrayList<>();\r\n\r\n                    BeStock_rec.IdRecepcionDet = pIdRecepcionDet;\r\n                    //#CKFK 20210322 Modifiqué que se envíe el IdPropietarioBodega de trans_re_det\r\n                    BeStock_rec.IdPropietarioBodega = pIdPropietarioBodega;//gl.gBeRecepcion.PropietarioBodega.IdPropietarioBodega;\r\n                    BeStock_rec.IdProductoBodega = BeProducto.IdProductoBodega;\r\n                    BeStock_rec.IdUnidadMedida = BeProducto.IdUnidadMedidaBasica;\r\n                    if(IdPreseSelect>0){\r\n                        BeStock_rec.Presentacion = new clsBeProducto_Presentacion();\r\n                    }\r\n                    BeStock_rec.IsNew = gl.mode == 1;\r\n\r\n                   pListBeStockRec.items.add(BeStock_rec);\r\n                   pIndexStock = pListBeStockRec.items.size()-1;\r\n\r\n                   if (IdPreseSelect!=-1){\r\n                       if  ((BeProducto.Presentaciones!=null)){\r\n\r\n                           if (BeProducto.Presentaciones.items!=null) {\r\n\r\n                               List AuxLisPres = stream(BeProducto.Presentaciones.items).select(c->c.IdPresentacion).toList();\r\n\r\n                               int IndexPresentacion = AuxLisPres.indexOf(IdPreseSelect);\r\n\r\n                               clsBeProducto_Presentacion bePresentacion;\r\n\r\n                               bePresentacion = BeProducto.Presentaciones.items.get(IndexPresentacion);\r\n\r\n                               BeStock_rec.Presentacion = bePresentacion;\r\n\r\n                               if (BeStock_rec.Presentacion.Imprime_barra){\r\n\r\n                                   clsBeProducto_pallet BeProdPallet = new clsBeProducto_pallet();\r\n                                   //#CKFK 20210322 Modifiqué que se envíe el IdPropietarioBodega de trans_re_det\r\n                                   BeProdPallet.IdPropietarioBodega =  pIdPropietarioBodega;//gl.gBeRecepcion.PropietarioBodega.IdPropietarioBodega;\r\n                                   BeProdPallet  .IdProductoBodega = BeProducto.IdProductoBodega;\r\n                                   BeProdPallet.IdOperadorBodega = gl.OperadorBodega.IdOperadorBodega;\r\n                                   BeProdPallet.IdPresentacion = IdPreseSelect;\r\n                                   BeProdPallet.IdRecepcionDet = pIdRecepcionDet;\r\n                                   BeProdPallet.Impreso = false;\r\n                                   BeProdPallet.IdImpresora = 1;\r\n                                   BeProdPallet.Activo = true;\r\n                                   BeProdPallet.Fecha_ingreso = String.valueOf(du.getFechaActual());\r\n                                   BeProdPallet.Codigo_Barra = txtLicPlate.getText().toString();\r\n                                   BeProdPallet.Codigo_Producto = BeProducto.Codigo;\r\n                                   BeProdPallet.Reimpresiones = 0;\r\n                                   BeProdPallet.Fec_agr =String.valueOf(du.getFechaActual());\r\n                                   BeProdPallet.Fec_mod = String.valueOf(du.getFechaActual());\r\n                                   BeProdPallet.IsNew = true;\r\n\r\n                                   if (pListBeProductoPallet.items == null) {\r\n\r\n                                       pListBeProductoPallet.items = new ArrayList<>();\r\n\r\n                                   }\r\n                                   pListBeProductoPallet.items.add(BeProdPallet);\r\n                                   pIndexProdPallet = pListBeProductoPallet.items.size() - 1;\r\n                               }\r\n\r\n                           }else{\r\n                               BeStock_rec.Presentacion.IdPresentacion = 0;\r\n                           }\r\n\r\n                       }else{\r\n                           BeStock_rec.Presentacion.IdPresentacion = 0;\r\n                       }\r\n                   }else{\r\n                       BeStock_rec.Presentacion.IdPresentacion = 0;\r\n                   }\r\n\r\n\r\n                }//finpIndexStock\r\n\r\n                if (pIndexStock >= 0){\r\n\r\n                    if (BeProducto.IdPerfilSerializado == 1){\r\n                        if (pListBeStockSeRec.items==null){\r\n                            MensajeParam+=\"Ingrese al menos una serie \\n\";\r\n                        }\r\n                    }else if(BeProducto.IdPerfilSerializado == 2){\r\n\r\n                        ObjNS =  new clsBeStock_se_rec();\r\n\r\n                        if (pListBeStockSeRec.items!=null){\r\n                            ObjNS.IdStockSeRec = stream(pListBeStockSeRec.items).max(c->c.IdStockSeRec>0).IdStockSeRec+1;\r\n                        }else{\r\n                            execws(9);\r\n                        }\r\n\r\n                        ObjNS.NoSerie = \"\";\r\n                        ObjNS.NoSerieInicial =txtSerieIni.getText().toString();\r\n                        ObjNS.NoSerieFinal = txtSerieFin.getText().toString();\r\n                        ObjNS.User_agr = gl.IdOperador+\"\";\r\n                        ObjNS.Fec_agr =String.valueOf(du.getFechaActual());\r\n                        ObjNS.User_mod = gl.IdOperador+\"\";\r\n                        ObjNS.Fec_mod = String.valueOf(du.getFechaActual());\r\n                        ObjNS.Activo = true;\r\n                        ObjNS.IsNew = gl.mode == 1;\r\n\r\n                        if (pListBeStockSeRec.items!=null){\r\n                            pListBeStockSeRec.items.add(ObjNS);\r\n                        }else{\r\n                            pListBeStockSeRec.items = new ArrayList<>();\r\n                            pListBeStockSeRec.items.add(ObjNS);\r\n                        }\r\n\r\n                    }else if(BeProducto.IdPerfilSerializado == 3){\r\n                        if (txtSerial.getText().toString().isEmpty()){\r\n                            MensajeParam+=\"Ingrese Serial \\n\";\r\n                        }\r\n                    }else{\r\n\r\n                        if (!txtSerial.getText().toString().isEmpty()){\r\n\r\n                            pListBeStockRec.items.get(pIndexStock).Serial = txtSerial.getText().toString();\r\n\r\n                            if (pListBeStockRec!=null){\r\n\r\n                                List AuxStockRec = stream(pListBeStockRec.items).select(c->c.Serial).toList();\r\n\r\n                                int lIndex;\r\n\r\n                                lIndex = AuxStockRec.indexOf(pListBeStockRec.items.get(pIndexStock).Serial);\r\n\r\n                                if (lIndex>-1){\r\n                                    mu.msgbox(\"El Serial \" +txtSerial.getText().toString() +\" se encuentra ya ingresado\");\r\n                                }\r\n\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    }//TerminaValidacionPerfilSerializado\r\n\r\n                    //#CKFK 20210322 Modifiqué que se envíe el IdPropietarioBodega de trans_re_det\r\n                    assert pListBeStockRec != null;\r\n                    pListBeStockRec.items.get(pIndexStock).IdPropietarioBodega = pIdPropietarioBodega;//gl.gBeRecepcion.PropietarioBodega.IdPropietarioBodega;\r\n                    pListBeStockRec.items.get(pIndexStock).IdProductoBodega = BeProducto.IdProductoBodega;\r\n                    pListBeStockRec.items.get(pIndexStock).Lic_plate = txtLicPlate.getText().toString();\r\n                    pListBeStockRec.items.get(pIndexStock).Fecha_Ingreso = String.valueOf(du.getFechaActual());\r\n\r\n                    if (IdPreseSelectParam>0){\r\n                        pListBeStockRec.items.get(pIndexStock).IdPresentacion = IdPreseSelectParam;\r\n                        pListBeStockRec.items.get(pIndexStock).Presentacion = new clsBeProducto_Presentacion();\r\n                        pListBeStockRec.items.get(pIndexStock).Presentacion.IdPresentacion =IdPreseSelectParam;\r\n                    }else {\r\n                        if (IdPreseSelect>0){\r\n                            pListBeStockRec.items.get(pIndexStock).IdPresentacion = IdPreseSelect;\r\n                            pListBeStockRec.items.get(pIndexStock).Presentacion = new clsBeProducto_Presentacion();\r\n                            pListBeStockRec.items.get(pIndexStock).Presentacion.IdPresentacion =IdPreseSelect;\r\n                        }\r\n                    }\r\n\r\n                    pListBeStockRec.items.get(pIndexStock).Serial = txtSerial.getText().toString();\r\n                    pListBeStockRec.items.get(pIndexStock).Anada = Integer.parseInt(txtAnada.getText().toString());\r\n                    pListBeStockRec.items.get(pIndexStock).Fec_agr = gl.gBeRecepcion.Fecha_recepcion;\r\n                    pListBeStockRec.items.get(pIndexStock).User_agr = gl.IdOperador+\"\";\r\n                    pListBeStockRec.items.get(pIndexStock).Fec_mod = gl.gBeRecepcion.Fecha_recepcion;\r\n                    pListBeStockRec.items.get(pIndexStock).User_mod = gl.IdOperador+\"\";\r\n                    pListBeStockRec.items.get(pIndexStock).IsNew = true;\r\n                    pListBeStockRec.items.get(pIndexStock).Activo = true;\r\n                    pListBeStockRec.items.get(pIndexStock).IdRecepcionDet = pIdRecepcionDet;\r\n\r\n                    if (BeProducto.Peso_recepcion){\r\n                        pListBeStockRec.items.get(pIndexStock).Peso = Double.parseDouble(txtPesoReal.getText().toString());\r\n                    }else{\r\n                        pListBeStockRec.items.get(pIndexStock).Peso = 0.0;\r\n                    }\r\n\r\n                    if (BeProducto.Temperatura_recepcion){\r\n                        pListBeStockRec.items.get(pIndexStock).Temperatura = Double.parseDouble(txtTempReal.getText().toString());\r\n                    }else{\r\n                        pListBeStockRec.items.get(pIndexStock).Temperatura = 0.0;\r\n                    }\r\n\r\n                    pListBeStockRec.items.get(pIndexStock).Regularizado =false;\r\n                    pListBeStockRec.items.get(pIndexStock).Fecha_regularizacion =du.convierteFecha(\"01-01-1900\");\r\n\r\n                    if (pListBeStockSeRec.items!=null){\r\n                        for (clsBeStock_se_rec bo: pListBeStockSeRec.items){\r\n                            bo.IdStockRec = pListBeStockRec.items.get(pIndexStock).IdStockRec;\r\n                        }\r\n                    }\r\n\r\n                    if (gl.mode==2){\r\n\r\n                        if (plistBeReDetParametros.items!=null){\r\n\r\n                            for (clsBeTrans_re_det_parametros Obj: plistBeReDetParametros.items){\r\n\r\n                                Obj.IdRecepcionDet = pIdRecepcionDet;\r\n                                Obj.IdRecepcionEnc = gl.gIdRecepcionEnc;\r\n                                Obj.ProductoParametro.IdProductoParametro = Obj.IdProductoParametro;\r\n                                Obj.User_agr = gl.IdOperador+\"\";\r\n                                Obj.Fec_agr = String.valueOf(du.getFechaActual());\r\n                                Obj.IsNew = true;\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    }else{\r\n\r\n                        if (pListBEProductoParametro!=null){\r\n\r\n                            if (pListBEProductoParametro.items!=null){\r\n\r\n                                for (clsBeProducto_parametros obj: pListBEProductoParametro.items){\r\n\r\n                                    clsBeTrans_re_det_parametros ObjDP = new clsBeTrans_re_det_parametros();\r\n\r\n                                    ObjDP.IdRecepcionDet = pIdRecepcionDet;\r\n                                    ObjDP.IdProductoParametro = obj.IdProductoParametro;\r\n\r\n                                    ObjDP.IdParametroDet = 0;\r\n                                    ObjDP.IdRecepcionEnc = gl.gIdRecepcionEnc;\r\n                                    ObjDP.ProductoParametro = obj;\r\n                                    ObjDP.TipoParametro = obj.TipoParametro;\r\n                                    ObjDP.Valor_fecha = obj.Valor_fecha;\r\n                                    ObjDP.Valor_texto = obj.Valor_texto;\r\n                                    ObjDP.Valor_numerico = obj.Valor_numerico;\r\n                                    ObjDP.Valor_logico = obj.Valor_logico;\r\n                                    ObjDP.Valor_Unico = obj.Valor_Unico;\r\n                                    ObjDP.User_agr = gl.IdOperador+\"\";\r\n                                    ObjDP.Fec_agr = String.valueOf(du.getFechaActual());\r\n                                    ObjDP.IsNew = true;\r\n\r\n                                    if(gl.mode==1){\r\n                                        plistBeReDetParametros.items.add(ObjDP);\r\n                                    }\r\n\r\n                                }\r\n\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                    if (pListBeStockRec.items.get(pIndexStock).Presentacion!=null){\r\n\r\n                        if (pListBeStockRec.items.get(pIndexStock).Presentacion.IdPresentacion!=-1){\r\n\r\n                            clsBeProducto_Presentacion bePresentacion;\r\n\r\n                            bePresentacion = pListBeStockRec.items.get(pIndexStock).Presentacion;\r\n\r\n                            BeStock_rec.Presentacion = bePresentacion;\r\n\r\n                            if (BeStock_rec.Presentacion.Imprime_barra&&BeStock_rec.Presentacion.EsPallet){\r\n\r\n                                //#CKFK 20210322 Modifiqué que se envíe el IdPropietarioBodega de trans_re_det\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).IdPropietarioBodega=pIdPropietarioBodega;//gl.gBeRecepcion.PropietarioBodega.IdPropietarioBodega;\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).IdProductoBodega = BeProducto.IdProductoBodega;\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).IdOperadorBodega = 0;\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).IdPresentacion = IdPreseSelectParam;\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).IdRecepcionDet = pIdRecepcionDet;\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).Impreso = false;\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).IdImpresora = 1;\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).Activo = true;\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).Fecha_ingreso = String.valueOf(du.getFechaActual());\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).Codigo_Barra = txtLicPlate.getText().toString();\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).Reimpresiones = 0;\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).Fec_agr = String.valueOf(du.getFechaActual());\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).Fec_mod = String.valueOf(du.getFechaActual());\r\n\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    dialog.cancel();\r\n                    Mostro_Propiedades = true;\r\n                    Guardar_Recepcion_Nueva();\r\n\r\n                }else{\r\n\r\n                    ObjS = new clsBeStock_rec();\r\n\r\n                    if (BeProducto.IdPerfilSerializado == 1){\r\n                        MensajeParam+=\" Ingrese al menos una serie \\n\";\r\n                        return;\r\n                    }else if(BeProducto.IdPerfilSerializado == 2){\r\n\r\n                        ObjNS =new clsBeStock_se_rec();\r\n\r\n                        if (pListBeStockSeRec.items!=null){\r\n                            ObjNS.IdStockSeRec = stream(pListBeStockSeRec.items).max(c->c.IdStockSeRec>0).IdStockSeRec+1; //pListBeStockSeRec.Max(Function(b) b.IdStockSeRec) + 1\r\n                            ValidaParametrosDespuesSeRec();\r\n                        }else{\r\n                            execws(9);\r\n                        }\r\n\r\n                    }else if(BeProducto.IdPerfilSerializado == 3){\r\n\r\n                        if (txtSerial.getText().toString().isEmpty()){\r\n                            MensajeParam+=\"Ingrese serial \\n\";\r\n                            return;\r\n                        }\r\n\r\n                    }else{\r\n\r\n                        if (!txtSerial.getText().toString().isEmpty()){\r\n\r\n                            ObjS.Serial = txtSerial.getText().toString();\r\n\r\n                            if (pListBeStockRec.items!=null){\r\n\r\n                                List AuxListSerial = stream(pListBeStockRec.items).select(c->c.Serial).toList();\r\n\r\n                                int lIndex;\r\n\r\n                                lIndex = AuxListSerial.indexOf( ObjS.Serial );\r\n\r\n                                if (lIndex>-1){\r\n                                    MensajeParam+=\"El Serial \"+ txtSerial.getText().toString()+\" se encuentra ya ingresado\\n\";\r\n                                    return;\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    UltimoEspacioDeValidar();\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"ContinuaValidandoParametros:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void UltimoEspacioDeValidar(){\r\n        try{\r\n            if (pListBeStockRec!=null){\r\n                if (pListBeStockRec.items!=null){\r\n                    ObjS.IdStockRec = stream(pListBeStockRec.items).max(c->c.IdStockRec>0).IdStockRec+1; // pListBeStockRec.Max(Function(b) b.IdStockRec) + 1\r\n                    SigueValidandoParametros();\r\n                }else{\r\n                    execws(11);\r\n                }\r\n            }else{\r\n                execws(11);\r\n            }\r\n        }catch (Exception e){\r\n            mu.msgbox(\"UltimoEspacioDeValidar\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void ValidaParametrosDespuesSeRec(){\r\n\r\n        try{\r\n\r\n            if(BeProducto.IdPerfilSerializado == 2){\r\n\r\n                ObjNS.NoSerie = \"\";\r\n                ObjNS.NoSerieInicial = txtSerieIni.getText().toString();\r\n                ObjNS.NoSerieFinal = txtSerieFin.getText().toString();\r\n                ObjNS.User_agr = gl.IdOperador+\"\";\r\n                ObjNS.Fec_agr = String.valueOf(du.getFechaActual());\r\n                ObjNS.User_mod = gl.IdOperador+\"\";\r\n                ObjNS.Fec_mod = String.valueOf(du.getFechaActual());\r\n                ObjNS.Activo = true;\r\n                ObjNS.IsNew = true;\r\n\r\n                pListBeStockSeRec.items.add(ObjNS);\r\n\r\n            }\r\n\r\n            UltimoEspacioDeValidar();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"ValidaParametrosDespuesSeRec:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void SigueValidandoParametros(){\r\n\r\n        try{\r\n\r\n            //#CKFK 20210322 Modifiqué que se envíe el IdPropietarioBodega de trans_re_det\r\n            ObjS.IdPropietarioBodega = pIdPropietarioBodega;//gl.gBeRecepcion.PropietarioBodega.IdPropietarioBodega;\r\n            ObjS.IdProductoBodega = BeProducto.IdProductoBodega;\r\n\r\n            ObjS.Lic_plate = txtLicPlate.getText().toString();\r\n\r\n            ObjS.Fecha_Ingreso = String.valueOf(du.getFechaActual());\r\n\r\n            if (BeProducto.Fechamanufactura){\r\n                ObjS.Fecha_Manufactura = txtFechaManu.getText().toString();\r\n            }else{\r\n                ObjS.Fecha_Manufactura = du.convierteFecha(\"01-01-1900\");\r\n            }\r\n\r\n            ObjS.Serial = txtSerial.getText().toString();\r\n            ObjS.Anada = Integer.parseInt(txtAnada.getText().toString());\r\n            ObjS.Fec_agr = String.valueOf(du.getFechaActual());\r\n            ObjS.User_agr = gl.IdOperador+\"\";\r\n            ObjS.Fec_mod = String.valueOf(du.getFechaActual());\r\n            ObjS.User_mod = gl.IdOperador+\"\";\r\n            ObjS.IsNew = true;\r\n\r\n            ObjS.Activo = true;\r\n            ObjS.IdRecepcionDet = pIdRecepcionDet;\r\n\r\n            if (IdPreseSelectParam>0){\r\n                ObjS.IdPresentacion = IdPreseSelectParam;\r\n                ObjS.Presentacion = new clsBeProducto_Presentacion();\r\n                ObjS.Presentacion.IdPresentacion = IdPreseSelectParam;\r\n            }else{\r\n                ObjS.IdPresentacion = IdPreseSelect;\r\n                ObjS.Presentacion = new clsBeProducto_Presentacion();\r\n                ObjS.Presentacion.IdPresentacion = IdPreseSelect;\r\n            }\r\n\r\n            if (BeProducto.Peso_recepcion){\r\n                ObjS.Peso = Double.parseDouble(txtPesoReal.getText().toString());\r\n            }else{\r\n                ObjS.Peso = 0.0;\r\n            }\r\n\r\n            if (BeProducto.Temperatura_recepcion){\r\n                ObjS.Temperatura = Double.parseDouble(txtTempReal.getText().toString());\r\n            }else{\r\n                ObjS.Temperatura = 0.0;\r\n            }\r\n\r\n            ObjS.Regularizado = false;\r\n            ObjS.Fecha_regularizacion = \"\";\r\n\r\n            pListBeStockRec.items.add(ObjS);\r\n\r\n            if (pListBeStockSeRec.items!=null){\r\n                for (clsBeStock_se_rec bo:pListBeStockSeRec.items){\r\n                    bo.IdStockRec = ObjS.IdStockRec;\r\n                }\r\n            }\r\n\r\n            for (clsBeProducto_parametros Obj: pListBEProductoParametro.items){\r\n\r\n                clsBeTrans_re_det_parametros ObjDP = new clsBeTrans_re_det_parametros();\r\n\r\n                ObjDP.IdRecepcionDet = pIdRecepcionDet;\r\n                ObjDP.IdProductoParametro = Obj.IdProductoParametro;\r\n                ObjDP.IdParametroDet = 0;\r\n                ObjDP.IdRecepcionEnc = gl.gIdRecepcionEnc;\r\n                ObjDP.ProductoParametro = Obj;\r\n                ObjDP.TipoParametro = Obj.TipoParametro;\r\n                ObjDP.Valor_fecha = Obj.Valor_fecha;\r\n                ObjDP.Valor_texto = Obj.Valor_texto;\r\n                ObjDP.Valor_numerico = Obj.Valor_numerico;\r\n                ObjDP.Valor_logico = Obj.Valor_logico;\r\n                ObjDP.Valor_Unico = Obj.Valor_Unico;\r\n                ObjDP.User_agr = gl.IdOperador+\"\";\r\n                ObjDP.Fec_agr = String.valueOf(du.getFechaActual());\r\n                ObjDP.IsNew = true;\r\n\r\n                if (Obj.IsNew){\r\n                    plistBeReDetParametros.items.add(ObjDP);\r\n                }\r\n\r\n            }\r\n\r\n            dialog.cancel();\r\n            Mostro_Propiedades = true;\r\n            Guardar_Recepcion_Nueva();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"SigueValidandoParametros:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgContinuarTemp(String msg) {\r\n\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", (dialog12, which) -> {\r\n                if (BeProducto.Genera_lp){\r\n                    execws(8);\r\n                }else{\r\n                    PallCorrecto=true;\r\n                    ContinuaValidandoParametros();\r\n                }\r\n\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", (dialog1, which) -> {\r\n            });\r\n\r\n            dialog.show();\r\n            dialog.wait();\r\n\r\n        }catch (Exception e){\r\n            addlog(Objects.requireNonNull(new Object() {\r\n            }.getClass().getEnclosingMethod()).getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void msgContinuarPeso(String msg) {\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(\"¿\" + msg + \"?\");\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", (dialog12, which) -> Temperatura_Correcta());\r\n\r\n            dialog.setNegativeButton(\"No\", (dialog1, which) -> {\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(Objects.requireNonNull(new Object() {\r\n            }.getClass().getEnclosingMethod()).getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    public boolean Parametros_Obligatorios_Ingresados() {\r\n\r\n        try{\r\n\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Parametros_Obligatorios_Ingresados: \"+e.getMessage());\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private void Mostrar_Propiedades_Parametros(){\r\n\r\n        try{\r\n\r\n            if (!Mostro_Propiedades){\r\n                execws(5);\r\n            }else{\r\n                Guardar_Recepcion_Nueva();\r\n            }\r\n\r\n            Mostrar_Propiedades_Parametros = false;\r\n\r\n        }catch (Exception e){\r\n\r\n        }\r\n\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region CargaProducto\r\n    private void Procesa_Barra_Producto(){\r\n\r\n        try{\r\n\r\n            pLp = \"\";\r\n\r\n            if (!txtNoLP.getText().toString().isEmpty()){\r\n\r\n               /* String vStarWithParameter = \"$\";\r\n\r\n                if (gBeConfiguracionBarraPallet!=null){\r\n                    if (!gBeConfiguracionBarraPallet.IdentificadorInicio.isEmpty()){\r\n                        vStarWithParameter = gBeConfiguracionBarraPallet.IdentificadorInicio;\r\n                    }\r\n                }*/\r\n\r\n                /*if (txtBarra.getText().toString().startsWith(\"$\") |\r\n                        txtBarra.getText().toString().startsWith(\"(01)\") |\r\n                        txtBarra.getText().toString().startsWith(vStarWithParameter)){*/\r\n\r\n                    //int vLengthBarra  = txtBarra.getText().toString().length();\r\n\r\n                    pLp = txtNoLP.getText().toString().replace(\"$\", \"\");\r\n\r\n                //Llama al método del WS Existe_Lp\r\n                    execws(24);\r\n                //}\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Procesa_Barra_Producto: \"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Load(){\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Cargando valores de tarea\");\r\n\r\n            if (gl.gselitem != null) {\r\n\r\n                Escaneo_Pallet = gl.gEscaneo_Pallet;\r\n\r\n                BeProducto.IdProductoBodega = BeOcDet.IdProductoBodega;\r\n                pIdOrdenCompraDet= BeOcDet.IdOrdenCompraDet;\r\n                pIdOrdenCompraEnc = BeOcDet.IdOrdenCompraEnc;\r\n                pLineaOC = BeOcDet.No_Linea;\r\n\r\n                if (BeProducto.getControl_vencimiento()){\r\n\r\n                    tblVence.setVisibility(View.VISIBLE);\r\n                    cmbVence.setVisibility(View.GONE);\r\n                    cmbVenceRec.setVisibility(View.VISIBLE);\r\n                    imgDate.setVisibility(View.VISIBLE);\r\n\r\n                    if (BeOcDet!=null) {\r\n\r\n                        if (gl.gBeOrdenCompra.DetalleLotes.items != null) {\r\n\r\n                            if (gl.gBeOrdenCompra.DetalleLotes.items.size() > 0) {\r\n\r\n                                cmbVence.setVisibility(View.VISIBLE);\r\n                                cmbVenceRec.setVisibility(View.GONE);\r\n                                imgDate.setVisibility(View.GONE);\r\n                                fillFechaVence();\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                    tblVence.setVisibility(View.GONE);\r\n                }\r\n\r\n                if (BeProducto.getControl_lote()){\r\n\r\n                    cmbLote.setVisibility(View.GONE);\r\n                    tblUbicacion.setVisibility(View.GONE);\r\n\r\n                    txtLoteRec.setVisibility(View.VISIBLE);\r\n\r\n                    if (BeOcDet!=null) {\r\n\r\n                        if (gl.gBeOrdenCompra.DetalleLotes.items != null) {\r\n\r\n                            if (gl.gBeOrdenCompra.DetalleLotes.items.size() > 0) {\r\n\r\n                                cmbLote.setVisibility(View.VISIBLE);\r\n                                txtLoteRec.setVisibility(View.GONE);\r\n                                tblUbicacion.setVisibility(View.VISIBLE);\r\n                                fillLotes();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n               if (Escaneo_Pallet){\r\n\r\n                    BeINavBarraPallet = frm_list_rec_prod.BeINavBarraPallet;\r\n\r\n                    if (frm_list_rec_prod.BeProducto!=null){\r\n                        if (frm_list_rec_prod.BeProducto.IdProducto>0){\r\n                            BeProducto = frm_list_rec_prod.BeProducto;\r\n                            BeProducto.Presentaciones.items = stream(BeProducto.Presentaciones.items).where(c->c.Codigo_barra.equals(BeINavBarraPallet.UM_Producto)).toList();\r\n\r\n                            if (BeProducto.Presentaciones.items.size()>0){\r\n                                BeProducto.Presentacion = BeProducto.Presentaciones.items.get(0);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (gl.mode==1){\r\n                        Carga_Datos_Producto();\r\n                    }else{\r\n                        Carga_Datos_Producto_Existente();\r\n                    }\r\n\r\n                }else{\r\n\r\n                    if (frm_list_rec_prod.BeProducto!=null){\r\n                        if (frm_list_rec_prod.BeProducto.IdProducto>0){\r\n                            BeProducto = frm_list_rec_prod.BeProducto;\r\n                        }\r\n                    }\r\n\r\n                    if (gl.Carga_Producto_x_Pallet){\r\n                        Carga_Datos_Producto_Por_Pallet();\r\n                    }else{\r\n                        txtCantidadRec.requestFocus();\r\n                        if (gl.mode==1){\r\n                            Carga_Datos_Producto();\r\n                        }else{\r\n                            Carga_Datos_Producto_Existente();\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Load:\"+ e.getMessage());\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private void Carga_Datos_Producto_Por_Pallet(){\r\n\r\n        try{\r\n\r\n            if (BeProducto.IdProducto!=0){\r\n\r\n                Mostro_Propiedades = false;\r\n\r\n                plistBeReDetParametros =  new clsBeTrans_re_det_parametrosList();\r\n                pListBeStockSeRec = new clsBeStock_se_recList();\r\n\r\n                if (pListTransRecDet.items!=null){\r\n\r\n                    pIdRecepcionDet = stream(pListTransRecDet.items).max(c->c.IdRecepcionDet>0).IdRecepcionDet+1;\r\n\r\n                    if (gl.TipoOpcion==2){\r\n                        pLineaOC  = stream(pListTransRecDet.items).max(c->c.IdRecepcionDet>0).IdRecepcionDet+1;\r\n                    }else if(pLineaOC==-1){\r\n                        pLineaOC= stream(gl.gBeRecepcion.OrdenCompraRec.OC.DetalleOC.items).max(c->c.IdOrdenCompraDet>0).IdOrdenCompraDet+1;\r\n                    }\r\n\r\n                    if (BeProducto.Presentacion != null){\r\n                        if (BeProducto.Presentacion.Genera_lp_auto) {\r\n                            txtLicPlate.setFocusable(true);\r\n                            txtLicPlate.setFocusableInTouchMode(true);\r\n                            txtLicPlate.setClickable(true);\r\n\r\n                            execws(6);\r\n                        }\r\n                    }\r\n\r\n                }else{\r\n\r\n                    pListTransRecDet.items = new ArrayList<>();\r\n\r\n                    execws(19);\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            mu.msgbox(\"Carga_Datos_Producto_Por_Pallet:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Carga_Datos_Producto(){\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Cargando datos de producto\");\r\n\r\n            if (BeProducto.IdProducto!=0){\r\n\r\n                Mostro_Propiedades = false;\r\n\r\n                plistBeReDetParametros = new clsBeTrans_re_det_parametrosList();\r\n                pListBeStockSeRec = new clsBeStock_se_recList();\r\n                pListBeStockRec = new clsBeStock_recList();\r\n                pListBeProductoPallet = new clsBeProducto_palletList();\r\n                pListTransRecDet = new clsBeTrans_re_detList();\r\n\r\n                if (pListTransRecDet.items!=null){\r\n\r\n                    pIdRecepcionDet = stream(pListTransRecDet.items).max(c->c.IdRecepcionDet>0).IdRecepcionDet+1;\r\n\r\n                    if (gl.TipoOpcion==2){\r\n                        pLineaOC  = stream(pListTransRecDet.items).max(c->c.IdRecepcionDet>0).IdRecepcionDet+1;\r\n                    }else if(pLineaOC==-1){\r\n                        pLineaOC= stream(gl.gBeRecepcion.OrdenCompraRec.OC.DetalleOC.items).max(c->c.IdOrdenCompraDet>0).IdOrdenCompraDet+1;\r\n                    }\r\n\r\n                    if (BeProducto.Presentacion != null){\r\n                        if (BeProducto.Presentacion.Genera_lp_auto) {\r\n                            txtLicPlate.setFocusable(true);\r\n                            txtLicPlate.setFocusableInTouchMode(true);\r\n                            txtLicPlate.setClickable(true);\r\n\r\n                            execws(6);\r\n                        }\r\n                    }\r\n                }else{\r\n                    pListTransRecDet.items = new ArrayList<>();\r\n\r\n                    execws(19);\r\n\r\n                    //Listar_Producto_Presentaciones();\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"CargarDatos: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void Carga_Datos_Producto_Existente(){\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Cargando datos de producto existente\");\r\n\r\n            if (BeProducto.IdProducto!=0){\r\n\r\n                Mostro_Propiedades = false;\r\n\r\n                plistBeReDetParametros = new clsBeTrans_re_det_parametrosList();\r\n                pListBeStockSeRec = new clsBeStock_se_recList();\r\n                pListBeStockRec = new clsBeStock_recList();\r\n                pListBeProductoPallet = new clsBeProducto_palletList();\r\n                pListTransRecDet.items = gl.gListTransRecDet.items;\r\n\r\n                if (pListTransRecDet.items!=null){\r\n\r\n                    pIdRecepcionDet = pListTransRecDet.items.get(0).IdRecepcionDet;\r\n\r\n                    pLineaOC = pListTransRecDet.items.get(0).No_Linea;\r\n\r\n                    execws(23);\r\n\r\n                }else{\r\n                    pListTransRecDet.items = new ArrayList<>();\r\n\r\n                    execws(19);\r\n\r\n                    //Listar_Producto_Presentaciones();\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"CargarDatos_Existentes: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void LlenaDatosFaltantes(){\r\n\r\n        vPresentacion=0;\r\n        CostoOC=0;\r\n        double Factor=0;\r\n        boolean EsPallet=false;\r\n        int Indx=-1;\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Consultando parámetros de producto.\");\r\n\r\n            if (Escaneo_Pallet){\r\n                txtNoLP.setText(BeINavBarraPallet.Codigo_barra);\r\n            }else{\r\n                txtNoLP.setText(Get_Codigo_Barra(gl.CodigoRecepcion));\r\n                txtNoLP.setText(\"\");\r\n            }\r\n\r\n            if(BeProducto.IdProductoBodega>0){\r\n                pIdProductoBodega = BeProducto.IdProductoBodega;\r\n            }\r\n\r\n            lblDatosProd.setText(BeProducto.Codigo + \" - \" + BeProducto.Nombre);\r\n            lblPropPrd.setText(BeProducto.Propietario.Nombre_comercial);\r\n\r\n            if (BeProducto.Control_vencimiento){\r\n\r\n                tblVence.setVisibility(View.VISIBLE);\r\n\r\n                if (!gl.gFechaVenceAnterior.equals(\"\")){\r\n                    cmbVenceRec.setText(gl.gFechaVenceAnterior);\r\n                }\r\n\r\n            }else{\r\n\r\n                tblVence.setVisibility(View.GONE);\r\n            }\r\n\r\n            Valida_Lote();\r\n\r\n            vPresentacion = Get_Presentacion_A_Recibir();\r\n\r\n            if (vPresentacion>0){\r\n\r\n                Factor =Get_Factor_Presentacion(vPresentacion);\r\n\r\n                //#EJC20201008: Da error de NoSuchElementException cuando no encuentra la presentación por el ID,\r\n                //Por eso agregué este try catch así.\r\n\r\n                try {\r\n                    EsPallet = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==vPresentacion).select(c->c.EsPallet).first();\r\n                } catch (NoSuchElementException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n\r\n                if (EsPallet){\r\n                    Factor = Factor * stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==vPresentacion).select(c->c.CajasPorCama).first() * stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==vPresentacion).select(c->c.CamasPorTarima).first();\r\n                }\r\n\r\n                List AxuListPres = stream(BeProducto.Presentaciones.items).select(c->c.IdPresentacion).toList();\r\n                Indx =AxuListPres.indexOf(vPresentacion);\r\n\r\n                cmbPresRec.setSelection(Indx);\r\n\r\n            }else{\r\n\r\n                lblPres.setVisibility(View.GONE);\r\n                cmbPresRec.setVisibility(View.GONE);\r\n\r\n            }\r\n\r\n            if (gl.Carga_Producto_x_Pallet){\r\n\r\n                if  (BeProducto.Presentaciones.items.get(Indx).EsPallet){\r\n\r\n                    Cant_Recibida = gBeStockRec.Uds_lic_plate;\r\n                    Cant_A_Recibir = Factor;\r\n\r\n                    FinalizCargaProductos();\r\n\r\n                }else{\r\n\r\n                execws(22);\r\n\r\n                }\r\n\r\n            }else{\r\n\r\n                Cant_Recibida = gl.gselitem.Cantidad_recibida;//stream(gl.gpListDetalleOC.items).where(c->c.IdOrdenCompraDet ==pIdOrdenCompraDet).select(c->c.Cantidad_recibida).first();\r\n                Cant_A_Recibir = gl.gselitem.Cantidad; //stream(gl.gpListDetalleOC.items).where(c->c.IdOrdenCompraDet ==pIdOrdenCompraDet).select(c->c.Cantidad).first();\r\n                if(Cant_A_Recibir - Cant_Recibida<0){\r\n                    Cant_Pendiente = 0;\r\n                }else{\r\n                    Cant_Pendiente = mu.round(Cant_A_Recibir - Cant_Recibida,gl.gCantDecCalculo);\r\n                }\r\n\r\n               // txtCantidadRec.setText(mu.frmdecimal(Cant_Pendiente,gl.gCantDecDespliegue)+\"\");\r\n               // txtCantidadRec.setText(Cant_Pendiente+\"\");\r\n               // #CKFK 20210218 Quité la cantidad pendiente de recibir en la CantidadRec por instrucción de Erik\r\n                txtCantidadRec.setText(\"\");\r\n\r\n                txtNoLP.requestFocus();\r\n                txtNoLP.selectAll();\r\n\r\n                /*if (BeOcDet!=null){\r\n\r\n                    if (gl.gBeOrdenCompra.DetalleLotes.items!=null){\r\n\r\n                        if (gl.gBeOrdenCompra.DetalleLotes.items.size()>0){\r\n\r\n                            BeLoteLinea = stream(gl.gBeOrdenCompra.DetalleLotes.items)\r\n                                    .where(c->c.No_linea == BeOcDet.No_Linea &&\r\n                                            c.IdOrdenCompraDet == pIdOrdenCompraDet\r\n                                            && c.Codigo_producto.equals(BeOcDet.Codigo_Producto)).first();\r\n\r\n                            if (BeLoteLinea!=null){\r\n                                txtLoteRec.setText(BeLoteLinea.Lote);\r\n\r\n                                if (!BeLoteLinea.Fecha_vence.isEmpty()){\r\n\r\n                                    VenceList.clear();\r\n\r\n                                    BeLoteLinea.Fecha_vence =du.convierteFechaMostar(BeLoteLinea.Fecha_vence);\r\n\r\n                                    VenceList.add(BeLoteLinea.Fecha_vence);\r\n\r\n                                    cmbVenceRec.setText(VenceList.get(0));\r\n\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }*/\r\n\r\n                FinalizCargaProductos();\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            mu.msgbox(e.getClass()+\" \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void LlenaDatosFaltantes_Existente(){\r\n\r\n        vPresentacion=0;\r\n        CostoOC=0;\r\n        double Factor=0;\r\n        boolean EsPallet;\r\n        int Indx=-1;\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Procesando valores int. ref. #20210601\");\r\n\r\n            if (Escaneo_Pallet){\r\n                txtNoLP.setText(pListTransRecDet.items.get(0).Lic_plate);\r\n            }else{\r\n                txtNoLP.setText(Get_Codigo_Barra(gl.CodigoRecepcion));\r\n                txtNoLP.setText(\"\");\r\n            }\r\n\r\n            if(BeProducto.IdProductoBodega>0){\r\n                pIdProductoBodega = pListTransRecDet.items.get(0).IdProductoBodega;\r\n            }\r\n\r\n            lblDatosProd.setText(BeProducto.Codigo + \" - \" + BeProducto.Nombre);\r\n            lblPropPrd.setText(BeProducto.Propietario.Nombre_comercial);\r\n\r\n            if (BeProducto.Control_vencimiento){\r\n                lblVence.setVisibility(View.VISIBLE);\r\n                cmbVenceRec.setVisibility(View.VISIBLE);\r\n                imgDate.setVisibility(View.VISIBLE);\r\n\r\n                if (!gl.gFechaVenceAnterior.equals(\"\")){\r\n                    cmbVenceRec.setText(gl.gFechaVenceAnterior);\r\n                }\r\n\r\n            }else{\r\n                cmbVenceRec.setVisibility(View.GONE);\r\n                lblVence.setVisibility(View.GONE);\r\n                imgDate.setVisibility(View.GONE);\r\n            }\r\n\r\n            Valida_Lote();\r\n\r\n            vPresentacion = pListTransRecDet.items.get(0).IdPresentacion;\r\n\r\n            if (vPresentacion>0){\r\n\r\n                Factor =Get_Factor_Presentacion(vPresentacion);\r\n                EsPallet = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==vPresentacion).select(c->c.EsPallet).first();\r\n\r\n                if (EsPallet){\r\n                    Factor = Factor * stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==vPresentacion).select(c->c.CajasPorCama).first() * stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==vPresentacion).select(c->c.CamasPorTarima).first();\r\n                }\r\n\r\n                List AxuListPres = stream(BeProducto.Presentaciones.items).select(c->c.IdPresentacion).toList();\r\n                Indx =AxuListPres.indexOf(vPresentacion);\r\n\r\n                cmbPresRec.setSelection(Indx);\r\n\r\n            }else{\r\n\r\n                lblPres.setVisibility(View.GONE);\r\n                cmbPresRec.setVisibility(View.GONE);\r\n\r\n            }\r\n\r\n            if (gl.Carga_Producto_x_Pallet){\r\n\r\n                if  (BeProducto.Presentaciones.items.get(Indx).EsPallet){\r\n\r\n                    Cant_Recibida = gBeStockRec.Uds_lic_plate;\r\n                    Cant_A_Recibir = Factor;\r\n\r\n                    FinalizCargaProductos();\r\n\r\n                }else{\r\n\r\n                    execws(22);\r\n\r\n                }\r\n\r\n            }else{\r\n\r\n                Cant_Recibida = gl.gselitem.Cantidad_recibida;//stream(gl.gpListDetalleOC.items).where(c->c.IdOrdenCompraDet ==pIdOrdenCompraDet).select(c->c.Cantidad_recibida).first();\r\n                Cant_A_Recibir = gl.gselitem.Cantidad; //stream(gl.gpListDetalleOC.items).where(c->c.IdOrdenCompraDet ==pIdOrdenCompraDet).select(c->c.Cantidad).first();\r\n                if(Cant_A_Recibir - Cant_Recibida<0){\r\n                    Cant_Pendiente = 0;\r\n                }else{\r\n                    Cant_Pendiente = mu.round(Cant_A_Recibir - Cant_Recibida,gl.gCantDecCalculo);\r\n                }\r\n\r\n//                txtCantidadRec.setText(mu.frmdecimal(pListTransRecDet.items.get(0).cantidad_recibida,gl.gCantDecDespliegue)+\"\");\r\n                txtCantidadRec.setText(pListTransRecDet.items.get(0).cantidad_recibida+\"\");\r\n                txtCantidadRec.requestFocus();\r\n\r\n                Cant_Recibida_Anterior = pListTransRecDet.items.get(0).cantidad_recibida;\r\n\r\n                txtLoteRec.setText(pListTransRecDet.items.get(0).Lote);\r\n\r\n                cmbVenceRec.setText(du.convierteFechaMostar(pListTransRecDet.items.get(0).Fecha_vence));\r\n\r\n                txtCostoReal.setText(pListTransRecDet.items.get(0).Costo+\"\");\r\n\r\n                List AxuLisEsta = stream(pListTransRecDet.items).select(c->c.IdProductoEstado).toList();\r\n                Indx =AxuLisEsta.indexOf(pListTransRecDet.items.get(0).IdProductoEstado);\r\n\r\n                cmbPresRec.setSelection(Indx);\r\n\r\n                FinalizCargaProductos();\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            mu.msgbox(e.getClass()+\" \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    private void FinalizCargaProductos(){\r\n\r\n        try{\r\n\r\n            txtUmbasRec.setText(BeProducto.UnidadMedida.Nombre);\r\n            txtPeso.setText(\"\");\r\n\r\n            if (BeProducto.Control_lote){\r\n                if (gl.mode==1){\r\n                    if (!gl.gLoteAnterior.isEmpty() && gl.gProductoAnterior.equals(BeProducto.getCodigo())){\r\n                        txtLoteRec.setText(gl.gLoteAnterior);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!BeProducto.Control_peso){\r\n                txtPeso.setVisibility(View.GONE);\r\n                txtPesoUnitario.setVisibility(View.GONE);\r\n                lblPeso.setVisibility(View.GONE);\r\n                lblPUn.setVisibility(View.GONE);\r\n            }\r\n\r\n            if(!BeProducto.Control_vencimiento){\r\n                cmbVenceRec.setVisibility(View.GONE);\r\n                lblVence.setVisibility(View.GONE);\r\n                imgDate.setVisibility(View.GONE);\r\n            }\r\n\r\n            if (!gl.gProductoAnterior.equals(BeProducto.getCodigo())){\r\n                if (cmbLote.getVisibility()!=View.VISIBLE){\r\n                    txtLoteRec.setText(\"\");\r\n                }\r\n                if (cmbVence.getVisibility()!=View.VISIBLE){\r\n                    cmbVenceRec.setText(du.convierteFechaMostar(du.getFechaActual()));\r\n                }\r\n\r\n                cmbEstadoProductoRec.setSelection(0);\r\n            }\r\n\r\n            if (!gl.gBeRecepcion.Muestra_precio){\r\n                txtCostoOC.setVisibility(View.GONE);\r\n                txtCostoReal.setVisibility(View.GONE);\r\n                lblCosto.setVisibility(View.GONE);\r\n                lblCReal.setVisibility(View.GONE);\r\n            }\r\n\r\n            try {\r\n                CostoOC = stream(gl.gpListDetalleOC.items).where(c->c.IdProductoBodega == pIdProductoBodega\r\n                        && c.IdPresentacion == vPresentacion).select(c->c.Costo).first();\r\n\r\n                if (gl.gBeOrdenCompra!=null) {\r\n                    if (((gl.gBeOrdenCompra.IdOrdenCompraEnc > 0) && (CostoOC > 0))) {\r\n                        txtCostoOC.setText(mu.round(CostoOC,  gl.gCantDecCalculo)+\"\");\r\n                    }\r\n                    else {\r\n                        txtCostoOC.setText(mu.round(BeProducto.Costo, gl.gCantDecCalculo)+\"\");\r\n                    }\r\n\r\n                } else {\r\n                    txtCostoOC.setText(mu.round(BeProducto.Costo, gl.gCantDecCalculo)+\"\");\r\n                }\r\n            } catch (Exception e) {\r\n                mu.msgbox(\"fcp_CostoOC: \"+e.getMessage());\r\n            }\r\n\r\n            txtCostoOC.setText(mu.round(BeProducto.Costo, gl.gCantDecCalculo)+\"\");\r\n\r\n            txtCostoReal.setText(CostoOC+\"\");\r\n\r\n            txtUmbasRec.setFocusable(false);\r\n            txtUmbasRec.setFocusableInTouchMode(false);\r\n            txtUmbasRec.setClickable(false);\r\n\r\n            if (gl.mode==1){\r\n                txtNoLP.setText(BeProducto.Codigo);\r\n                txtNoLP.setText(\"\");\r\n            }\r\n\r\n            /*txtBarra.setFocusable(false);\r\n            txtBarra.setFocusableInTouchMode(false);\r\n            txtBarra.setClickable(false);*/\r\n\r\n            txtCantidadRec.setInputType(InputType.TYPE_CLASS_NUMBER |InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtCantidadRec.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n            txtCostoOC.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtCostoOC.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n            txtPeso.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtPeso.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n            txtCostoReal.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtCostoReal.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n            txtPesoUnitario.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtPesoUnitario.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n            cmbVenceRec.setInputType(InputType.TYPE_DATETIME_VARIATION_DATE);\r\n\r\n            btnCantPendiente.setText(\"Pendiente: \"+mu.frmdecimal(Cant_Pendiente, gl.gCantDecDespliegue));\r\n            btnCantRecibida.setText(\"Recibido: \"+mu.frmdecimal(Cant_Recibida, gl.gCantDecDespliegue));\r\n\r\n            if (gl.Carga_Producto_x_Pallet){\r\n\r\n                txtLoteRec.setText(gBeStockRec.Lote);\r\n\r\n                txtLoteRec.setFocusable(false);\r\n                txtLoteRec.setFocusableInTouchMode(false);\r\n                txtLoteRec.setClickable(false);\r\n\r\n                cmbVenceRec.setText(du.convierteFechaMostar(gBeStockRec.Fecha_vence));\r\n\r\n                cmbVenceRec.setFocusable(false);\r\n                cmbVenceRec.setFocusableInTouchMode(false);\r\n                cmbVenceRec.setClickable(false);\r\n\r\n            }\r\n\r\n            if (gl.mode==1){\r\n                if (Escaneo_Pallet){\r\n                    LlenaCamposEsPallet();\r\n                }else{\r\n                    if (BeProducto.Genera_lp){\r\n                        progress.setMessage(\"Generando licencia..\");\r\n                        progress.show();\r\n                        execws(6);\r\n                        progress.cancel();\r\n                    }\r\n                }\r\n            }else{\r\n                Llena_beStock_Anterior();\r\n            }\r\n\r\n            progress.cancel();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"FinalizCargaProductos:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Llena_beStock_Anterior(){\r\n\r\n        try{\r\n\r\n            gBeStockAnt = new  clsBeStock();\r\n\r\n            gBeStockAnt.IdProductoBodega = pListTransRecDet.items.get(0).IdProductoBodega;\r\n            if (pListTransRecDet.items.get(0).Presentacion.Factor>0){\r\n                gBeStockAnt.Cantidad = pListTransRecDet.items.get(0).cantidad_recibida*pListTransRecDet.items.get(0).Presentacion.Factor;\r\n            }else{\r\n                gBeStockAnt.Cantidad = pListTransRecDet.items.get(0).cantidad_recibida;\r\n            }\r\n\r\n            if ( pListTransRecDet.items.get(0).ProductoEstado!=null&&pListTransRecDet.items.get(0).ProductoEstado.IdEstado>0){\r\n                gBeStockAnt.IdProductoEstado = pListTransRecDet.items.get(0).ProductoEstado.IdEstado;\r\n            }else{\r\n                gBeStockAnt.IdProductoEstado = pListTransRecDet.items.get(0).IdProductoEstado;\r\n            }\r\n\r\n            gBeStockAnt.Lote = pListTransRecDet.items.get(0).Lote;\r\n            gBeStockAnt.IdUnidadMedida = pListTransRecDet.items.get(0).IdUnidadMedida;\r\n            gBeStockAnt.IdPresentacion = pListTransRecDet.items.get(0).IdPresentacion;\r\n            gBeStockAnt.Fecha_vence = pListTransRecDet.items.get(0).Fecha_vence;\r\n            gBeStockAnt.IdRecepcionDet = pListTransRecDet.items.get(0).IdRecepcionDet;\r\n            gBeStockAnt.IdRecepcionEnc = pListTransRecDet.items.get(0).IdRecepcionEnc;\r\n            gBeStockAnt.IdUbicacion = gl.gBeRecepcion.IdUbicacionRecepcion;\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Llena_beStock_Anterior:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void LlenaCamposEsPallet(){\r\n\r\n        try{\r\n\r\n            txtLoteRec.setText(BeINavBarraPallet.Lote);\r\n            cmbVenceRec.setText(du.convierteFechaMostar(BeINavBarraPallet.Fecha_Vence));\r\n\r\n            if (!EsTransferenciaInternaWMS){\r\n//                txtCantidadRec.setText(mu.frmdecimal(BeINavBarraPallet.Cantidad_UMP,gl.gCantDecDespliegue)+\"\");\r\n                txtCantidadRec.setText(BeINavBarraPallet.Cantidad_UMP+\"\");\r\n                txtCantidadRec.requestFocus();\r\n            }else{\r\n//                txtCantidadRec.setText(mu.frmdecimal(BeINavBarraPallet.Cantidad_Presentacion,gl.gCantDecDespliegue));\r\n                txtCantidadRec.setText(BeINavBarraPallet.Cantidad_Presentacion+\"\");\r\n                txtCantidadRec.requestFocus();\r\n            }\r\n\r\n            List AuxList = stream(BeProducto.Presentaciones.items).select(c->c.Codigo_barra).toList();\r\n\r\n            int indxPres=AuxList.indexOf(BeINavBarraPallet.UM_Producto);\r\n\r\n            if (indxPres>-1){\r\n                cmbPresRec.setSelection(indxPres);\r\n            }else{\r\n                mu.msgbox(\"No está definida la presentación contenida en pallet para el LP: \"+BeINavBarraPallet.IdPallet);\r\n            }\r\n\r\n            List AuxLis1=stream(LProductoEstado.items).select(c->c.IdEstado).toList();\r\n\r\n            int indxEstado=AuxLis1.indexOf(gl.gIdProductoBuenEstadoPorDefecto);\r\n\r\n            if(indxEstado>-1){\r\n                cmbEstadoProductoRec.setSelection(indxEstado);\r\n            }else{\r\n                mu.msgbox(\"No existe un estado por defecto\");\r\n                return;\r\n            }\r\n\r\n            Llena_Detalle_Recepcion_Nueva();\r\n\r\n            Llena_Stock_Rec_Pallet_Proveedor();\r\n\r\n            double vCantidad  = BeINavBarraPallet.Cajas_Por_Cama * BeINavBarraPallet.Camas_Por_Tarima;\r\n\r\n            String vMensaje1 = \"Código: \"+BeINavBarraPallet.Codigo+\"\\n \"\r\n                    +\"Cant: \"+vCantidad +\"\\n \"\r\n                    +\"Pres: \"+ BeProducto.Presentaciones.items.get(indxPres).Nombre +\"\\n\"\r\n                    +\"Venc: \"+BeINavBarraPallet.Fecha_Vence+\"\\n \"\r\n                    +\"Lote: \"+BeINavBarraPallet.Lote +\"\\n\"\r\n                    +\"¿El producto está completo y en buen estado?\";\r\n\r\n            msgValidaProductoPallet(vMensaje1);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"LlenaCamposEsPallet:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void fillFechaVence() {\r\n\r\n        String valor;\r\n\r\n        try {\r\n\r\n            VenceList.clear();\r\n\r\n            clsBeTrans_oc_det_loteList vence;\r\n            vence=gl.gBeOrdenCompra.DetalleLotes;\r\n            List<clsBeTrans_oc_det_lote> BeVence =  stream(vence.items)\r\n                    .where(c -> c.IdProductoBodega  == BeProducto.IdProductoBodega &&\r\n                                c.No_linea == BeOcDet.No_Linea &&\r\n                                c.IdOrdenCompraDet == pIdOrdenCompraDet)\r\n                    .toList();\r\n\r\n            double CantRec;\r\n\r\n            for (int i = 0; i <BeVence.size(); i++)\r\n            {\r\n                valor = du.convierteFechaMostar(BeVence.get(i).Fecha_vence);\r\n                CantRec = BeVence.get(i).Cantidad_recibida;\r\n\r\n                if (!VenceList.contains(valor)){\r\n                    if (CantRec==0){\r\n                        VenceList.add(valor);\r\n                    }\r\n                }\r\n            }\r\n\r\n            ArrayAdapter<String> dataAdapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, VenceList);\r\n            dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n            cmbVence.setAdapter(dataAdapter);\r\n\r\n            if (VenceList.size()>0) {\r\n                cmbVence.setSelection(0);\r\n                cmbVenceRec.setText(cmbVence.getSelectedItem().toString());\r\n            }else{\r\n                cmbVence.setVisibility(View.GONE);\r\n                cmbVenceRec.setVisibility(View.VISIBLE);\r\n                imgDate.setVisibility(View.VISIBLE);\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            mu.msgbox( e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void fillLotes() {\r\n\r\n        String valor;\r\n\r\n        try {\r\n\r\n            LotesList.clear();\r\n\r\n            clsBeTrans_oc_det_loteList lotes;\r\n            lotes=gl.gBeOrdenCompra.DetalleLotes;\r\n            List<clsBeTrans_oc_det_lote> BeLotes;\r\n\r\n            if (BeProducto.getControl_vencimiento() && VenceList.size()>0){\r\n                BeLotes = stream(lotes.items)\r\n                        .where(c -> {\r\n                            try {\r\n                                return c.IdProductoBodega  == BeProducto.IdProductoBodega &&\r\n                                        c.No_linea == BeOcDet.No_Linea &&\r\n                                        c.IdOrdenCompraDet == pIdOrdenCompraDet &&\r\n                                        c.Fecha_vence.equals(du.convierteFecha(cmbVence.getSelectedItem().toString()));\r\n                            } catch (Exception e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                            return false;\r\n                        })\r\n                        .toList();\r\n\r\n            }else{\r\n                BeLotes = stream(lotes.items)\r\n                        .where(c -> c.IdProductoBodega  == BeProducto.IdProductoBodega &&\r\n                                c.No_linea == BeOcDet.No_Linea &&\r\n                                c.IdOrdenCompraDet == pIdOrdenCompraDet)\r\n                        .toList();\r\n            }\r\n\r\n            double CantRec;\r\n\r\n            for (int i = 0; i <BeLotes.size(); i++)\r\n            {\r\n\r\n                valor = BeLotes.get(i).Lote;\r\n               CantRec = BeLotes.get(i).Cantidad_recibida;\r\n\r\n                if (!LotesList.contains(valor)){\r\n                    if (CantRec==0){\r\n                        LotesList.add(valor);\r\n                    }\r\n                }\r\n            }\r\n\r\n            ArrayAdapter<String> dataAdapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, LotesList);\r\n            dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n            cmbLote.setAdapter(dataAdapter);\r\n\r\n            if (LotesList.size()>0) {\r\n                cmbLote.setSelection(0);\r\n            }else{\r\n                cmbLote.setVisibility(View.GONE);\r\n                txtLoteRec.setVisibility(View.VISIBLE);\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            mu.msgbox( e.getMessage());\r\n        }\r\n    }\r\n\r\n    //#EJC20210412: Funcion para llenar ubicacion de NAV.\r\n    private void fillUbicacion() {\r\n\r\n        String valor;\r\n\r\n        try {\r\n\r\n            UbicLotesList.clear();\r\n\r\n            clsBeTrans_oc_det_loteList ubic;\r\n            ubic=gl.gBeOrdenCompra.DetalleLotes;\r\n            List<clsBeTrans_oc_det_lote> BeUbicaciones;\r\n\r\n            String SelectedLote;\r\n            String FechaVence;\r\n\r\n            SelectedLote = txtLoteRec.getText().toString().trim();\r\n            FechaVence = du.convierteFecha(cmbVenceRec.getText().toString());\r\n\r\n            String finalSelectedLote = SelectedLote;\r\n            String finalFechaVence = FechaVence;\r\n\r\n            if (BeProducto.getControl_vencimiento() && VenceList.size()>0){\r\n\r\n                BeUbicaciones = stream(ubic.items)\r\n                        .where(c -> c.IdProductoBodega  == BeProducto.IdProductoBodega &&\r\n                                c.No_linea == BeOcDet.No_Linea &&\r\n                                c.IdOrdenCompraDet == pIdOrdenCompraDet &&\r\n                                c.Lote.equals(finalSelectedLote)  &&\r\n                                c.Fecha_vence.equals(finalFechaVence))\r\n                        .toList();\r\n\r\n            }else{\r\n                BeUbicaciones = stream(ubic.items)\r\n                        .where(c -> c.IdProductoBodega  == BeProducto.IdProductoBodega &&\r\n                                c.No_linea == BeOcDet.No_Linea &&\r\n                                c.Lote.equals(finalSelectedLote)  &&\r\n                                c.IdOrdenCompraDet == pIdOrdenCompraDet)\r\n                        .toList();\r\n            }\r\n\r\n            double CantRec;\r\n\r\n            for (int i = 0; i <BeUbicaciones.size(); i++)\r\n            {\r\n                valor = BeUbicaciones.get(i).Ubicacion;\r\n                CantRec =BeUbicaciones.get(i).Cantidad_recibida;\r\n\r\n                if (!UbicLotesList.contains(valor)){\r\n                    if (CantRec ==0){\r\n                        UbicLotesList.add(valor);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (UbicLotesList.size()>0){\r\n                ubiDetLote = UbicLotesList.get(0);\r\n                if (ubiDetLote!=null){\r\n                    if(!ubiDetLote.isEmpty()) lblUbicacion.setText(\"Doc: -> \" + ubiDetLote);\r\n                }else {\r\n                    tblUbicacion.setVisibility(View.GONE);\r\n                }\r\n            }else{\r\n                tblUbicacion.setVisibility(View.GONE);\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            mu.msgbox(\"FillUbicacion \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Guardar_Pallet(){\r\n\r\n        try{\r\n\r\n            vBeStockRecPallet.Uds_lic_plate = BeINavBarraPallet.Cantidad_UMP;\r\n            vBeStockRecPallet.No_bulto = 0;\r\n\r\n            execws(21);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Guardar_Pallet:\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void Llena_Stock_Rec_Pallet_Proveedor(){\r\n\r\n        vBeStockRecPallet = new clsBeStock_rec();\r\n        double vCantidad;\r\n\r\n        try{\r\n\r\n            if (BeINavBarraPallet!=null){\r\n\r\n                vBeStockRecPallet.IdStockRec = 0;\r\n                //#CKFK 20210322 Modifiqué que se envíe el IdPropietarioBodega de trans_re_det\r\n                vBeStockRecPallet.IdPropietarioBodega = pIdPropietarioBodega;//gl.gBeOrdenCompra.IdPropietarioBodega;\r\n                vBeStockRecPallet.IdProductoBodega = BeProducto.IdProductoBodega;\r\n                if (IdPreseSelect>0){\r\n                    vBeStockRecPallet.IdPresentacion =IdPreseSelect;\r\n                    vBeStockRecPallet.Presentacion = new  clsBeProducto_Presentacion();\r\n                    vBeStockRecPallet.Presentacion.IdPresentacion = IdPreseSelect;\r\n                }else{\r\n                    vBeStockRecPallet.IdPresentacion =0;\r\n                    vBeStockRecPallet.Presentacion = new  clsBeProducto_Presentacion();\r\n                    vBeStockRecPallet.Presentacion.IdPresentacion = 0;\r\n                }\r\n\r\n                vBeStockRecPallet.IdUnidadMedida = BeProducto.IdUnidadMedidaBasica;\r\n                vBeStockRecPallet.IdRecepcionEnc = gl.gBeRecepcion.IdRecepcionEnc;\r\n                vBeStockRecPallet.IdRecepcionDet = pIdRecepcionDet;\r\n                vBeStockRecPallet.Lote = BeINavBarraPallet.Lote;\r\n                vBeStockRecPallet.Lic_plate = BeINavBarraPallet.Codigo_barra;\r\n                vBeStockRecPallet.Serial = \"\";\r\n\r\n                if (vBeStockRecPallet.IdPresentacion > 0){\r\n\r\n                    if (!EsTransferenciaInternaWMS){\r\n                        if (BeProducto.Presentacion.EsPallet){\r\n                            vCantidad = BeINavBarraPallet.Cantidad_UMP * BeProducto.Presentacion.Factor * BeProducto.Presentacion.CamasPorTarima * BeProducto.Presentacion.CajasPorCama;\r\n                        }else{\r\n                            vCantidad = BeProducto.Presentacion.Factor * BeINavBarraPallet.Cantidad_UMP;\r\n                        }\r\n                    }else{\r\n\r\n                        if (BeProducto.Presentacion.EsPallet){\r\n                            vCantidad = BeINavBarraPallet.Cantidad_Presentacion * BeProducto.Presentacion.Factor * BeProducto.Presentacion.CamasPorTarima * BeProducto.Presentacion.CajasPorCama;\r\n                        }else{\r\n                            vCantidad = BeINavBarraPallet.Cantidad_Presentacion * BeProducto.Presentacion.Factor;\r\n                        }\r\n\r\n                    }\r\n\r\n                }else{\r\n                    vCantidad = BeINavBarraPallet.Cantidad_UMP;\r\n                }\r\n\r\n                vBeStockRecPallet.Cantidad = vCantidad;\r\n                vBeStockRecPallet.Fecha_Ingreso = du.getFechaActual();\r\n                vBeStockRecPallet.Fecha_vence = BeINavBarraPallet.Fecha_Vence;\r\n                vBeStockRecPallet.Uds_lic_plate = BeINavBarraPallet.Cantidad_Presentacion;\r\n                vBeStockRecPallet.No_bulto = BeINavBarraPallet.IdPallet;\r\n                vBeStockRecPallet.Fecha_Manufactura = BeINavBarraPallet.Fecha_Produccion;\r\n                vBeStockRecPallet.Serial = \"\";\r\n                vBeStockRecPallet.Anada = 0;\r\n                vBeStockRecPallet.Fec_agr = du.getFechaActual();\r\n                vBeStockRecPallet.User_agr = gl.IdOperador+\"\";\r\n                vBeStockRecPallet.Fec_mod = du.getFechaActual();\r\n                vBeStockRecPallet.User_mod = gl.IdOperador+\"\";\r\n                vBeStockRecPallet.Peso = 0.0;\r\n                vBeStockRecPallet.Temperatura = 0.0;\r\n                vBeStockRecPallet.Regularizado = false;\r\n                vBeStockRecPallet.IsNew = true;\r\n\r\n                vBeStockRecPallet.Lote = BeINavBarraPallet.Lote;\r\n                vBeStockRecPallet.ProductoEstado = new  clsBeProducto_estado();\r\n\r\n                if (IdEstadoSelect>0){\r\n\r\n                    vBeStockRecPallet.ProductoEstado.IdEstado = IdEstadoSelect;\r\n                    vBeStockRecPallet.IdProductoEstado = IdEstadoSelect;\r\n\r\n                    if (LProductoEstado.items.size()>0){\r\n\r\n                        if (stream(LProductoEstado.items).where(c->c.IdEstado ==IdEstadoSelect).select(c->c.Danado).first()){\r\n                            execws(20);\r\n                        }else{\r\n                            vBeStockRecPallet.IdUbicacion = gl.gBeRecepcion.IdUbicacionRecepcion;\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                Continua_Llenando_Stock_Pallet_Proveedor();\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Llena_Stock_Rec_Pallet_Proveedor\");\r\n        }\r\n\r\n    }\r\n\r\n    private void Continua_Llenando_Stock_Pallet_Proveedor(){\r\n\r\n        try{\r\n\r\n\r\n            vBeStockRecPallet.IdUbicacion_anterior = vBeStockRecPallet.IdUbicacion;\r\n\r\n            if (!txtUmbasRec.getText().toString().isEmpty()){\r\n                vBeStockRecPallet.IdUnidadMedida = BeProducto.UnidadMedida.IdUnidadMedida;\r\n            }\r\n\r\n            vBeStockRecPallet.IdRecepcionEnc = gl.gBeRecepcion.IdRecepcionEnc;\r\n            vBeStockRecPallet.ProductoValidado = true;\r\n            vBeStockRecPallet.No_linea = pLineaOC;\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Continua_Llenando_Stock_Pallet_Proveedor:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private double Get_Factor_Presentacion(int vIdPresentacion){\r\n        double Factor=0;\r\n\r\n        try{\r\n\r\n            if (BeProducto.Presentaciones!=null){\r\n                Factor = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion == vIdPresentacion).select(c->c.Factor).firstOrDefault(Factor);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(e.getClass()+\" \"+e.getMessage());\r\n        }\r\n        return Factor;\r\n\r\n    }\r\n\r\n    private int Get_Presentacion_A_Recibir(){\r\n\r\n        int rPresentacion=0;\r\n\r\n        try{\r\n\r\n            if(gl.Carga_Producto_x_Pallet){\r\n                rPresentacion = gBeStockRec.IdPresentacion;\r\n            }else {\r\n                rPresentacion = stream(gl.gpListDetalleOC.items).where(c -> c.IdProductoBodega == pIdProductoBodega && c.IdOrdenCompraDet == pIdOrdenCompraDet).select(c -> c.IdPresentacion).firstOrDefault(0);\r\n            }\r\n        }catch (Exception e){\r\n            mu.msgbox(e.getClass()+\" \"+e.getMessage());\r\n        }\r\n\r\n        return rPresentacion;\r\n\r\n    }\r\n\r\n    private void Valida_Lote(){\r\n\r\n        int dia,mes,ano;\r\n        String lCorrelativo;\r\n\r\n        try{\r\n\r\n            if (BeProducto.Control_lote && BeProducto.Genera_lote){\r\n\r\n                dia =calendario.get(Calendar.DAY_OF_MONTH);\r\n                mes = calendario.get(Calendar.MONTH)+1;\r\n                ano = calendario.get(Calendar.YEAR);\r\n\r\n                lCorrelativo = (ano+mes+dia+\"0001\");\r\n\r\n                txtLoteRec.setText(lCorrelativo);\r\n            }else if(!BeProducto.Control_lote){\r\n                txtLoteRec.setText(\"\");\r\n                txtLoteRec.setVisibility(View.GONE);\r\n                lblLote.setVisibility(View.GONE);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(e.getClass()+\"\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private String Get_Codigo_Barra(String valor){\r\n\r\n        String vCodBarra=\"\";\r\n\r\n        try{\r\n\r\n            if(BeProducto.Codigos_Barra!=null){\r\n\r\n                if (BeProducto.Codigos_Barra.items!=null){\r\n\r\n                    vCodBarra = stream(BeProducto.Codigos_Barra.items).where(c->c.Codigo_barra.equals(valor)).select(c->c.Codigo_barra).toString();\r\n\r\n                    if(vCodBarra.isEmpty()){\r\n\r\n                        if (BeProducto.Presentaciones!=null){\r\n\r\n                            vCodBarra = stream(BeProducto.Presentaciones.items).where(c->c.Codigo_barra.equals(valor)).select(c->c.Codigo_barra).toString();\r\n\r\n                            if(vCodBarra.isEmpty()){\r\n\r\n                                if(BeProducto.Codigo_barra.equals(valor)){\r\n                                    vCodBarra = valor;\r\n                                }else{\r\n                                    vCodBarra = BeProducto.Codigo_barra;\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Get_Codigo_Barra: \"+e.getMessage());\r\n        }\r\n\r\n        return vCodBarra;\r\n    }\r\n\r\n    private void Listar_Producto_Presentaciones(){\r\n\r\n        try{\r\n\r\n            if (BeProducto.Presentaciones!=null){\r\n\r\n                if (BeProducto.Presentaciones.items!=null){\r\n\r\n                    PresList.clear();\r\n\r\n                    for (int i = 0; i <BeProducto.Presentaciones.items.size(); i++) {\r\n                        PresList.add(BeProducto.Presentaciones.items.get(i).Nombre);\r\n                        if (Escaneo_Pallet){\r\n                            IdPreseSelect=BeProducto.Presentaciones.items.get(i).IdPresentacion;\r\n                        }\r\n                    }\r\n\r\n                    ArrayAdapter<String> dataAdapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, PresList);\r\n                    dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                    cmbPresRec.setAdapter(dataAdapter);\r\n\r\n                    if (PresList.size()>0) cmbPresRec.setSelection(0);\r\n\r\n                }\r\n\r\n            } else{\r\n                execws(3);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(e.getClass()+\" \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void Listar_Producto_Estado(){\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Listando estados de producto\");\r\n\r\n            EstadoList.clear();\r\n\r\n            for (int i = 0; i <LProductoEstado.items.size(); i++) {\r\n                EstadoList.add(LProductoEstado.items.get(i).Nombre);\r\n            }\r\n\r\n            ArrayAdapter<String> dataAdapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, EstadoList);\r\n            dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n            cmbEstadoProductoRec.setAdapter(dataAdapter);\r\n\r\n            if (Escaneo_Pallet){\r\n                IdEstadoSelect = gl.gIdProductoBuenEstadoPorDefecto;\r\n                List AuxEst = stream(LProductoEstado.items).select(c->c.IdEstado).toList();\r\n                int indx = AuxEst.indexOf(IdEstadoSelect);\r\n                if (EstadoList.size()>0) cmbEstadoProductoRec.setSelection(indx);\r\n            }else{\r\n                if (EstadoList.size()>0) cmbEstadoProductoRec.setSelection(0);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(e.getClass()+\" \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region GuardarRecepcion\r\n\r\n    private void Guardar_Recepcion_Nueva(){\r\n\r\n        try{\r\n\r\n            imprimirDesdeBoton=false;\r\n\r\n            if (BeProducto!=null){\r\n                if(ValidaDatosIngresados()){\r\n                    if (Mostrar_Propiedades_Parametros){\r\n                        Muestra_Propiedades_Producto();\r\n                    }else{\r\n                        if (!Mostro_Propiedades){\r\n                            Llena_Stock();\r\n                            Mostro_Propiedades = true;\r\n                        }\r\n                    }\r\n\r\n                    if (!Mostro_Propiedades){\r\n                        Muestra_Propiedades_Producto();\r\n                        return;\r\n                    }\r\n\r\n                    if (gl.TipoOpcion==2 && gl.gBeRecepcion.IsNew){\r\n\r\n                        execws(12);\r\n\r\n                    }else{\r\n                        ContinuaGuardandoRecepcion();\r\n                    }\r\n                }\r\n            }else{\r\n                msgbox(\"No está definido el producto que se va a recepcionar\");\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Guardar_Recepcion: \"+ e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    public void BotonGuardarRecepcion(View view){\r\n\r\n        try{\r\n\r\n            imprimirDesdeBoton=false;\r\n\r\n            String valor= cmbVenceRec .getText().toString();\r\n\r\n            String fecha_ajustada =  du.convierteFechaSinHora(valor);\r\n\r\n            if (!du.EsFecha(fecha_ajustada)){\r\n                msgbox(\"No es una fecha válida, se colocará la fecha actual\");\r\n                cmbVenceRec.setText(du.getActDateStr());\r\n            }else\r\n            {\r\n                cmbVenceRec.setText(fecha_ajustada);\r\n            }\r\n\r\n//            try{\r\n//\r\n//                if (!du.EsFecha(valor)){\r\n//                    msgbox(\"No es una fecha válida, se colocará la fecha actual\");\r\n//                    cmbVenceRec.setText(du.getActDateStr());\r\n//                    return;\r\n//                };\r\n//\r\n//                // du.EsFecha(valor);\r\n//            }catch(Exception e){\r\n//                cmbVenceRec.setText(du.getActDateStr());\r\n//                return;\r\n//            }\r\n\r\n            if (BeProducto.Presentaciones != null) {\r\n                if (BeProducto.Presentaciones.items != null){\r\n\r\n                    if (IdPreseSelect!=-1){\r\n                        boolean EsPallet = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==IdPreseSelect).select(c->c.EsPallet).first();\r\n\r\n                        if (EsPallet){\r\n                            if (CajasPorCama==0 && CamasPorTarima==0){\r\n                                msgbox(\"Debe ingresar la definición de la estiba\");\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            gl.gProductoAnterior = BeProducto.getCodigo();\r\n\r\n            if (gl.gBeRecepcion.IdTipoTransaccion.equals(\"PICH000\")){\r\n\r\n                if (Escaneo_Pallet){\r\n                    //Guardar_Recepcion_Pallet\r\n                }else{\r\n                    ValidaCampos();\r\n                }\r\n\r\n            }else{\r\n                ValidaCampos();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"BotonGuardarRecepcion:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Llena_Stock(){\r\n\r\n        try{\r\n\r\n            if (pListBeStockRec!=null){\r\n                if (pListBeStockRec.items!=null){\r\n                    List auxList= stream(pListBeStockRec.items).select(c->c.IdRecepcionDet).toList();\r\n                    pIndiceListaStock = auxList.indexOf(pIdRecepcionDet);\r\n                }\r\n            }\r\n\r\n            if (pIndiceListaStock==-1){\r\n\r\n                clsBeStock_rec BeStock_rec = new clsBeStock_rec();\r\n                pListBeStockRec.items = new ArrayList<>();\r\n                BeStock_rec.IdRecepcionDet = pIdRecepcionDet;\r\n                BeStock_rec.IdRecepcionEnc = gl.gIdRecepcionEnc;\r\n                //#CKFK 20210322 Modifiqué que se envíe el IdPropietarioBodega de trans_re_det\r\n                BeStock_rec.IdPropietarioBodega =pIdPropietarioBodega;//gl.gBeRecepcion.PropietarioBodega.IdPropietarioBodega;\r\n                BeStock_rec.IdProductoBodega = BeProducto.IdProductoBodega;\r\n                BeStock_rec.IsNew = true;\r\n\r\n                if (IdPreseSelect>0){\r\n                    BeStock_rec.Presentacion = new clsBeProducto_Presentacion();\r\n                    BeStock_rec.Presentacion.IdPresentacion = IdPreseSelect;\r\n                }\r\n\r\n                pListBeStockRec.items.add(BeStock_rec);\r\n                pIndiceListaStock = pListBeStockRec.items.size()-1;\r\n\r\n            }\r\n\r\n            if (pIndiceListaStock>=0){\r\n\r\n                //#CKFK 20210322 Modifiqué que se envíe el IdPropietarioBodega de trans_re_det\r\n                assert Objects.requireNonNull(pListBeStockRec).items != null;\r\n                assert pListBeStockRec.items != null;\r\n                pListBeStockRec.items.get(pIndiceListaStock).IdPropietarioBodega = pIdPropietarioBodega;//gl.gBeRecepcion.PropietarioBodega.IdPropietarioBodega;\r\n                pListBeStockRec.items.get(pIndiceListaStock).IdProductoBodega = BeProducto.IdProductoBodega;\r\n\r\n                //#CKFK 20210308 Agregué esta validación para ingresar el LP que ingresaron manualmente\r\n                if (!pLp.equals(\"\")){\r\n                    pListBeStockRec.items.get(pIndiceListaStock).Lic_plate = pLp;\r\n                }else{\r\n                    if (pListBeStockRec.items.get(pIndiceListaStock).Lic_plate!=null){\r\n                        pListBeStockRec.items.get(pIndiceListaStock).Lic_plate = pListBeStockRec.items.get(pIndiceListaStock).Lic_plate;\r\n                    }else{\r\n                        pListBeStockRec.items.get(pIndiceListaStock).Lic_plate = \"\";\r\n                    }\r\n                }\r\n\r\n                pListBeStockRec.items.get(pIndiceListaStock).Fecha_Ingreso = String.valueOf(du.getFechaActual());\r\n                pListBeStockRec.items.get(pIndiceListaStock).IdRecepcionDet = pIdRecepcionDet;\r\n\r\n                pListBeStockRec.items.get(pIndiceListaStock).Fecha_Manufactura = \"1990-01-01\";\r\n\r\n                if (pListBeStockRec.items.get(pIndiceListaStock).Serial!=null){\r\n\r\n                }else{\r\n                    pListBeStockRec.items.get(pIndiceListaStock).Serial = \"\";\r\n                }\r\n                pListBeStockRec.items.get(pIndiceListaStock).Anada = 0;\r\n                pListBeStockRec.items.get(pIndiceListaStock).Fec_agr = String.valueOf(du.getFechaActual());\r\n                pListBeStockRec.items.get(pIndiceListaStock).User_agr = gl.IdOperador+\"\";\r\n                pListBeStockRec.items.get(pIndiceListaStock).Fec_mod = String.valueOf(du.getFechaActual());\r\n                pListBeStockRec.items.get(pIndiceListaStock).User_mod = gl.IdOperador+\"\";\r\n                pListBeStockRec.items.get(pIndiceListaStock).IsNew = true;\r\n\r\n                pListBeStockRec.items.get(pIndiceListaStock).Activo = true;\r\n                pListBeStockRec.items.get(pIndiceListaStock).IdRecepcionDet = pIdRecepcionDet;\r\n                pListBeStockRec.items.get(pIndiceListaStock).IdRecepcionEnc = gl.gIdRecepcionEnc;\r\n                pListBeStockRec.items.get(pIndiceListaStock).IdUnidadMedida = BeProducto.IdUnidadMedidaBasica;\r\n\r\n                pListBeStockRec.items.get(pIndiceListaStock).IdPresentacion = Math.max(IdPreseSelect, 0);\r\n\r\n                if (pListBeStockRec.items.get(pIndiceListaStock).Peso>0){\r\n                    pListBeStockRec.items.get(pIndiceListaStock).Peso =pListBeStockRec.items.get(pIndiceListaStock).Peso ;\r\n                }else{\r\n                    pListBeStockRec.items.get(pIndiceListaStock).Peso = 0;\r\n                }\r\n\r\n                if (pListBeStockRec.items.get(pIndiceListaStock).Temperatura>0){\r\n                    pListBeStockRec.items.get(pIndiceListaStock).Temperatura = pListBeStockRec.items.get(pIndiceListaStock).Temperatura;\r\n                }else{\r\n                    pListBeStockRec.items.get(pIndiceListaStock).Temperatura = 0.0;\r\n                }\r\n\r\n                pListBeStockRec.items.get(pIndiceListaStock).Regularizado = false;\r\n                pListBeStockRec.items.get(pIndiceListaStock).Fecha_regularizacion = du.convierteFecha(\"01/01/1900\");\r\n\r\n                pListBeStockRec.items.get(pIndiceListaStock).Atributo_Variante_1 = \"\";\r\n                pListBeStockRec.items.get(pIndiceListaStock).No_linea = pLineaOC;\r\n                pListBeStockRec.items.get(pIndiceListaStock).Pallet_No_Estandar = false;\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Llena_Stock:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void ContinuaGuardandoRecepcion(){\r\n\r\n        progress.setMessage(\"Guardando recepción\");\r\n        progress.show();\r\n\r\n        try{\r\n\r\n            Valida_Cantidad_Recibida();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"ContinuaGuardandoRecepcion: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    public void valida_fecha_vencimiento(){\r\n\r\n        try{\r\n\r\n            if (BeProducto.Control_vencimiento){\r\n\r\n                if (cmbVenceRec.getText().toString().isEmpty()){\r\n                    mu.msgbox(\"Ingrese fecha de vencimiento para el producto \"+BeProducto.Codigo);\r\n                }else{\r\n\r\n                    BeTransReDet.Fecha_vence =du.convierteFecha(cmbVenceRec.getText().toString().trim());\r\n                    gl.gFechaVenceAnterior = cmbVenceRec.getText().toString().trim();\r\n\r\n                    String FechaVence=BeTransReDet.Fecha_vence;\r\n                    String FechaActual=du.getFechaActual();\r\n\r\n                    @SuppressLint(\"SimpleDateFormat\") SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n                    Date strDate = sdf.parse(FechaVence);\r\n                    Date strDateNow = sdf.parse(FechaActual);\r\n\r\n                    if (strDate.getTime()  <=  strDateNow.getTime() ) {\r\n                        msgValidaFechaVence(\"La fecha de vencimiento del producto \"+BeProducto.Codigo+ \" es igual o menor a la fecha de hoy. ¿Desea ingresar un producto ya vencido?\");\r\n                    }else{\r\n                        DespuesDeValidarCantidad();\r\n                    }\r\n\r\n                    //#CKFK 20201007 quité esta validacion de fecha porque no era correcta\r\n                   /* if (FechaVence.equals(String.valueOf(du.getFechaActual()))){\r\n\r\n                    }*/\r\n\r\n                    //#CKFK 20200917 Puse esto en comentario porque la validación no se hacía correctamente\r\n                       /* if (!Valida_Fecha_Vencimiento()){\r\n                            return;\r\n                        }else{\r\n                            Continua_Llenando_Detalle_Recepcion_Nueva();\r\n                        }*/\r\n                }\r\n            }else{\r\n                DespuesDeValidarCantidad();\r\n            }\r\n\r\n        }catch (Exception ex){\r\n            mu.msgbox(\"ContinuaGuardandoRecepcion: \"+ex.getMessage());\r\n        }finally{\r\n            progress.cancel();\r\n        }\r\n    }\r\n\r\n    @SuppressWarnings(\"unused\")\r\n    private void DespuesDeValidarCantidad(){\r\n\r\n        int vIndice=-1;\r\n        String Resultado = \"\";\r\n\r\n        clsBeTrans_re_detList auxListTransRecDet;\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Llenando detalle de recepción\");\r\n\r\n            switch (gl.TipoOpcion){\r\n\r\n                case 1:\r\n\r\n                    if (gl.mode==1){\r\n                        Llena_Detalle_Recepcion_Nueva();\r\n                    }else{\r\n                        Llena_Detalle_Recepcion_Existente();\r\n\r\n                    }\r\n                    break;\r\n\r\n                case 2:\r\n                    //Aquí código de recepción ciega.\r\n                    break;\r\n\r\n            }\r\n\r\n            int I;\r\n\r\n            auxListTransRecDet = new clsBeTrans_re_detList();\r\n            auxListTransRecDet.items = stream(pListTransRecDet.items).where(c->c.IdRecepcionDet == pIdRecepcionDet).toList();\r\n\r\n            //Esto es el equivalente a ReDim en .net\r\n            if (auxListTransRecDet.items!=null)\r\n            {\r\n                //#EJC20200325: Aquí da error en algunas ocasiones\r\n\r\n                try{\r\n\r\n                    gl.gBeRecepcion.Detalle.items = new ArrayList<>();\r\n\r\n                    gl.gBeRecepcion.Detalle.items.addAll(auxListTransRecDet.items);\r\n\r\n                }catch (Exception ex)\r\n                {\r\n                    mu.msgbox(\"#20200325_0338AM: When redim array -> \"+ex.getMessage());\r\n                }\r\n\r\n            }\r\n\r\n            if (gl.gBeRecepcion.DetalleParametros.items!=null){\r\n                gl.gBeRecepcion.DetalleParametros.items.addAll(plistBeReDetParametros.items);\r\n            }\r\n\r\n             I = 0;\r\n\r\n            if (plistBeReDetParametros.items!=null){\r\n                Objects.requireNonNull(gl.gBeRecepcion.DetalleParametros.items).addAll(plistBeReDetParametros.items);\r\n                }\r\n\r\n\r\n            if (pListBeStockRec.items.size()==0){\r\n                mu.msgbox(\"No se guardó el stock, no se puede continuar\");\r\n                return;\r\n            }\r\n\r\n            //Productos_Pallet\r\n\r\n            if (gl.mode==1){\r\n                execws(16);\r\n            }else{\r\n                execws(17);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"DespuesDeValidarCantidad\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Imprime_Barra_Despues_Guardar(){\r\n\r\n        try{\r\n\r\n            progress.show();\r\n            progress.setMessage(\"Validando imprimir barra\");\r\n\r\n            if (gl.IdImpresora>0){\r\n\r\n                progress.cancel();\r\n\r\n                imprimirDesdeBoton=false;\r\n                msgAskImprimir(\"Seleccione una opción para imprimir\");\r\n\r\n            }else{\r\n                Actualiza_Valores_Despues_Imprimir(true);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            //#EJC20210126\r\n            if (e.getMessage().contains(\"Could not connect to device:\")){\r\n                mu.toast(\"Error al imprimir el código de barra. No existe conexión a la impresora: \"+ gl.MacPrinter);\r\n                if (!imprimirDesdeBoton){\r\n                    msgAskImprimir(\"Imprimir código producto\");\r\n                }\r\n            }else{\r\n                mu.msgbox(\"Imprimir_barra: \"+e.getMessage());\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private void Actualiza_Valores_Despues_Imprimir(boolean salir){\r\n        try{\r\n\r\n            //CM_20210125: Actualiza valores de la OC después imprimir\r\n            switch (gl.TipoOpcion){\r\n\r\n                case 1:\r\n                    progress.setMessage(\"Actualizando valores OCDet\");\r\n                    progress.show();\r\n                    beTransOCDet =new clsBeTrans_oc_det();\r\n                    beTransOCDet.IdOrdenCompraEnc = pIdOrdenCompraEnc;\r\n                    beTransOCDet.IdOrdenCompraDet = pIdOrdenCompraDet;\r\n                    if (salir) execws(18);\r\n                    break;\r\n\r\n                case 2:\r\n                    progress.cancel();\r\n                    break;\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(e.getMessage());\r\n        }\r\n        progress.cancel();\r\n    }\r\n\r\n    //#EJC20210125: Dejé solo la función de Tzirin puse en comentario la de Jaros..\r\n    private void msgAskImprimir(String msg) {\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(true);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Código de Producto\", (dialog1, which) -> {\r\n                progress.setMessage(\"Actualizando valores OC\");\r\n                progress.show();\r\n                Imprimir_Barra();\r\n            });\r\n\r\n            dialog.setNegativeButton(\"Licencia de Producto\", (dialog12, which) -> {\r\n                progress.setMessage(\"Actualizando valores OC\");\r\n                progress.show();\r\n                Imprimir_Licencia();\r\n            });\r\n\r\n            dialog.setNeutralButton(\"Salir\", (dialog13, which) -> {\r\n                if (!imprimirDesdeBoton){\r\n                    progress.setMessage(\"Actualizando valores OC\");\r\n                    progress.show();\r\n                    Actualiza_Valores_Despues_Imprimir(true);\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(Objects.requireNonNull(new Object() {\r\n            }.getClass().getEnclosingMethod()).getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private void Imprimir_Licencia(){\r\n        try{\r\n\r\n            //CM_20210112: Impresión de barras.\r\n            BluetoothConnection printerIns= new BluetoothConnection(gl.MacPrinter);\r\n            printerIns.open();\r\n\r\n            if (printerIns.isConnected()){\r\n                ZebraPrinter zPrinterIns = ZebraPrinterFactory.getInstance(printerIns);\r\n                //zPrinterIns.sendCommand(\"! U1 setvar \\\"device.languages\\\" \\\"zpl\\\"\\r\\n\");\r\n                String zpl=\"\";\r\n\r\n                if (BeProducto.IdTipoEtiqueta==1){\r\n                     zpl = String.format(\"^XA \\n\" +\r\n                                    \"^MMT \\n\" +\r\n                                    \"^PW700 \\n\" +\r\n                                    \"^LL0406 \\n\" +\r\n                                    \"^LS0 \\n\" +\r\n                                    \"^FT231,61^A0I,30,24^FH^FD%1$s^FS \\n\" +\r\n                                    \"^FT550,61^A0I,30,24^FH^FD%2$s^FS \\n\" +\r\n                                    \"^FT670,306^A0I,30,24^FH^FD%3$s^FS \\n\" +\r\n                                    \"^FT292,61^A0I,30,24^FH^FDBodega:^FS \\n\" +\r\n                                    \"^FT670,61^A0I,30,24^FH^FDEmpresa:^FS \\n\" +\r\n                                    \"^FT670,367^A0I,25,24^FH^FDTOMWMS License Number^FS \\n\" +\r\n                                    \"^FO2,340^GB670,0,14^FS \\n\" +\r\n                                    \"^BY3,3,160^FT670,131^BCI,,Y,N \\n\" +\r\n                                    \"^FD%4$s^FS \\n\" +\r\n                                    \"^PQ1,0,1,Y \" +\r\n                                    \"^XZ\",gl.CodigoBodega + \" - \" + gl.gNomBodega, gl.gNomEmpresa,\r\n                            BeProducto.Codigo+\" - \"+BeProducto.Nombre,\r\n                            \"$\"+pNumeroLP);\r\n                }else if (BeProducto.IdTipoEtiqueta==2){\r\n                    zpl = String.format(\"^XA\\n\" +\r\n                            \"^MMT\\n\" +\r\n                            \"^PW609\\n\" +\r\n                            \"^LL0406\\n\" +\r\n                            \"^LS0\\n\" +\r\n                            \"^FT221,61^A0I,28,30^FH^FD%1$s^FS\\n\" +\r\n                            \"^FT480,61^A0I,28,30^FH^FD%2$s^FS\\n\" +\r\n                            \"^FT600,400^A0I,35,40^FH^FD%3$s^FS\\n\" +\r\n                            \"^FT322,61^A0I,26,30^FH^FDBodega:^FS\\n\" +\r\n                            \"^FT600,61^A0I,26,30^FH^FDEmpresa:^FS\\n\" +\r\n                            \"^FT600,500^A0I,25,24^FH^FDTOMWMS License Number^FS\\n\" +\r\n                            \"^FO2,450^GB670,14,14^FS\\n\" +\r\n                            \"^BY3,3,160^FT550,180^BCI,,Y,N\\n\" +\r\n                            \"^FD%1$s^FS\\n\" +\r\n                            \"^PQ1,0,1,Y \\n\" +\r\n                            \"^XZ\",gl.CodigoBodega + \" - \" + gl.gNomBodega, gl.gNomEmpresa,\r\n                            BeProducto.Codigo+\" - \"+BeProducto.Nombre,\r\n                            \"$\"+pNumeroLP);\r\n                }\r\n\r\n                zPrinterIns.sendCommand(zpl);\r\n\r\n                Thread.sleep(500);\r\n\r\n                // Close the connection to release resources.\r\n                printerIns.close();\r\n\r\n            }else{\r\n                mu.msgbox(\"No se pudo obtener conexión con la impresora\");\r\n            }\r\n\r\n            if (!imprimirDesdeBoton){\r\n                msgAskImprimir(\"Imprimir licencia producto\");\r\n            }\r\n            //Solo voy a llamar a esta opcióm al salir.\r\n            //Actualiza_Valores_Despues_Imprimir();\r\n\r\n        }catch (Exception e){\r\n            //#EJC20210126\r\n            if (e.getMessage().contains(\"Could not connect to device:\")){\r\n                mu.toast(\"Error al imprimir el código de barra. No existe conexión a la impresora: \"+ gl.MacPrinter);\r\n                if (!imprimirDesdeBoton){\r\n                    msgAskImprimir(\"Imprimir código producto\");\r\n                }\r\n            }else{\r\n                mu.msgbox(\"Imprimir_barra: \"+e.getMessage());\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    private void Imprimir_Barra(){\r\n\r\n        try{\r\n\r\n                //CM_20210112: Impresión de barras.\r\n                BluetoothConnection printerIns= new BluetoothConnection(gl.MacPrinter);\r\n                printerIns.open();\r\n\r\n                if (printerIns.isConnected()){\r\n                    ZebraPrinter zPrinterIns = ZebraPrinterFactory.getInstance(printerIns);\r\n                    //zPrinterIns.sendCommand(\"! U1 setvar \\\"device.languages\\\" \\\"zpl\\\"\\r\\n\");\r\n\r\n                    String zpl=\"\";\r\n\r\n                    if (BeProducto.IdTipoEtiqueta==1){\r\n                        zpl = String.format(\"^XA \\n\" +\r\n                                        \"^MMT \\n\" +\r\n                                        \"^PW700 \\n\" +\r\n                                        \"^LL0406 \\n\" +\r\n                                        \"^LS0 \\n\" +\r\n                                        \"^FT231,61^A0I,30,24^FH^FD%1$s^FS \\n\" +\r\n                                        \"^FT550,61^A0I,30,24^FH^FD%2$s^FS \\n\" +\r\n                                        \"^FT670,306^A0I,30,24^FH^FD%3$s^FS \\n\" +\r\n                                        \"^FT292,61^A0I,30,24^FH^FDBodega:^FS \\n\" +\r\n                                        \"^FT670,61^A0I,30,24^FH^FDEmpresa:^FS \\n\" +\r\n                                        \"^FT670,367^A0I,25,24^FH^FDTOMWMS Product Barcode^FS \\n\" +\r\n                                        \"^FO2,340^GB670,0,14^FS \\n\" +\r\n                                        \"^BY3,3,160^FT670,131^BCI,,Y,N \\n\" +\r\n                                        \"^FD%4$s^FS \\n\" +\r\n                                        \"^PQ1,0,1,Y \" +\r\n                                        \"^XZ\",gl.CodigoBodega + \" - \" + gl.gNomBodega, gl.gNomEmpresa,\r\n                                BeProducto.Codigo+\" - \"+BeProducto.Nombre,\r\n                                \"$\"+pNumeroLP);\r\n                    }else if (BeProducto.IdTipoEtiqueta==2){\r\n                        zpl = String.format(\"^XA\\n\" +\r\n                                        \"^MMT\\n\" +\r\n                                        \"^PW609\\n\" +\r\n                                        \"^LL0406\\n\" +\r\n                                        \"^LS0\\n\" +\r\n                                        \"^FT221,61^A0I,28,30^FH^FD%1$s^FS\\n\" +\r\n                                        \"^FT480,61^A0I,28,30^FH^FD%2$s^FS\\n\" +\r\n                                        \"^FT600,400^A0I,35,40^FH^FD%3$s^FS\\n\" +\r\n                                        \"^FT322,61^A0I,26,30^FH^FDBodega:^FS\\n\" +\r\n                                        \"^FT600,61^A0I,26,30^FH^FDEmpresa:^FS\\n\" +\r\n                                        \"^FT600,500^A0I,25,24^FH^FDTOMWMS  Product Barcode^FS\\n\" +\r\n                                        \"^FO2,450^GB670,14,14^FS\\n\" +\r\n                                        \"^BY3,3,160^FT550,180^BCI,,Y,N\\n\" +\r\n                                        \"^FD%1$s^FS\\n\" +\r\n                                        \"^PQ1,0,1,Y \\n\" +\r\n                                        \"^XZ\",gl.CodigoBodega + \" - \" + gl.gNomBodega, gl.gNomEmpresa,\r\n                                BeProducto.Codigo+\" - \"+BeProducto.Nombre,\r\n                                \"$\"+pNumeroLP);\r\n                    }\r\n\r\n                    zPrinterIns.sendCommand(zpl);\r\n\r\n                    Thread.sleep(500);\r\n\r\n                    // Close the connection to release resources.\r\n                    printerIns.close();\r\n\r\n                }else{\r\n                    mu.msgbox(\"No se pudo obtener conexión con la impresora\");\r\n                }\r\n\r\n            if (!imprimirDesdeBoton){\r\n                msgAskImprimir(\"Imprimir código producto\");\r\n            }\r\n            //Solo voy a llamar a esta opción cuando seleccione al salir\r\n           // Actualiza_Valores_Despues_Imprimir();\r\n\r\n        }catch (Exception e){\r\n            //#EJC20210126\r\n            if (e.getMessage().contains(\"Could not connect to device:\")){\r\n                mu.toast(\"Error al imprimir el código de barra. No existe conexión a la impresora: \"+ gl.MacPrinter);\r\n                if (!imprimirDesdeBoton){\r\n                    msgAskImprimir(\"Imprimir código producto\");\r\n                }\r\n            }else{\r\n                mu.msgbox(\"Imprimir_barra: \"+e.getMessage());\r\n            }\r\n        }\r\n    }\r\n\r\n    double Factor=0;\r\n    double TotalLinea=0;\r\n    double vCant =0;\r\n\r\n    private void Llena_Detalle_Recepcion_Nueva(){\r\n        Factor=0;\r\n        TotalLinea=0;\r\n        vCant =0;\r\n\r\n        try{\r\n\r\n\r\n            if (BeProducto!=null){\r\n\r\n                BeTransReDet = new clsBeTrans_re_det();\r\n                //#CKFK 20210322 Corregí el IdPropietarioBodega colocando el de la orden de compra\r\n                BeTransReDet.IdPropietarioBodega =  pIdPropietarioBodega;\r\n\r\n                BeTransReDet.Producto = new clsBeProducto();\r\n                BeTransReDet.Producto.IdProducto = BeProducto.IdProducto;\r\n                BeTransReDet.Producto.Codigo = BeProducto.Codigo;\r\n                BeTransReDet.IdProductoBodega = BeProducto.IdProductoBodega;\r\n                BeTransReDet.Nombre_producto = BeProducto.Nombre;\r\n                BeTransReDet.IdRecepcionEnc = gl.gBeRecepcion.IdRecepcionEnc;\r\n                BeTransReDet.IdRecepcionDet = pIdRecepcionDet;\r\n\r\n                BeTransReDet.Presentacion = new clsBeProducto_Presentacion();\r\n\r\n                if (IdPreseSelect>0){\r\n\r\n                    BeTransReDet.Presentacion.IdPresentacion = IdPreseSelect;\r\n                    BeTransReDet.Presentacion.Factor = BeProducto.Presentacion.Factor;\r\n                    BeTransReDet.IdPresentacion = IdPreseSelect;\r\n\r\n                    clsBeProducto_Presentacion bePresentacion;\r\n\r\n                    bePresentacion = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==IdPreseSelect).first();\r\n\r\n                    BeTransReDet.Presentacion = bePresentacion;\r\n\r\n                    if(!bePresentacion.EsPallet){\r\n                        Factor = bePresentacion.Factor;\r\n                    }else{\r\n                        bePresentacion.CamasPorTarima=CamasPorTarima;\r\n                        bePresentacion.CajasPorCama=CajasPorCama;\r\n                        Factor = bePresentacion.Factor * bePresentacion.CamasPorTarima * bePresentacion.CajasPorCama;\r\n                    }\r\n\r\n                }\r\n\r\n                BeTransReDet.No_Linea = pLineaOC;\r\n\r\n                if (txtUmbasRec.getText().toString().isEmpty()){\r\n                    mu.msgbox(\"No existe Unidad de Medida en Producto \"+BeProducto.Codigo);\r\n                    return;\r\n                }else{\r\n                    BeTransReDet.UnidadMedida = new clsBeUnidad_medida();\r\n                    BeTransReDet.UnidadMedida.IdUnidadMedida = BeProducto.UnidadMedida.IdUnidadMedida;\r\n                    BeTransReDet.IdUnidadMedida = BeProducto.UnidadMedida.IdUnidadMedida;\r\n                }\r\n\r\n                BeTransReDet.ProductoEstado = new clsBeProducto_estado();\r\n                BeTransReDet.ProductoEstado.IdEstado = IdEstadoSelect;\r\n\r\n                BeTransReDet.IdProductoEstado = IdEstadoSelect;\r\n\r\n                BeTransReDet.IsNew = true;\r\n\r\n                BeTransReDet.User_agr = gl.IdOperador+\"\";\r\n                BeTransReDet.Fec_agr = String.valueOf(du.getFechaActual());\r\n\r\n                BeTransReDet.MotivoDevolucion = new clsBeMotivo_devolucion();\r\n\r\n                //VALIDACIÓN DE CANTIDADES CON REGLA SEGÚN PROPIETARIO\r\n\r\n               if (txtCantidadRec.getText().toString().isEmpty()){\r\n                   mu.msgbox(\"Ingrese la cantidad a Recibir\");\r\n                   txtCantidadRec.requestFocus();\r\n                   return;\r\n               }else if (Double.parseDouble(txtCantidadRec.getText().toString())==0){\r\n                   mu.msgbox(\"La cantidad a Recibir debe ser mayor a 0\");\r\n                   txtCantidadRec.requestFocus();\r\n                   return;\r\n               }else{\r\n                   BeTransReDet.cantidad_recibida = Double.parseDouble(txtCantidadRec.getText().toString());\r\n               }\r\n\r\n               if (txtPesoUnitario.getText().toString().isEmpty()){\r\n                   BeTransReDet.peso_unitario = 0;\r\n               }else{\r\n                   BeTransReDet.peso_unitario = Double.parseDouble(txtPesoUnitario.getText().toString());\r\n               }\r\n\r\n                BeTransReDet.Nombre_producto = BeProducto.Nombre;\r\n\r\n                if (IdPreseSelect>0){\r\n                    BeTransReDet.Nombre_presentacion = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==IdPreseSelect).select(c->c.Nombre).first();\r\n                }else{\r\n                    BeTransReDet.Nombre_presentacion = \"\";\r\n                }\r\n                BeTransReDet.Nombre_unidad_medida = BeProducto.UnidadMedida.Nombre;\r\n                BeTransReDet.Codigo_Producto = BeProducto.Codigo;\r\n\r\n                //#CKFK 20201228 Agregué la funcionalidad de poder determinar si el pallet es o no estandar\r\n                BeTransReDet.Pallet_No_Estandar=(chkPalletNoEstandar.isChecked());\r\n\r\n                BeTransReDet.ProductoEstado = new clsBeProducto_estado();\r\n\r\n                if (IdEstadoSelect>0) {\r\n                    BeTransReDet.ProductoEstado.IdEstado = IdEstadoSelect;\r\n                }else {\r\n                    mu.msgbox(\"No existe Estado en Producto \"+BeProducto.Codigo);\r\n                    return;\r\n                }\r\n\r\n                if (BeProducto.Control_lote){\r\n\r\n                    if (txtLoteRec.getText().toString().isEmpty()){\r\n                         mu.msgbox(\"Debe ingresar el lote del producto \"+BeProducto.Codigo);\r\n                         return;\r\n                    }else{\r\n                        BeTransReDet.Lote = txtLoteRec.getText().toString();\r\n                        gl.gLoteAnterior = txtLoteRec.getText().toString();\r\n                    }\r\n\r\n                }else{\r\n                    if (!txtLoteRec.getText().toString().isEmpty()){\r\n                        BeTransReDet.Lote = txtLoteRec.getText().toString();\r\n                        gl.gLoteAnterior = txtLoteRec.getText().toString();\r\n                    }\r\n\r\n                }\r\n\r\n                if (!BeProducto.Control_vencimiento){\r\n                    BeTransReDet.Fecha_vence = \"\";\r\n                }else{\r\n                    BeTransReDet.Fecha_vence = du.convierteFecha(cmbVenceRec.getText().toString().trim());\r\n                }\r\n\r\n                //Llamado 1\r\n                Continua_Llenando_Detalle_Recepcion_Nueva();\r\n\r\n            }\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Llena_Detalle_Recepcion_Nueva:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Llena_Detalle_Recepcion_Existente(){\r\n        Factor=0;\r\n        TotalLinea=0;\r\n        vCant =0;\r\n\r\n        try{\r\n\r\n            if (BeProducto!=null){\r\n                BeTransReDet = new clsBeTrans_re_det();\r\n                BeTransReDet = pListTransRecDet.items.get(0);\r\n\r\n                //#CKFK 20210322 Corregí el IdPropietarioBodega colocando el de la orden de compra\r\n                BeTransReDet.IdPropietarioBodega =  pIdPropietarioBodega;\r\n\r\n                BeTransReDet.Producto = new clsBeProducto();\r\n                BeTransReDet.Producto.IdProducto = BeProducto.IdProducto;\r\n                BeTransReDet.Producto.Codigo = BeProducto.Codigo;\r\n                BeTransReDet.IdProductoBodega = BeProducto.IdProductoBodega;\r\n                BeTransReDet.Nombre_producto = BeProducto.Nombre;\r\n                BeTransReDet.IdRecepcionEnc = gl.gBeRecepcion.IdRecepcionEnc;\r\n                BeTransReDet.IdRecepcionDet = pIdRecepcionDet;\r\n\r\n                BeTransReDet.Presentacion = new clsBeProducto_Presentacion();\r\n\r\n                if (IdPreseSelect>0){\r\n\r\n                    BeTransReDet.Presentacion.IdPresentacion = IdPreseSelect;\r\n                    BeTransReDet.Presentacion.Factor = BeProducto.Presentacion.Factor;\r\n                    BeTransReDet.IdPresentacion = IdPreseSelect;\r\n\r\n                    clsBeProducto_Presentacion bePresentacion;\r\n\r\n                    bePresentacion = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==IdPreseSelect).first();\r\n\r\n                    if(!bePresentacion.EsPallet){\r\n                        Factor = bePresentacion.Factor;\r\n                    }else{\r\n                        Factor = bePresentacion.Factor * bePresentacion.CamasPorTarima * bePresentacion.CajasPorCama;\r\n                    }\r\n\r\n                }\r\n\r\n                BeTransReDet.No_Linea = pLineaOC;\r\n\r\n                if (txtUmbasRec.getText().toString().isEmpty()){\r\n                    mu.msgbox(\"No existe Unidad de Medida en Producto \"+BeProducto.Codigo);\r\n                    return;\r\n                }else{\r\n                    BeTransReDet.UnidadMedida = new clsBeUnidad_medida();\r\n                    BeTransReDet.UnidadMedida.IdUnidadMedida = BeProducto.UnidadMedida.IdUnidadMedida;\r\n                    BeTransReDet.IdUnidadMedida = BeProducto.UnidadMedida.IdUnidadMedida;\r\n                }\r\n\r\n                BeTransReDet.ProductoEstado = new clsBeProducto_estado();\r\n                BeTransReDet.ProductoEstado.IdEstado = IdEstadoSelect;\r\n\r\n                BeTransReDet.IdProductoEstado = IdEstadoSelect;\r\n\r\n                BeTransReDet.IsNew = true;\r\n                BeTransReDet.User_agr = gl.IdOperador+\"\";\r\n                BeTransReDet.Fec_agr = String.valueOf(du.getFechaActual());\r\n\r\n                //#CKFK 20201228 Agregué la funcionalidad de poder determinar si el pallet es o no estandar\r\n                BeTransReDet.Pallet_No_Estandar=(chkPalletNoEstandar.isChecked());\r\n\r\n                BeTransReDet.MotivoDevolucion = new clsBeMotivo_devolucion();\r\n\r\n                //VALIDACIÓN DE CANTIDADES CON REGLA SEGÚN PROPIETARIO\r\n\r\n                if (txtCantidadRec.getText().toString().isEmpty()){\r\n                    mu.msgbox(\"Ingrese la cantidad a Recibir\");\r\n                    txtCantidadRec.requestFocus();\r\n                    return;\r\n                }else if (Double.parseDouble(txtCantidadRec.getText().toString())==0){\r\n                    mu.msgbox(\"La cantidad a Recibir debe ser mayor a 0\");\r\n                    txtCantidadRec.requestFocus();\r\n                    return;\r\n                }else{\r\n                    BeTransReDet.cantidad_recibida = Double.parseDouble(txtCantidadRec.getText().toString());\r\n                }\r\n\r\n                if (txtPesoUnitario.getText().toString().isEmpty()){\r\n                    BeTransReDet.peso_unitario = 0;\r\n                }else{\r\n                    BeTransReDet.peso_unitario = Double.parseDouble(txtPesoUnitario.getText().toString());\r\n                }\r\n\r\n                BeTransReDet.Nombre_producto = BeProducto.Nombre;\r\n\r\n                if (IdPreseSelect>0){\r\n                    BeTransReDet.Nombre_presentacion = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==IdPreseSelect).select(c->c.Nombre).first();\r\n                }else{\r\n                    BeTransReDet.Nombre_presentacion = \"\";\r\n                }\r\n                BeTransReDet.Nombre_unidad_medida = BeProducto.UnidadMedida.Nombre;\r\n                BeTransReDet.Codigo_Producto = BeProducto.Codigo;\r\n\r\n                BeTransReDet.ProductoEstado = new clsBeProducto_estado();\r\n\r\n                if (IdEstadoSelect>0) {\r\n                    BeTransReDet.ProductoEstado.IdEstado = IdEstadoSelect;\r\n                }else {\r\n                    mu.msgbox(\"No existe Estado en Producto \"+BeProducto.Codigo);\r\n                    return;\r\n                }\r\n\r\n                if (BeProducto.Control_lote){\r\n\r\n                    if (txtLoteRec.getText().toString().isEmpty()){\r\n                        mu.msgbox(\"Debe ingresar el lote del producto \"+BeProducto.Codigo);\r\n                        return;\r\n                    }else{\r\n                        BeTransReDet.Lote = txtLoteRec.getText().toString();\r\n                        gl.gLoteAnterior = txtLoteRec.getText().toString();\r\n                    }\r\n\r\n                }else{\r\n                    if (!txtLoteRec.getText().toString().isEmpty()){\r\n                        BeTransReDet.Lote = txtLoteRec.getText().toString();\r\n                        gl.gLoteAnterior = txtLoteRec.getText().toString();\r\n                    }\r\n\r\n                }\r\n\r\n                if (!BeProducto.Control_vencimiento){\r\n                    BeTransReDet.Fecha_vence = \"\";\r\n                }else{\r\n                    BeTransReDet.Fecha_vence = du.convierteFecha(cmbVenceRec.getText().toString().trim());\r\n                }\r\n\r\n                //Llamado 2\r\n                Continua_Llenando_Detalle_Recepcion_Nueva();\r\n\r\n            }\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Llena_Detalle_Recepcion_Nueva:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Continua_Llenando_Detalle_Recepcion_Nueva(){\r\n\r\n        try{\r\n\r\n            BeTransReDet.Fecha_ingreso = String.valueOf(du.getFechaActual());\r\n\r\n            if (!txtPeso.getText().toString().isEmpty()){\r\n                BeTransReDet.Peso = Double.parseDouble(txtPeso.getText().toString());\r\n            }else{\r\n                BeTransReDet.Peso= 0;\r\n            }\r\n            BeTransReDet.Peso_Estadistico = 0;\r\n            BeTransReDet.Peso_Minimo = 0;\r\n            BeTransReDet.Peso_Maximo = 0;\r\n\r\n            BeTransReDet.Observacion = \"\";\r\n            BeTransReDet.Aniada = 0;\r\n\r\n            Valida_Costo();\r\n\r\n            if (!txtCostoReal.getText().toString().isEmpty()) {\r\n                BeTransReDet.Costo = Double.parseDouble(txtCostoReal.getText().toString());\r\n                BeTransReDet.Costo_Oc = Double.parseDouble(txtCostoOC.getText().toString());\r\n            }else{\r\n                BeTransReDet.Costo = 0;\r\n                BeTransReDet.Costo_Oc =0;\r\n            }\r\n            BeTransReDet.Costo_Estadistico = 0;\r\n\r\n            BeTransReDet.IdOperadorBodega = gl.OperadorBodega.IdOperadorBodega;\r\n            BeTransReDet.Nombre_producto_estado = stream(LProductoEstado.items).where(c->c.IdEstado==IdEstadoSelect).select(c->c.Nombre).first();\r\n\r\n            if (!txtCantidadRec.getText().toString().isEmpty()){\r\n                vCant =Double.parseDouble(txtCantidadRec.getText().toString());\r\n            }\r\n\r\n            if (gl.gBeRecepcion.Muestra_precio){\r\n                TotalLinea = Double.parseDouble(txtCostoReal.getText().toString()) * vCant;\r\n            }else{\r\n                TotalLinea = vCant;\r\n            }\r\n\r\n            //#CKFK 20210412 Llenar tabla de detalle lotes\r\n            clsBeTrans_oc_det_loteList detalle_lotes;\r\n            detalle_lotes=gl.gBeOrdenCompra.DetalleLotes;\r\n\r\n            if (detalle_lotes.items != null ){\r\n                if (detalle_lotes.items.size()>0){\r\n\r\n                    BeDetalleLotes = stream(detalle_lotes.items)\r\n                            .where(c -> {\r\n                                try {\r\n                                    return c.IdProductoBodega  == BeProducto.IdProductoBodega &&\r\n                                            c.No_linea == BeOcDet.No_Linea &&\r\n                                            c.IdOrdenCompraDet == pIdOrdenCompraDet &&\r\n                                            c.Fecha_vence.equals(du.convierteFecha(cmbVence.getSelectedItem().toString())) &&\r\n                                            c.Ubicacion.equals(ubiDetLote) &&\r\n                                            c.Lote.equals(cmbLote.getSelectedItem().toString());\r\n                                } catch (Exception e) {\r\n                                    e.printStackTrace();\r\n                                }\r\n                                return false;\r\n                            })\r\n                            .first();\r\n                    BeDetalleLotes.Cantidad_recibida = Integer.parseInt(txtCantidadRec.getText().toString());\r\n                    BeDetalleLotes.IsNew = true;\r\n                }\r\n            }else{\r\n                BeDetalleLotes = null;\r\n            }\r\n\r\n            listaStockPalletsNuevos = new clsBeStock_recList();\r\n            listaProdPalletsNuevos = new clsBeProducto_palletList();\r\n\r\n            if (pListBeStockRec.items!=null){\r\n\r\n                clsBeStock_recList listaStock = new clsBeStock_recList();\r\n                clsBeProducto_palletList listaProdPallets = new clsBeProducto_palletList();\r\n\r\n                if (BeTransReDet.Presentacion.IdPresentacion!= 0){\r\n\r\n                    listaStock.items = stream(pListBeStockRec.items).where(c->c.IdProductoBodega == BeTransReDet.IdProductoBodega  &&\r\n                            c.IdRecepcionDet == pIdRecepcionDet && c.Presentacion.IdPresentacion == BeTransReDet.Presentacion.IdPresentacion).toList();\r\n\r\n                    if (pListBeProductoPallet.items!=null){\r\n\r\n                        listaProdPallets.items = stream(pListBeProductoPallet.items).where(p->p.IdRecepcionDet == BeTransReDet.IdRecepcionDet &&\r\n                                p.IdProductoBodega == BeTransReDet.IdProductoBodega &&\r\n                                p.IdPresentacion == BeTransReDet.Presentacion.IdPresentacion).toList();\r\n\r\n                        for (clsBeProducto_pallet BePP : listaProdPallets.items){\r\n\r\n                            BePP.Lote = txtLoteRec.getText().toString();\r\n                            BePP.User_agr = gl.OperadorBodega.IdOperadorBodega+\"\";\r\n                            BePP.User_mod = gl.OperadorBodega.IdOperadorBodega+\"\";\r\n                            BePP.Cantidad = (1 * Factor);\r\n\r\n                            if (BeProducto.Control_vencimiento){\r\n                                BePP.Fecha_Vence = du.convierteFecha(cmbVenceRec.getText().toString().trim());\r\n                            }else {\r\n                                BePP.Fecha_Vence = \"\";\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }else{\r\n\r\n                    listaStock.items =stream(pListBeStockRec.items).where(c->c.IdProductoBodega == BeTransReDet.IdProductoBodega  &&\r\n                            c.IdRecepcionDet == pIdRecepcionDet\r\n                            && c.IdUnidadMedida == BeTransReDet.IdUnidadMedida).toList();\r\n                }\r\n\r\n                if (stream(listaStock.items).count()==0){\r\n                    mu.msgbox(\"¡ERROR!, reporte al equipo de desarrollo\");\r\n                    return;\r\n                }\r\n\r\n                for( clsBeStock_rec BeStockRec : listaStock.items){\r\n\r\n                    BeStockRec.IsNew = true;\r\n\r\n                    BeStockRec.ProductoEstado = new  clsBeProducto_estado();\r\n\r\n                    if (IdEstadoSelect>0){\r\n\r\n                        BeStockRec.ProductoEstado.IdEstado = IdEstadoSelect;\r\n                        BeStockRec.IdProductoEstado = IdEstadoSelect;\r\n\r\n                        if (LProductoEstado.items.size()> 0){\r\n\r\n                            clsBeProducto_estado BeEstado;\r\n\r\n                            BeEstado = stream(LProductoEstado.items).where(c->c.IdEstado ==IdEstadoSelect).first();\r\n\r\n                            if (BeEstado.IdUbicacionBodegaDefecto>0){\r\n                                BeStockRecNuevaRec = BeStockRec;\r\n                                vCantNuevaRec = vCant;\r\n                                vFactorNuevaRec = Factor;\r\n                                BeStockRecNuevaRec.IdUbicacion =  BeEstado.IdUbicacionBodegaDefecto;\r\n                            }else{\r\n                                BeStockRec.IdUbicacion = gl.gBeRecepcion.IdUbicacionRecepcion;\r\n                            }\r\n                            /*if (BeEstado.Danado){\r\n                                BeStockRecNuevaRec = BeStockRec;\r\n                                vCantNuevaRec = vCant;\r\n                                vFactorNuevaRec = Factor;\r\n                                BeStockRecNuevaRec.IdUbicacion =  BeEstado.IdUbicacionBodegaDefecto;\r\n                                BeStockRec.IdUbicacion =  BeEstado.IdUbicacionBodegaDefecto;\r\n                                *//*execws(13); //m_proxy.Get_IdUbicMerma_By_IdBodega(gIdBodega)\r\n                                return;*//*\r\n                            }else{\r\n                                BeStockRec.IdUbicacion = gl.gBeRecepcion.IdUbicacionRecepcion;//CInt(txtIdUbicacion.Text.Trim)\r\n                            }*/\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    Continua_Guardando_Rec_Nueva(BeStockRec,Factor,vCant);\r\n\r\n                    if (gl.mode==1){\r\n                        pListTransRecDet.items.add(BeTransReDet);\r\n                    }\r\n                }\r\n\r\n                if (listaStockPalletsNuevos!=null){\r\n                    if (listaStockPalletsNuevos.items!=null){\r\n                        pListBeStockRec.items.addAll(listaStockPalletsNuevos.items);\r\n                    }\r\n                }\r\n\r\n                if (listaStockPalletsNuevos!=null){\r\n                    if (listaStockPalletsNuevos.items!=null){\r\n                        pListBeProductoPallet.items.addAll(listaProdPalletsNuevos.items);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            BeTransReDet.MotivoDevolucion = new  clsBeMotivo_devolucion();\r\n\r\n            BeTransReDet.Atributo_Variante_1 = \"\";\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Continua:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Continua_Guardando_Rec_Nueva(clsBeStock_rec BeStockRec,double Factor,double vCant){\r\n\r\n        try{\r\n\r\n\r\n            BeStockRec.Presentacion = new clsBeProducto_Presentacion();\r\n\r\n            if (IdPreseSelect>0){\r\n\r\n                for ( clsBeProducto_Presentacion pres:BeProducto.Presentaciones.items){\r\n                    if (pres.IdPresentacion==IdPreseSelect){\r\n                        BeStockRec.Presentacion = pres;\r\n                    }\r\n                }\r\n\r\n                BeStockRec.IdPresentacion = IdPreseSelect;\r\n\r\n            }\r\n\r\n            if (!txtUmbasRec.getText().toString().isEmpty()){\r\n                BeStockRec.IdUnidadMedida = BeProducto.UnidadMedida.IdUnidadMedida;\r\n            }\r\n\r\n            BeStockRec.IdRecepcionEnc = gl.gBeRecepcion.IdRecepcionEnc;\r\n\r\n            if (!txtLoteRec.getText().toString().isEmpty()){\r\n                BeStockRec.Lote = txtLoteRec.getText().toString();\r\n            }\r\n\r\n            if (IdPreseSelect>0){\r\n\r\n                if (!(BeStockRec.Presentacion.EsPallet||chkPaletizar.isChecked()) && BeStockRec.Lic_plate.isEmpty()){\r\n                    Factor = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion == IdPreseSelect).select(c->c.Factor).first();\r\n                    BeStockRec.Cantidad += vCant * Factor;\r\n                }else if(chkPaletizar.isChecked()){\r\n                    BeStockRec.Cantidad += vCant * Factor;\r\n                }else if (BeStockRec.Presentacion.EsPallet&&BeStockRec.Presentacion.Genera_lp_auto){\r\n                    if (Factor == 0) Factor=1;\r\n                    BeStockRec.Cantidad = 1 * Factor;\r\n                }\r\n\r\n            }else{\r\n                BeStockRec.Cantidad = vCant;\r\n                //#EJC20201217:Si es UMBA y el LicPlate no es vacío asignar.\r\n                if (!txtNoLP.getText().toString().isEmpty()){\r\n                    BeStockRec.Lic_plate= txtNoLP.getText().toString();\r\n                }else{\r\n                    if (!pNumeroLP.equals(\"\") && !pNumeroLP.isEmpty()){\r\n                        txtNoLP.setText(pNumeroLP);\r\n                        BeStockRec.Lic_plate= txtNoLP.getText().toString();\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (BeProducto.Control_vencimiento){\r\n                BeStockRec.Fecha_vence = du.convierteFecha(cmbVenceRec.getText().toString().trim());\r\n            }else{\r\n                BeStockRec.Fecha_vence = \"\";\r\n            }\r\n\r\n            BeStockRec.ProductoValidado = true;\r\n            BeStockRec.No_linea = pLineaOC;\r\n\r\n            //#CKFK 20201228 Agregué la funcionalidad de poder determinar si el pallet es o no estandar\r\n            BeStockRec.Pallet_No_Estandar = (chkPalletNoEstandar.isChecked());\r\n\r\n            if (Escaneo_Pallet){\r\n                BeStockRec.Lic_plate = BeINavBarraPallet.Codigo_barra;\r\n                BeStockRec.Uds_lic_plate = BeINavBarraPallet.Cantidad_UMP;\r\n                BeStockRec.No_bulto = 0;\r\n                BeTransReDet.Lic_plate = BeINavBarraPallet.Codigo_barra;\r\n            }else{\r\n                if (BeTransReDet.Lic_plate!=null){\r\n                    if(BeStockRec.Lic_plate.equals(\"\")){\r\n                        if (!txtNoLP.getText().toString().isEmpty()){\r\n                            BeStockRec.Lic_plate= txtNoLP.getText().toString();\r\n                        }else{\r\n                            if (!pNumeroLP.equals(\"\") && !pNumeroLP.isEmpty()){\r\n                                txtNoLP.setText(pNumeroLP);\r\n                                BeStockRec.Lic_plate= txtNoLP.getText().toString();\r\n                            }\r\n                        }\r\n                    }\r\n                    BeTransReDet.Lic_plate = BeStockRec.Lic_plate;\r\n                }else{\r\n                    BeTransReDet.Lic_plate = \"\";\r\n                }\r\n            }\r\n\r\n            if (BeStockRec.Presentacion.IdPresentacion > 0){\r\n\r\n                if (BeStockRec.Presentacion.EsPallet){\r\n\r\n                    if (Double.parseDouble(txtCantidadRec.getText().toString().replace(\",\",\"\"))==1){\r\n                        BeStockRec.Cantidad = Double.parseDouble(txtCantidadRec.getText().toString().replace(\",\",\"\"))*Factor;\r\n                    }else{\r\n\r\n                        if (BeStockRec.Presentacion.Genera_lp_auto){\r\n\r\n                            int vCantidadPallets =Integer.parseInt(txtCantidadRec.getText().toString().replace(\",\",\"\"));\r\n                            int vIndiceLista;\r\n\r\n                           vBeStockRec = new clsBeStock_rec();\r\n                           BeProdPallet  = new clsBeProducto_pallet();\r\n\r\n                            for (int x = 0; x <vCantidadPallets; x++) {\r\n\r\n                                vIndiceLista = listaStockPalletsNuevos.items.size()-1;\r\n\r\n                                if (x==1){\r\n                                    vBeStockRec = BeStockRec;\r\n                                    vBeStockRec.Cantidad = (1 * Factor);\r\n                                }else{\r\n                                    vBeStockRec = new  clsBeStock_rec();\r\n                                    vBeStockRec = listaStockPalletsNuevos.items.get(vIndiceLista);\r\n                                }\r\n\r\n                                vBeStockRec.Cantidad = (1 * Factor);\r\n\r\n                                if (!vBeStockRec.Lic_plate.isEmpty()){\r\n                                    Pallet_Correcto();\r\n                                }else{\r\n                                    execws(15);\r\n                                }\r\n\r\n                            }\r\n\r\n                        }else{\r\n                            toastlong(\"La cantidad de pallets es > 1 y genera_lp_auto es Falso, debe recibir los pallets de forma unitaria (Cantidad = 1)\");\r\n                        }\r\n                    }\r\n\r\n                }else{\r\n\r\n                    BeStockRec.Cantidad = Double.parseDouble(txtCantidadRec.getText().toString().replace(\",\",\"\"))*Factor;\r\n\r\n                    if (BeStockRec.Presentacion.Imprime_barra){\r\n\r\n                        BeProdPallet = new clsBeProducto_pallet();\r\n\r\n                        BeProdPallet.IdPropietarioBodega = BeTransReDet.IdPropietarioBodega;\r\n                        BeProdPallet.IdProductoBodega = BeTransReDet.IdProductoBodega;\r\n                        BeProdPallet.IdPresentacion = BeStockRec.Presentacion.IdPresentacion;\r\n                        BeProdPallet.IdRecepcionDet = BeTransReDet.IdRecepcionDet;\r\n                        BeProdPallet.IdOperadorBodega = gl.OperadorBodega.IdOperadorBodega;\r\n                        BeProdPallet.Impreso = false;\r\n                        BeProdPallet.IdImpresora = 1;\r\n                        BeProdPallet.Activo = true;\r\n                        BeProdPallet.Fecha_ingreso = String.valueOf(du.getFechaActual());\r\n                        if(BeStockRec.Lic_plate.equals(\"\")){\r\n                            if (!txtNoLP.getText().toString().isEmpty()){\r\n                                BeStockRec.Lic_plate= txtNoLP.getText().toString();\r\n                            }else{\r\n                                if (!pNumeroLP.equals(\"\") && !pNumeroLP.isEmpty()){\r\n                                    txtNoLP.setText(pNumeroLP);\r\n                                    BeStockRec.Lic_plate= txtNoLP.getText().toString();\r\n                                }\r\n                            }\r\n                        }\r\n                        BeProdPallet.Codigo_Barra = BeStockRec.Lic_plate;\r\n                        BeProdPallet.Codigo_Producto = BeProducto.Codigo;\r\n                        BeProdPallet.Reimpresiones = 0;\r\n                        BeProdPallet.Cantidad = BeStockRec.Cantidad;\r\n                        BeProdPallet.Fecha_Vence = BeStockRec.Fecha_vence;\r\n                        BeProdPallet.Fec_agr =String.valueOf(du.getFechaActual());\r\n                        BeProdPallet.Fec_mod = String.valueOf(du.getFechaActual());\r\n                        BeProdPallet.Lote = BeStockRec.Lote;\r\n                        BeProdPallet.User_agr = gl.OperadorBodega.IdOperadorBodega+\"\";\r\n                        BeProdPallet.User_mod = gl.OperadorBodega.IdOperadorBodega+\"\";\r\n                        BeProdPallet.IsNew = gl.mode == 1;\r\n\r\n                        if (listaProdPalletsNuevos.items == null) {\r\n                            listaProdPalletsNuevos.items = new ArrayList<>();\r\n                        }\r\n                        listaProdPalletsNuevos.items.add(BeProdPallet);\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }else{\r\n                BeStockRec.Cantidad = Double.parseDouble(txtCantidadRec.getText().toString().replace(\",\",\"\"));\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Continua_Guardando_Rec_Nueva: \"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Terminar_Guardar_Detalle_Recepcion_Nueva(){\r\n\r\n        try{\r\n\r\n            listaStockPalletsNuevos.items.add(vBeStockRec);\r\n\r\n            if (BeStockRecNuevaRec.Presentacion.Imprime_barra){\r\n\r\n                BeProdPallet = new  clsBeProducto_pallet();\r\n                BeProdPallet.IdPropietarioBodega = BeTransReDet.IdPropietarioBodega;\r\n                BeProdPallet.IdProductoBodega = BeTransReDet.IdProductoBodega;\r\n                BeProdPallet.IdOperadorBodega = gl.OperadorBodega.IdOperadorBodega;\r\n                BeProdPallet.IdPresentacion = vBeStockRec.Presentacion.IdPresentacion;\r\n                BeProdPallet.IdRecepcionDet = vBeStockRec.IdRecepcionDet;\r\n                BeProdPallet.Impreso = false;\r\n                BeProdPallet.IdImpresora = 1;\r\n                BeProdPallet.Activo = true;\r\n                BeProdPallet.Fecha_ingreso = String.valueOf(du.getFechaActual());\r\n                BeProdPallet.Codigo_Barra = vBeStockRec.Lic_plate;\r\n                BeProdPallet.Codigo_Producto = BeProducto.Codigo;\r\n                BeProdPallet.Reimpresiones = 0;\r\n                BeProdPallet.Cantidad = vBeStockRec.Cantidad;\r\n                if (BeProducto.Control_vencimiento){\r\n                    BeProdPallet.Fecha_Vence = vBeStockRec.Fecha_vence;\r\n                }else{\r\n                    BeProdPallet.Fecha_Vence = \"\";\r\n                }\r\n                BeProdPallet.Fec_agr = String.valueOf(du.getFechaActual());\r\n                BeProdPallet.Fec_mod = String.valueOf(du.getFechaActual());\r\n                BeProdPallet.Lote = vBeStockRec.Lote;\r\n                BeProdPallet.User_agr = gl.OperadorBodega+\"\";\r\n                BeProdPallet.User_mod = gl.OperadorBodega.IdOperadorBodega+\"\";\r\n                BeProdPallet.IsNew = gl.mode == 1;\r\n\r\n                if (listaProdPalletsNuevos.items == null) {\r\n                    listaProdPalletsNuevos.items = new ArrayList<>();\r\n                }\r\n                listaProdPalletsNuevos.items.add(BeProdPallet);\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Terminar_Guardar_Detalle_Recepcion_Nueva: \"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Pallet_Correcto(){\r\n\r\n        try{\r\n\r\n            execws(14);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Pallet_Correcto:\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void Valida_Costo(){\r\n\r\n        try{\r\n\r\n            if (txtCostoReal.getText().toString().isEmpty()||txtCostoReal.getText().toString().equals(\"0\")||txtCostoReal.getText().toString().equals(\"0.0\")){\r\n\r\n                    if (IdPreseSelect>0){\r\n                        txtCostoReal.setText(Get_Costo_Presentacion()+\"\");\r\n                    }\r\n\r\n                    if (txtCostoReal.getText().toString().equals(\"0\")||txtCostoReal.getText().toString().equals(\"0.0\")){\r\n                        txtCostoReal.setText(txtCostoOC.getText().toString());\r\n                    }\r\n\r\n                }else if(Double.parseDouble(txtCostoReal.getText().toString())<=0){\r\n                    mu.msgbox(\"El costo debe ser mayor a 0\");\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Valida_Costo\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private double Get_Costo_Presentacion(){\r\n\r\n        double cost=0;\r\n\r\n        try{\r\n\r\n            if (BeProducto.Presentaciones!=null){\r\n\r\n                if (BeProducto.Presentaciones.items!=null){\r\n                    cost = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion == IdPreseSelect).select(c->c.Costo).first();\r\n                }\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"GetCostoPresentacion\"+e.getMessage());\r\n        }\r\n\r\n        return cost;\r\n    }\r\n\r\n    private void Valida_Cantidad_Recibida(){\r\n        double Cantidad;\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Validando cantidad\");\r\n\r\n            if (gl.TipoOpcion==2){\r\n                return;\r\n            }\r\n\r\n            if (txtCantidadRec.getText().toString().isEmpty()){\r\n                Cantidad =0;\r\n            }else{\r\n                Cantidad = Double.parseDouble(txtCantidadRec.getText().toString());\r\n            }\r\n\r\n            if (gl.mode==2){\r\n                Cant_Pendiente =mu.round(Cant_Pendiente + Cant_Recibida_Anterior,gl.gCantDecCalculo);\r\n            }\r\n\r\n            if (Cant_Pendiente > Cantidad){\r\n                msgValidaCantidad(\"La cantidad \"+Cantidad+\" ingresada es correcta para el producto \"+BeProducto.Codigo);\r\n            }else if(Cant_Pendiente < Cantidad){\r\n                 msgExcedeCantidad();\r\n            }else if (BeProducto.Control_vencimiento){\r\n                valida_fecha_vencimiento();\r\n            }else{\r\n                DespuesDeValidarCantidad();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"ValidaCantidadRecibida\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void msgValidaProductoPallet(String msg) {\r\n\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", (dialog1, which) -> Guardar_Pallet());\r\n\r\n            dialog.setNegativeButton(\"No\", (dialog12, which) -> {\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"msgValidaProductoPallet\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgValidaFechaVence(String msg) {\r\n\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", (dialog1, which) -> {\r\n                DespuesDeValidarCantidad();\r\n                //Continua_Llenando_Detalle_Recepcion_Nueva();\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", (dialog12, which) -> {\r\n                progress.cancel();\r\n                cmbVenceRec.requestFocus();\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"msgValidaFechaVence\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgExcedeCantidad() {\r\n\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(\"Excede la cantidad solicitada. ¿Recibir de todas formas esta cantidad?\");\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", (dialog12, which) -> {\r\n                //DespuesDeValidarCantidad();\r\n                valida_fecha_vencimiento();\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", (dialog1, which) -> progress.cancel());\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"msgExcedeCantidad\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgValidaCantidad(String msg) {\r\n\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(msg );\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", (dialog1, which) -> {\r\n                valida_fecha_vencimiento();\r\n                //DespuesDeValidarCantidad();\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", (dialog12, which) -> progress.cancel());\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"msgValidaCantidad\"+e.getMessage());\r\n\r\n        }\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region ScaneoBarra\r\n\r\n    //endregion\r\n\r\n    //region WebService\r\n\r\n    public class WebServiceHandler extends WebService {\r\n\r\n        public WebServiceHandler(PBase Parent,String Url) {\r\n            super(Parent,Url);\r\n        }\r\n\r\n        @Override\r\n        public void wsExecute(){\r\n\r\n            try{\r\n\r\n                switch (ws.callback) {\r\n\r\n                    case 1:\r\n                        callMethod(\"Get_Producto_By_IdProductoBodega\",\"IdProductoBodega\",BeOcDet.IdProductoBodega);\r\n                        break;\r\n                    case 2:\r\n                        callMethod(\"Get_Estados_By_IdPropietario_And_IdBodegaHH\",\r\n                                \"pIdPropietario\",gl.IdPropietario,\r\n                                \"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 3:\r\n                        callMethod(\"Get_All_Presentaciones_By_IdProducto\",\"pIdProducto\",BeProducto.IdProducto,\"pActivo\",true);\r\n                        break;\r\n                    case 4:\r\n                        callMethod(\"Get_All_Codigos_Barra_By_IdProducto\",\"pIdProducto\",BeProducto.IdProducto);\r\n                        break;\r\n                    case 5:\r\n                        callMethod(\"Get_All_ProductoParametros_By_IdProducto_HH\",\"pIdProducto\",BeProducto.IdProducto,\r\n                                \"pActivo\",true);\r\n                        break;\r\n                    case 6:\r\n                        callMethod(\"Get_Resoluciones_Lp_By_IdOperador_And_IdBodega\",\r\n                                \"pIdOperador\",gl.IdOperador,\r\n                                \"pIdBodega\",gl.IdBodega);\r\n                        //#EJC20210504: Optimizado, buscar la resolución asociada por el operador y bodega.\r\n//                        callMethod(\"Get_Nuevo_Correlativo_LicensePlate\",\"pIdEmpresa\",gl.IdEmpresa,\r\n//                                \"pIdBodega\",gl.IdBodega,\"pIdPropietario\",BeProducto.Propietario.IdPropietario,\r\n//                                \"pIdProducto\",BeProducto.IdProducto);\r\n                        break;\r\n                    case 7:\r\n                        callMethod(\"Get_Licenses_Plates_By_IdRecepcionEnc\",\"pIdRecepcionEnc\",gl.gIdRecepcionEnc);\r\n                        break;\r\n                    case 8:\r\n                        callMethod(\"Existe_LP_By_IdRecepcionEnc_And_IdRecepcionDet\",\"IdRecepcionEnc\",gl.gIdRecepcionEnc,\r\n                                \"LicPlate\",txtLicPlate.getText().toString(),\"IdRecepcionDet\",pIdRecepcionDet);\r\n                        break;\r\n                    case 9:\r\n                        callMethod(\"MaxIDStockSeRec\");\r\n                        break;\r\n                    case 10:\r\n                        callMethod(\"Get_All_Params_By_IdRecepcionEnc_And_IdRecepcion_Det_For_HH\",\r\n                                \"pIdRecepcionEnc\",gl.gIdRecepcionEnc,\"pIdRecepcionDet\",pIdRecepcionDet);\r\n                        break;\r\n                    case 11:\r\n                        callMethod(\"MaxIDStockRec\");\r\n                        break;\r\n                    case 12:\r\n                        callMethod(\"Get_BeTransReEnc_By_IdREcepcionEnc_For_HH\",\"pIdRecepcionEnc\",gl.gIdRecepcionEnc);\r\n                        break;\r\n                    case 13:\r\n                        callMethod(\"Get_IdUbicMerma_By_IdBodega\",\"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 14:\r\n                        callMethod(\"Existe_LP_By_IdRecepcionEnc_And_IdRecepcionDet\",\"IdRecepcionEnc\",gl.gIdRecepcionEnc,\r\n                                \"LicPlate\",vBeStockRec.Lic_plate,\"IdRecepcionDet\",pIdRecepcionDet);\r\n                        break;\r\n                    case 15:\r\n                        callMethod(\"Get_Nuevo_Correlativo_LicensePlate_S\",\"pIdEmpresa\",gl.IdEmpresa,\r\n                                \"pIdBodega\",gl.IdBodega,\"pIdPropietario\",BeProducto.Propietario.IdPropietario,\r\n                                \"pIdProducto\",BeProducto.IdProducto,\"UltimoPalletGenerado\",vBeStockRec.Lic_plate);\r\n                        break;\r\n                    case 16:\r\n                        progress.setMessage(\"Procesando recepción\");\r\n                        //Guardar_Recepcion_Nueva\r\n                        callMethod(\"Guardar_Recepcion\",\r\n                                \"pRecEnc\",gl.gBeRecepcion,\r\n                                \"pRecOrdenCompra\",gl.gBeRecepcion.OrdenCompraRec,\r\n                                \"pListStockRecSer\",pListBeStockSeRec.items,\r\n                                \"pListStockRec\",pListBeStockRec.items,\r\n                                \"pListProductoPallet\",listaProdPalletsNuevos.items,\r\n                                \"pLotesRec\", BeDetalleLotes,\r\n                                \"pIdEmpresa\",gl.IdEmpresa,\r\n                                \"pIdBodega\",gl.IdBodega,\r\n                                \"pIdUsuario\",gl.IdOperador,\r\n                                \"pIdResolucionLp\",gl.IdResolucionLpOperador);\r\n                        break;\r\n                    case 17 :\r\n                        //Guardar_Recepcion_Edita\r\n                        callMethod(\"GuardarRecepcionModif\",\"pRecEnc\",gl.gBeRecepcion,\r\n                                \"pRecOrdenCompra\",gl.gBeRecepcion.OrdenCompraRec,\r\n                                \"pListStockRecSer\",pListBeStockSeRec.items,\r\n                                \"pListStockRec\",pListBeStockRec.items,\r\n                                \"pListProductoPallet\",listaProdPalletsNuevos.items,\r\n                                \"pbeStockAnt\",gBeStockAnt,\r\n                                \"pIdEmpresa\",gl.IdEmpresa,\r\n                                \"pIdBodega\",gl.IdBodega,\r\n                                \"pIdUsuario\",gl.IdOperador);\r\n                        break;\r\n                    case 18:\r\n                        callMethod(\"Get_Detalle_OC_By_IdOrdeCompraDet\",\"oBeTrans_oc_det\",beTransOCDet);\r\n                        break;\r\n                    case 19:\r\n                        callMethod(\"Max_IdRecepcion_Det_By_IdRecepcionEnc\",\"pIdRecepcionEnc\",gl.gIdRecepcionEnc);\r\n                        break;\r\n                    case 20:\r\n                        callMethod(\"Get_IdUbicMerma_By_IdBodega\",\"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 21:\r\n                        callMethod(\"Finalizar_Recepcion_Parcial_Pallet_Proveedor\",\"pRecEnc\",gl.gBeRecepcion,\r\n                                \"pIdOrdenCompraEnc\",pIdOrdenCompraEnc,\r\n                                \"pIdRecepcionEnc\",gl.gIdRecepcionEnc,\r\n                                \"pIdEmpresa\", gl.IdEmpresa,\r\n                                \"pIdBodega\",gl.IdBodega,\r\n                                \"pIdUsuario\",gl.IdOperador,\r\n                                \"pBeStockRec\",vBeStockRecPallet,\r\n                                \"pBeRecDet\",BeTransReDet,\r\n                                \"pBeBarraPallet\",BeINavBarraPallet,\r\n                                \"pEsTransferencia\",EsTransferenciaInternaWMS);\r\n                        break;\r\n                    case 22:\r\n                        callMethod(\"Get_All_BeTrasReDet_By_IdOrdenCompraEnc\",\"pIdOrdenCompraEnc\",pIdOrdenCompraEnc);\r\n                        break;\r\n                    case 23:\r\n                        callMethod(\"Get_Stock_By_IdRecepcionEnc_And_IdRecpecionDet\",\"pIdRecepcionEnc\",gl.gIdRecepcionEnc,\"pIdRecepcionDet\",pIdRecepcionDet);\r\n                        break;\r\n                    case 24:\r\n                        callMethod(\"Existe_Lp\",\"pLic_Plate\",pLp);\r\n                        break;\r\n                    case 25:\r\n                        double vCantidad;\r\n                        if (IdPreseSelect!=-1){\r\n                          vCantidad = BeProducto.Presentacion.getFactor()* Double.parseDouble(txtCantidadRec.getText().toString());\r\n                        }else{\r\n                            vCantidad = Double.parseDouble(txtCantidadRec.getText().toString());\r\n                        }\r\n                        callMethod(\"Push_Recepcion_Produccion_To_NAV_For_BYB\",\r\n                                   \"DocumentoUbicacion\", ubiDetLote,\r\n                                   \"CodigoProducto\",BeProducto.Codigo,\r\n                                   \"Cantidad\", vCantidad);\r\n                        break;\r\n                }\r\n\r\n            }catch (Exception e){\r\n                mu.msgbox(e.getClass()+\"WebServiceHandler:\"+e.getMessage());\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void wsCallBack(Boolean throwing,String errmsg,int errlevel) {\r\n\r\n        try {\r\n            if (throwing) throw new Exception(errmsg);\r\n\r\n            switch (ws.callback) {\r\n                case 1:\r\n                    processBeProducto();\r\n                    break;\r\n                case 2:\r\n                    processListarProductoEstado();\r\n                    break;\r\n                case 3:\r\n                    processListPresentaciones();\r\n                    break;\r\n                case 4:\r\n                    processCodigosBarra();\r\n                    break;\r\n                case 5:\r\n                    processTieneParametrosPersonalizados();\r\n                    break;\r\n                case 6:\r\n                    processNuevoLPA();\r\n                    //#EJC20210504: Refactor por resolución LP\r\n                    //processNuevoLP();\r\n                    break;\r\n                case 7:\r\n                    processLicensePallet();\r\n                    break;\r\n                case 8:\r\n                    processValidaLicPlate();\r\n                    break;\r\n                case 9:\r\n                    processMaxIdStockSeRec();\r\n                    break;\r\n                case 10:\r\n                    processListDetParametros();\r\n                    break;\r\n                case 11:\r\n                    processMaxIdStockRec();\r\n                    break;\r\n                case 12:\r\n                    processAuxRec();\r\n                    break;\r\n                case 13:\r\n                    processUbicacionMerma();\r\n                    break;\r\n                case 14:\r\n                    processvBeStockRecLicPlate();\r\n                    break;\r\n                case 15:\r\n                    processNuevoLPS();\r\n                    break;\r\n                case 16:\r\n                    processGuardarRecNueva();\r\n                    break;\r\n                case 17:\r\n                    processGuardarRecModif();\r\n                    break;\r\n                case 18:\r\n                    processActualizaCantidadRecibida();\r\n                    break;\r\n                case 19:\r\n                    processMaxIdRecepcionDet();\r\n                    break;\r\n                case 20:\r\n                    processGetIdUbicacionMerma();\r\n                    break;\r\n                case 21:\r\n                    beTransOCDet =new clsBeTrans_oc_det();\r\n                    beTransOCDet.IdOrdenCompraEnc = pIdOrdenCompraEnc;\r\n                    beTransOCDet.IdOrdenCompraDet = pIdOrdenCompraDet;\r\n                    execws(18);\r\n                    break;\r\n                case 22:\r\n                    processCantRecConOC();\r\n                    break;\r\n                case 23:\r\n                    processGetStock();\r\n                    break;\r\n                case 24:\r\n                    processExisteLp();\r\n                    break;\r\n                case 25:\r\n                    process_Recepcion_To_Nav();\r\n                    break;\r\n\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            msgbox(Objects.requireNonNull(new Object() {\r\n            }.getClass().getEnclosingMethod()).getName() + \"wsCallBack: \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processBeProducto(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo valores de producto\");\r\n\r\n            BeProducto = xobj.getresult(clsBeProducto.class,\"Get_Producto_By_IdProductoBodega\");\r\n\r\n            Load();\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(\" processBeProducto: \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processListarProductoEstado(){\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Obteniendo estados de producto\");\r\n\r\n            LProductoEstado = xobj.getresult(clsBeProducto_estadoList.class,\"Get_Estados_By_IdPropietario_And_IdBodegaHH\");\r\n\r\n            if (LProductoEstado!=null){\r\n\r\n                Listar_Producto_Estado();\r\n\r\n                execws(4);\r\n            }else {\r\n                progress.cancel();\r\n                mu.msgbox(\"Estados de producto no están definidos para el propietario\");\r\n            }\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processListarProductoEstado:\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processListPresentaciones(){\r\n\r\n        try{\r\n\r\n            BeProducto.Presentaciones = xobj.getresult(clsBeProducto_PresentacionList.class,\"Get_All_Presentaciones_By_IdProducto\");\r\n\r\n            Listar_Producto_Presentaciones();\r\n\r\n            execws(4);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processListPresentaciones:\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processCodigosBarra(){\r\n\r\n        try{\r\n\r\n            BeProducto.Codigos_Barra = xobj.getresult(clsBeProducto_codigos_barraList.class,\"Get_All_Codigos_Barra_By_IdProducto\");\r\n\r\n            Listar_Producto_Presentaciones();\r\n\r\n            if (gl.mode==1){\r\n                LlenaDatosFaltantes();\r\n            }else{\r\n                LlenaDatosFaltantes_Existente();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            mu.msgbox(\"processCodigosBarra:s\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processTieneParametrosPersonalizados(){\r\n\r\n        try{\r\n\r\n            Pperzonalizados=false;\r\n            PCap_Manu=false;\r\n            PGenera_lp=false;\r\n            PTiene_Ctrl_Temp=false;\r\n            PTiene_Pres=false;\r\n\r\n            pListBEProductoParametro = xobj.getresult(clsBeProducto_parametrosList.class,\"Get_All_ProductoParametros_By_IdProducto_HH\");\r\n\r\n            if (pListBEProductoParametro!=null){\r\n                if (pListBEProductoParametro.items!=null){\r\n                    Pperzonalizados = true;\r\n                }\r\n            }\r\n\r\n            if (BeProducto.Fechamanufactura&&BeProducto.Materia_prima){\r\n                PCap_Manu=true;\r\n            }\r\n\r\n            if (BeProducto.Capturar_aniada){\r\n                PCap_Anada = true;\r\n            }\r\n\r\n            if (BeProducto.Genera_lp){\r\n                PGenera_lp=true;\r\n            }\r\n\r\n            if (BeProducto.Peso_recepcion){\r\n                PTiene_Ctrl_Peso = true;\r\n            }\r\n\r\n            if (BeProducto.Temperatura_recepcion){\r\n                PTiene_Ctrl_Temp = true;\r\n            }\r\n\r\n            if (BeProducto.Serializado){\r\n                PTiene_PorSeries=true;\r\n            }\r\n\r\n            if (stream(gl.gpListDetalleOC.items).where(c -> c.IdProductoBodega == pIdProductoBodega\r\n                    && c.IdOrdenCompraDet == pIdOrdenCompraDet).select(c -> c.IdPresentacion).first()>0){\r\n                if (BeProducto.Presentaciones!=null){\r\n                    if (BeProducto.Presentaciones.items!=null){\r\n                        PTiene_Pres=true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(Pperzonalizados||PCap_Manu||PCap_Anada||PGenera_lp||PTiene_Ctrl_Peso||PTiene_Ctrl_Temp||PTiene_PorSeries||PTiene_Pres){\r\n                Muestra_Propiedades_Producto();\r\n            }else{\r\n                Guardar_Recepcion_Nueva();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"ProcessTieneParametrosPersonalizados: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processNuevoLPA(){\r\n\r\n        try {\r\n\r\n            clsBeResolucion_lp_operador resolucionActivaLpByBodega = xobj.getresult(clsBeResolucion_lp_operador.class, \"Get_Resoluciones_Lp_By_IdOperador_And_IdBodega\");\r\n\r\n            if (resolucionActivaLpByBodega !=null){\r\n\r\n                gl.IdResolucionLpOperador = resolucionActivaLpByBodega.IdResolucionlp;\r\n\r\n                float pLpSiguiente = resolucionActivaLpByBodega.Correlativo_Actual +1;\r\n                float largoMaximo = String.valueOf(resolucionActivaLpByBodega.Correlativo_Final).length();\r\n\r\n                int intLPSig = (int) pLpSiguiente;\r\n                int MaxL = (int) largoMaximo;\r\n\r\n                String str = String.valueOf(intLPSig);\r\n                StringBuilder sb = new StringBuilder();\r\n\r\n                for (int toPrepend= MaxL-str.length(); toPrepend>0; toPrepend--) {\r\n                    sb.append('0');\r\n                }\r\n\r\n                sb.append(str);\r\n                String result = sb.toString();\r\n\r\n                pNumeroLP= resolucionActivaLpByBodega.Serie + result;\r\n\r\n            }else{\r\n                gl.IdResolucionLpOperador =0;\r\n            }\r\n\r\n            if (gl.mode==1){\r\n                //#CKFK 20201229 Agregué esta condición de que si la barra tiene información se coloca eso como LP\r\n                if (!txtNoLP.getText().toString().isEmpty()){\r\n                    if (txtLicPlate != null){\r\n                        txtLicPlate.setText(txtNoLP.getText().toString().replace(\"$\",\"\"));\r\n                    }\r\n                }else{\r\n                    if (txtLicPlate != null){\r\n                        txtLicPlate.setText(pNumeroLP);\r\n                    }else{\r\n                        txtNoLP.setText(pNumeroLP);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processNuevoLP: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processLicensePallet(){\r\n\r\n        try {\r\n\r\n            clsBeLicensePlatesList pListBeLicensePlate = xobj.getresult(clsBeLicensePlatesList.class, \"Get_Licenses_Plates_By_IdRecepcionEnc\");\r\n\r\n            pNumeroLP = \"\";\r\n\r\n            if (pListBeLicensePlate.items!=null){\r\n\r\n                for (int i = pListBeLicensePlate.items.size()-1; i>=0; i--) {\r\n                    if(pListBeLicensePlate.items.get(i).CantidadDisponible>=Cant_Recibida_Actual){\r\n                        if (!Existe_Lp){\r\n                            pNumeroLP = pListBeLicensePlate.items.get(i).LicensePlates;\r\n                        }else{\r\n                            pNumeroLP = pLp;\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            if (gl.mode==2){\r\n                pListBeStockRec.items.get(pIndexStock).Lic_plate = pNumeroLP;\r\n            }\r\n\r\n            txtLicPlate.setVisibility(View.VISIBLE);\r\n\r\n            txtLicPlate.setFocusable(false);\r\n            txtLicPlate.setFocusableInTouchMode(false);\r\n            txtLicPlate.setClickable(false);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processLicensePallet: \"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processValidaLicPlate(){\r\n\r\n        try{\r\n\r\n            PallCorrecto  = xobj.getresult(Boolean.class,\"Existe_LP_By_IdRecepcionEnc_And_IdRecepcionDet\");\r\n\r\n            if (!PallCorrecto){\r\n                mu.msgbox(\"El License Plate ya existe, debe ingresar otro valor\");\r\n            }else{\r\n                ContinuaValidandoParametros();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processValidaLicPlate: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processMaxIdStockSeRec(){\r\n\r\n        int MaId;\r\n\r\n        try{\r\n\r\n            MaId = xobj.getresult(Integer.class,\"MaxIDStockSeRec\");\r\n\r\n            ObjNS.IdStockSeRec = MaId + 1;\r\n            ValidaParametrosDespuesSeRec();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processMaxIdStockSeRec: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processListDetParametros(){\r\n\r\n        try{\r\n\r\n            plistBeReDetParametros = xobj.getresult(clsBeTrans_re_det_parametrosList.class,\"Get_All_Params_By_IdRecepcionEnc_And_IdRecepcion_Det_For_HH\");\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processListDetParametros\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processMaxIdStockRec(){\r\n\r\n        int IdMax;\r\n        try {\r\n\r\n            IdMax = xobj.getresult(Integer.class,\"MaxIDStockRec\");\r\n\r\n            ObjS.IdStockRec = IdMax + 1;\r\n\r\n            SigueValidandoParametros();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processMaxIdStockRec: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processAuxRec(){\r\n\r\n        try{\r\n\r\n            clsBeTrans_re_enc auxRec = xobj.getresult(clsBeTrans_re_enc.class, \"Get_BeTransReEnc_By_IdREcepcionEnc_For_HH\");\r\n\r\n            if (auxRec !=null){\r\n                gl.gBeRecepcion.IsNew = auxRec.IsNew;\r\n            }\r\n\r\n            ContinuaGuardandoRecepcion();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processAuxRec:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processUbicacionMerma(){\r\n\r\n        try{\r\n\r\n            BeStockRecNuevaRec.IdUbicacion = xobj.getresult(Integer.class,\"Get_IdUbicMerma_By_IdBodega\");\r\n\r\n            Continua_Guardando_Rec_Nueva(BeStockRecNuevaRec,vFactorNuevaRec,vCantNuevaRec);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processUbicacionMerma:\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processvBeStockRecLicPlate(){\r\n\r\n        try{\r\n\r\n            boolean EsCorrecto;\r\n\r\n            EsCorrecto  = xobj.getresult(Boolean.class,\"Existe_LP_By_IdRecepcionEnc_And_IdRecepcionDet\");\r\n\r\n            if (!EsCorrecto){\r\n                mu.msgbox(\"El License Plate ya existe, debe ingresar otro valor\");\r\n                execws(15);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processvBeStockRecLicPlate: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processNuevoLPS(){\r\n\r\n        try {\r\n\r\n            if (!txtNoLP.getText().toString().isEmpty()){\r\n                vBeStockRec.Lic_plate = txtNoLP.getText().toString();\r\n            }else {\r\n                vBeStockRec.Lic_plate = xobj.getresult(String.class, \"Get_Nuevo_Correlativo_LicensePlate_S\");\r\n            }\r\n\r\n            Terminar_Guardar_Detalle_Recepcion_Nueva();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processNuevoLPS: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processGuardarRecNueva(){\r\n\r\n        try{\r\n\r\n            String Resultado;\r\n\r\n            progress.show();\r\n            progress.setMessage(\"Finalizando proceso de guardar recepción\");\r\n\r\n            //#EJC20210321_1223:Validar si no se obtuvo error en el procesamiento.\r\n            if(!xobj.ws.xmlresult.contains(\"CustomError\")){\r\n\r\n                Resultado = xobj.getresult(String.class,\"Guardar_Recepcion\");\r\n\r\n                if (Resultado!=null){\r\n\r\n                    if (ubiDetLote!=null){\r\n                        if (!ubiDetLote.isEmpty()){\r\n                            execws(25);\r\n                        }else{\r\n                            Imprime_Barra_Despues_Guardar();\r\n                        }\r\n                    }else{\r\n                        Imprime_Barra_Despues_Guardar();\r\n                    }\r\n\r\n\r\n                }else{\r\n                    progress.cancel();\r\n                    mu.msgbox(\"No se pudo guardar la recepción\");\r\n                }\r\n\r\n            }else{\r\n                progress.cancel();\r\n                mu.msgbox(\"No se pudo guardar la recepción:  \" + ws.xmlresult);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            mu.msgbox(\"processGuardarRecNueva:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processGuardarRecModif(){\r\n\r\n        try{\r\n\r\n            String Resultado;\r\n\r\n            progress.show();\r\n            progress.setMessage(\"Finalizando proceso de guardar recepción\");\r\n\r\n            Resultado = xobj.getresult(String.class,\"GuardarRecepcionModif\");\r\n\r\n            if (!Resultado.isEmpty()){\r\n                Imprime_Barra_Despues_Guardar();\r\n            }else{\r\n                progress.cancel();\r\n                mu.msgbox(\"No se pudo guardar la recepción\");\r\n            }\r\n\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            mu.msgbox(\"processGuardarRecModif:\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processActualizaCantidadRecibida(){\r\n\r\n        try {\r\n\r\n            int vIndex;\r\n\r\n            progress.setMessage(\"Actualizando cantidad recibida\");\r\n            progress.show();\r\n\r\n            List AuxList = stream(gl.gpListDetalleOC.items).select(c -> c.IdOrdenCompraDet).toList();\r\n\r\n            if (AuxList.size()>0){\r\n\r\n                vIndex = AuxList.indexOf(beTransOCDet.IdOrdenCompraDet);\r\n\r\n                gl.gpListDetalleOC.items.get(vIndex).Cantidad_recibida += BeTransReDet.cantidad_recibida;\r\n\r\n            }\r\n\r\n            gl.CantRec = beTransOCDet.Cantidad_recibida;\r\n\r\n            gl.Carga_Producto_x_Pallet=false;\r\n\r\n            doExit();\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            mu.msgbox(\"processActualizaCantidadRecibida\"+e.getMessage());\r\n        }\r\n\r\n        progress.cancel();\r\n    }\r\n\r\n    private  void processMaxIdRecepcionDet(){\r\n\r\n        try{\r\n\r\n            pIdRecepcionDet = xobj.getresult(Integer.class,\"Max_IdRecepcion_Det_By_IdRecepcionEnc\")+1;\r\n\r\n            execws(2);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processMaxIdRecepcionDet\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    public void ExitForm(View view){\r\n        msgAskExit();\r\n    }\r\n\r\n    public void BotonMostrar(View view){\r\n        BotonIrGuardarParametros();\r\n    }\r\n\r\n    private void msgAskExit() {\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(\"¿\" + \"Está seguro de salir\" + \"?\");\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", (dialog1, which) -> doExit());\r\n\r\n            dialog.setNegativeButton(\"No\", (dialog12, which) -> {\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(Objects.requireNonNull(new Object() {\r\n            }.getClass().getEnclosingMethod()).getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void msgAskExisteLp(String msg) {\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(\"¿\" + msg + \"?\");\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", (dialog12, which) -> {\r\n                if (BeProducto.Control_vencimiento){\r\n                    cmbVenceRec.setSelectAllOnFocus(true);\r\n                    cmbVenceRec.requestFocus();\r\n                }else if (BeProducto.Control_lote){\r\n                    txtLoteRec.setSelectAllOnFocus(true);\r\n                    txtLoteRec.requestFocus();\r\n                }else {\r\n                    txtCantidadRec.requestFocus();\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", (dialog1, which) -> {\r\n                txtNoLP.setText(\"\");\r\n                txtNoLP.setSelectAllOnFocus(true);\r\n                txtNoLP.requestFocus();\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(Objects.requireNonNull(new Object() {\r\n            }.getClass().getEnclosingMethod()).getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n//    private void msgAskImprimir(String msg) {\r\n//        try{\r\n//            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n//\r\n//            dialog.setTitle(R.string.app_name);\r\n//            dialog.setMessage(\"¿\" + msg + \"?\");\r\n//\r\n//            dialog.setCancelable(false);\r\n//\r\n//            dialog.setIcon(R.drawable.ic_quest);\r\n//\r\n//            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n//                public void onClick(DialogInterface dialog, int which) {\r\n//                }\r\n//            });\r\n//\r\n//            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n//                public void onClick(DialogInterface dialog, int which) {                }\r\n//            });\r\n//\r\n//            dialog.show();\r\n//\r\n//        }catch (Exception e){\r\n//            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n//        }\r\n//\r\n//    }\r\n\r\n    private void doExit(){\r\n        try{\r\n\r\n            //LimpiaValores();\r\n            super.finish();\r\n            gl.Carga_Producto_x_Pallet=false;\r\n        }catch (Exception e){\r\n            addlog(Objects.requireNonNull(new Object() {\r\n            }.getClass().getEnclosingMethod()).getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void processGetIdUbicacionMerma(){\r\n\r\n        try{\r\n\r\n            vBeStockRecPallet.IdUbicacion = xobj.getresult(Integer.class,\"Get_IdUbicMerma_By_IdBodega\");\r\n\r\n            Continua_Llenando_Stock_Pallet_Proveedor();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processGetIdUbicacionMerma\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processCantRecConOC(){\r\n\r\n        try{\r\n\r\n            clsBeTrans_re_detList LRecepcionCantidad = xobj.getresult(clsBeTrans_re_detList.class, \"Get_All_BeTrasReDet_By_IdOrdenCompraEnc\");\r\n\r\n            if (LRecepcionCantidad !=null){\r\n                if (LRecepcionCantidad.items!=null){\r\n                    Cant_Recibida = stream(LRecepcionCantidad.items).where(c->c.IdProductoBodega == pIdProductoBodega &&\r\n                            c.IdPresentacion == vPresentacion &&\r\n                            c.No_Linea == pLineaOC).select(c->c.cantidad_recibida).first();\r\n                }\r\n            }\r\n\r\n            Cant_A_Recibir = gl.gselitem.Cantidad;\r\n\r\n            if(Cant_Recibida - Cant_Recibida<0){\r\n                Cant_Pendiente = 0;\r\n            }else{\r\n                Cant_Pendiente =mu.round( Cant_A_Recibir - Cant_Recibida,gl.gCantDecCalculo);\r\n            }\r\n\r\n            FinalizCargaProductos();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processCantRecConOC\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processGetStock(){\r\n\r\n        try{\r\n\r\n            pListBeStockRec = xobj.getresult(clsBeStock_recList.class,\"Get_Stock_By_IdRecepcionEnc_And_IdRecpecionDet\");\r\n\r\n            execws(2);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processGetStock:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void execws(int callbackvalue) {\r\n        ws.callback=callbackvalue;\r\n        ws.execute();\r\n    }\r\n\r\n    private void processExisteLp(){\r\n\r\n        try{\r\n\r\n            Existe_Lp = xobj.getresult(Boolean.class,\"Existe_Lp\");\r\n\r\n            if (Existe_Lp){\r\n                msgAskExisteLp(\"El Lp:\"+pLp+\" ya existe, desea agregarlo al producto:\"+BeProducto.Codigo);\r\n            }else{\r\n                if (BeProducto.Control_vencimiento){\r\n                    cmbVenceRec.setSelectAllOnFocus(true);\r\n                    cmbVenceRec.requestFocus();\r\n                }else if (BeProducto.Control_lote){\r\n                    txtLoteRec.setSelectAllOnFocus(true);\r\n                    txtLoteRec.requestFocus();\r\n                }else {\r\n                    txtCantidadRec.requestFocus();\r\n                }\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processExisteLp:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void process_Recepcion_To_Nav(){\r\n\r\n        try{\r\n\r\n            boolean procesada = xobj.getresult(Boolean.class,\"Push_Recepcion_Produccion_To_NAV_For_BYB\");\r\n\r\n            if (procesada){\r\n                toastlong(\"Recepción procesada en ByB\");\r\n            }\r\n            Imprime_Barra_Despues_Guardar();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"process_Recepcion_To_Nav:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        try{\r\n            msgAskExit();\r\n        }catch (Exception e){\r\n            addlog(Objects.requireNonNull(new Object() {\r\n            }.getClass().getEnclosingMethod()).getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n    //endregion\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/dts/tom/Transacciones/Recepcion/frm_recepcion_datos.java	(revision 23573726fe05175388ab5ddc3769c2fb2c305ea7)
+++ app/src/main/java/com/dts/tom/Transacciones/Recepcion/frm_recepcion_datos.java	(date 1623446629414)
@@ -90,6 +90,7 @@
     private TextView lblDatosProd,lblPropPrd,lblPeso,lblPUn,lblCosto,lblCReal,lblPres,lblLote,lblVence, lblEstiba, lblUbicacion;
     private Button btnCantPendiente;
     private Button btnCantRecibida;
+    private Button btnFinalizarRece;
     private ProgressDialog progress;
     private DatePicker dpResult;
     private ImageView imgDate, cmdImprimir;
@@ -234,6 +235,7 @@
 
         btnCantRecibida = findViewById(R.id.btnCantRecibida);
         btnCantPendiente = findViewById(R.id.btnCantPendiente);
+        btnFinalizarRece = findViewById(R.id.btnFinalizarRece);
 
         dpResult = findViewById(R.id.datePicker);
 
@@ -2212,12 +2214,34 @@
 
                         if (gl.gBeOrdenCompra.DetalleLotes.items != null) {
 
-                            if (gl.gBeOrdenCompra.DetalleLotes.items.size() > 0) {
+                            //#CKFK 20210611 Agregué esta validación para lo documentos de ingreso tipo Orden de producción (6)
+                            clsBeTrans_oc_det_loteList vence;
+                            vence=gl.gBeOrdenCompra.DetalleLotes;
+
+                            List<clsBeTrans_oc_det_lote> BeVence =  stream(vence.items)
+                                    .where(c -> c.IdProductoBodega  == BeProducto.IdProductoBodega &&
+                                            c.No_linea == BeOcDet.No_Linea &&
+                                            c.IdOrdenCompraDet == pIdOrdenCompraDet &&
+                                            c.Cantidad_recibida < c.Cantidad)
+                                    .toList();
+
+                            if (gl.gBeOrdenCompra.TipoIngreso.getIdTipoIngresoOC()==6 &&
+                                    gl.gBeOrdenCompra.TipoIngreso.getRequerir_Documento_Ref() &&
+                                    BeVence.size()==0){
+
+                                msgSinUbicaciones("No es posible realizar la recepción del producto " + BeProducto.getCodigo() +
+                                                  " porque no hay ubicaciones definidas");
+                                return;
+
+                            }else{
+
+                                if (gl.gBeOrdenCompra.DetalleLotes.items.size() > 0) {
 
-                                cmbVence.setVisibility(View.VISIBLE);
-                                cmbVenceRec.setVisibility(View.GONE);
-                                imgDate.setVisibility(View.GONE);
-                                fillFechaVence();
+                                    cmbVence.setVisibility(View.VISIBLE);
+                                    cmbVenceRec.setVisibility(View.GONE);
+                                    imgDate.setVisibility(View.GONE);
+                                    fillFechaVence();
+                                }
                             }
                         }
                     }
@@ -2236,12 +2260,34 @@
 
                         if (gl.gBeOrdenCompra.DetalleLotes.items != null) {
 
-                            if (gl.gBeOrdenCompra.DetalleLotes.items.size() > 0) {
+                            //#CKFK 20210611 Agregué esta validación para lo documentos de ingreso tipo Orden de producción (6)
+                            clsBeTrans_oc_det_loteList lotes;
+                            lotes=gl.gBeOrdenCompra.DetalleLotes;
+
+                            List<clsBeTrans_oc_det_lote> BeLote =  stream(lotes.items)
+                                    .where(c -> c.IdProductoBodega  == BeProducto.IdProductoBodega &&
+                                            c.No_linea == BeOcDet.No_Linea &&
+                                            c.IdOrdenCompraDet == pIdOrdenCompraDet &&
+                                            c.Cantidad_recibida < c.Cantidad)
+                                    .toList();
+
+                            if (gl.gBeOrdenCompra.TipoIngreso.getIdTipoIngresoOC()==6 &&
+                                    gl.gBeOrdenCompra.TipoIngreso.getRequerir_Documento_Ref() &&
+                                    BeLote.size()==0){
+
+                                msgSinUbicaciones("No es posible realizar la recepción de este producto porque no hay ubicaciones definidas");
+                                return;
+
+                            }else{
+
+                                if (gl.gBeOrdenCompra.DetalleLotes.items.size() > 0) {
 
-                                cmbLote.setVisibility(View.VISIBLE);
-                                txtLoteRec.setVisibility(View.GONE);
-                                tblUbicacion.setVisibility(View.VISIBLE);
-                                fillLotes();
+                                    cmbLote.setVisibility(View.VISIBLE);
+                                    txtLoteRec.setVisibility(View.GONE);
+                                    tblUbicacion.setVisibility(View.VISIBLE);
+                                    fillLotes();
+                                }
+
                             }
                         }
                     }
@@ -2944,6 +2990,7 @@
 
             clsBeTrans_oc_det_loteList vence;
             vence=gl.gBeOrdenCompra.DetalleLotes;
+
             List<clsBeTrans_oc_det_lote> BeVence =  stream(vence.items)
                     .where(c -> c.IdProductoBodega  == BeProducto.IdProductoBodega &&
                                 c.No_linea == BeOcDet.No_Linea &&
@@ -5105,6 +5152,7 @@
                         callMethod("Existe_Lp","pLic_Plate",pLp);
                         break;
                     case 25:
+
                         double vCantidad;
                         if (IdPreseSelect!=-1){
                           vCantidad = BeProducto.Presentacion.getFactor()* Double.parseDouble(txtCantidadRec.getText().toString());
@@ -5615,7 +5663,6 @@
                         Imprime_Barra_Despues_Guardar();
                     }
 
-
                 }else{
                     progress.cancel();
                     mu.msgbox("No se pudo guardar la recepción");
@@ -5728,6 +5775,28 @@
             dialog.setNegativeButton("No", (dialog12, which) -> {
             });
 
+            dialog.show();
+
+        }catch (Exception e){
+            addlog(Objects.requireNonNull(new Object() {
+            }.getClass().getEnclosingMethod()).getName(),e.getMessage(),"");
+        }
+
+    }
+
+    private void msgSinUbicaciones(String msg) {
+        try{
+            AlertDialog.Builder dialog = new AlertDialog.Builder(this);
+
+            dialog.setTitle(R.string.app_name);
+            dialog.setMessage(msg);
+
+            dialog.setCancelable(false);
+
+            dialog.setIcon(R.drawable.ic_quest);
+
+            dialog.setPositiveButton("Aceptar", (dialog1, which) -> doExit());
+
             dialog.show();
 
         }catch (Exception e){
Index: app/src/main/java/com/dts/ladapt/list_adapt_detalle_recepcion.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.dts.ladapt;\r\n\r\nimport android.content.Context;\r\nimport android.graphics.Color;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.BaseAdapter;\r\nimport android.widget.TextView;\r\n\r\nimport com.dts.classes.Transacciones.OrdenCompra.Trans_oc_det.clsBeTrans_oc_det;\r\nimport com.dts.tom.R;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class list_adapt_detalle_recepcion extends BaseAdapter {\r\n\r\n    private static ArrayList<clsBeTrans_oc_det> BeDetalleOC;\r\n\r\n    private int selectedIndex;\r\n\r\n    private LayoutInflater l_Inflater;\r\n    private boolean Es_Poliza_Consolidada=false;\r\n\r\n    public list_adapt_detalle_recepcion(Context context, ArrayList<clsBeTrans_oc_det> results, boolean pEs_Poliza_Consolidada) {\r\n        BeDetalleOC = results;\r\n        l_Inflater = LayoutInflater.from(context);\r\n        selectedIndex = -1;\r\n        Es_Poliza_Consolidada = pEs_Poliza_Consolidada;\r\n    }\r\n\r\n    public void setSelectedIndex(int ind) {\r\n        selectedIndex = ind;\r\n        notifyDataSetChanged();\r\n    }\r\n\r\n    public void refreshItems() {\r\n        notifyDataSetChanged();\r\n    }\r\n\r\n    public int getCount() {\r\n        return BeDetalleOC.size();\r\n    }\r\n\r\n    public Object getItem(int position) {\r\n        return BeDetalleOC.get(position);\r\n    }\r\n\r\n    public long getItemId(int position) {\r\n        return position;\r\n    }\r\n\r\n    public View getView(int position, View convertView, ViewGroup parent) {\r\n        ViewHolder holder;\r\n\r\n        if (convertView == null) {\r\n            convertView = l_Inflater.inflate(R.layout.activity_list_adapt_detalle_recepcion, null);\r\n            holder = new ViewHolder();\r\n\r\n            holder.lblNoLinea = (TextView) convertView.findViewById(R.id.lblNoLinea);\r\n            holder.lblCodigo = (TextView) convertView.findViewById(R.id.lblCodigo);\r\n            holder.lblProducto = (TextView) convertView.findViewById(R.id.lblProducto);\r\n            holder.lblPres = (TextView) convertView.findViewById(R.id.lblPres);\r\n            holder.lblUmbas = (TextView) convertView.findViewById(R.id.lblUmbas);\r\n            holder.lblCantidad = (TextView) convertView.findViewById(R.id.lblCantidad);\r\n            holder.lblCantRec = (TextView) convertView.findViewById(R.id.lblCantRec);\r\n            holder.lblDiferencia = (TextView) convertView.findViewById(R.id.lblDiferencia);\r\n            holder.lblCosto = (TextView) convertView.findViewById(R.id.lblCosto);\r\n            holder.lblFactor = (TextView) convertView.findViewById(R.id.lblFactor);\r\n            holder.lblIdOcDet = (TextView) convertView.findViewById(R.id.lblIdOcDet);\r\n            holder.lblIdOcEnc = (TextView) convertView.findViewById(R.id.lblIdOcEnc);\r\n            holder.lblIdOcEnc = (TextView) convertView.findViewById(R.id.lblIdOcEnc);\r\n            holder.lblIdPropietarioBodega = (TextView) convertView.findViewById(R.id.lblIdPropietarioBodega);\r\n            holder.lblNombrePropietario =  (TextView) convertView.findViewById(R.id.lblNombrePropietario);\r\n\r\n            convertView.setTag(holder);\r\n        } else {\r\n            holder = (ViewHolder) convertView.getTag();\r\n        }\r\n\r\n        if (position==0){\r\n\r\n            holder.lblNombrePropietario.setText(\"Propietario\");\r\n            holder.lblNombrePropietario.setTextColor(R.style.titlestyle);\r\n            if (!Es_Poliza_Consolidada) {\r\n                holder.lblNombrePropietario.setVisibility(View.GONE);\r\n            }\r\n            holder.lblNoLinea.setText(\"NoLinea\");\r\n            holder.lblNoLinea.setTextColor(Color.parseColor(\"#FFFFFF\"));\r\n            holder.lblCodigo.setText(\"Código\");\r\n            holder.lblCodigo.setTextColor(Color.parseColor(\"#FFFFFF\"));\r\n            holder.lblProducto.setText(\"Producto\");\r\n            holder.lblProducto.setTextColor(Color.parseColor(\"#FFFFFF\"));\r\n            holder.lblPres.setText(\"Presentación\");\r\n            holder.lblPres.setTextColor(Color.parseColor(\"#FFFFFF\"));\r\n            holder.lblUmbas.setText(\"UmBas\");\r\n            holder.lblUmbas.setTextColor(Color.parseColor(\"#FFFFFF\"));\r\n            holder.lblCantidad.setText(\"Cantidad\");\r\n            holder.lblCantidad.setTextColor(Color.parseColor(\"#FFFFFF\"));\r\n            holder.lblCantRec.setText(\"CantidadRec\");\r\n            holder.lblCantRec.setTextColor(Color.parseColor(\"#FFFFFF\"));\r\n            holder.lblDiferencia.setText(\"Diferencia\");\r\n            holder.lblDiferencia.setTextColor(Color.parseColor(\"#FFFFFF\"));\r\n            holder.lblCosto.setText(\"Costo\");\r\n            holder.lblCantRec.setTextColor(Color.parseColor(\"#FFFFFF\"));\r\n            holder.lblFactor.setText(\"Factor\");\r\n            holder.lblFactor.setTextColor(Color.parseColor(\"#FFFFFF\"));\r\n            holder.lblIdOcDet.setText(\"IdDocDet\");\r\n            holder.lblIdOcDet.setTextColor(Color.parseColor(\"#FFFFFF\"));\r\n            holder.lblIdOcDet.setVisibility(View.GONE);\r\n            holder.lblIdOcEnc.setText(\"IdDocEnc\");\r\n            holder.lblIdOcEnc.setTextColor(Color.parseColor(\"#FFFFFF\"));\r\n            holder.lblIdOcEnc.setVisibility(View.GONE);\r\n            holder.lblIdPropietarioBodega.setText(\"IdPropietarioBodega\");\r\n            holder.lblIdPropietarioBodega.setTextColor(Color.parseColor(\"#FFFFFF\"));\r\n            if (!Es_Poliza_Consolidada) {\r\n                holder.lblIdPropietarioBodega.setVisibility(View.GONE);\r\n            }\r\n\r\n        }else{\r\n\r\n            holder.lblNombrePropietario.setText(\"--\");\r\n            holder.lblNoLinea.setText(\"0\");\r\n            holder.lblCodigo.setText(\"--\");\r\n            holder.lblProducto.setText(\"--\");\r\n            holder.lblPres.setText(\"--\");\r\n            holder.lblUmbas.setText(\"--\");\r\n            holder.lblCantidad.setText(\"0\");\r\n            holder.lblCantRec.setText(\"0\");\r\n            holder.lblDiferencia.setText(\"0\");\r\n            holder.lblCosto.setText(\"0\");\r\n            holder.lblFactor.setText(\"0\");\r\n            holder.lblIdOcDet.setText(\"0\");\r\n            holder.lblIdOcDet.setVisibility(View.GONE);\r\n            holder.lblIdOcEnc.setText(\"0\");\r\n            holder.lblIdOcEnc.setVisibility(View.GONE);\r\n            holder.lblIdPropietarioBodega.setText(\"0\");\r\n\r\n            if (!Es_Poliza_Consolidada) {\r\n                holder.lblIdPropietarioBodega.setVisibility(View.GONE);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).No_Linea>0){\r\n                holder.lblNoLinea.setText(\"\"+BeDetalleOC.get(position).No_Linea);\r\n            }\r\n            if(BeDetalleOC.get(position).Producto.Codigo!=null){\r\n                holder.lblCodigo.setText(BeDetalleOC.get(position).Producto.Codigo);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).Producto.Nombre!=null){\r\n                holder.lblProducto.setText(BeDetalleOC.get(position).Producto.Nombre);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).Presentacion.Nombre!=null){\r\n                holder.lblPres.setText(BeDetalleOC.get(position).Presentacion.Nombre);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).UnidadMedida.Nombre!=null){\r\n                holder.lblUmbas.setText(BeDetalleOC.get(position).UnidadMedida.Nombre);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).Cantidad>0){\r\n                holder.lblCantidad.setText(\"\"+BeDetalleOC.get(position).Cantidad);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).Cantidad_recibida>0){\r\n                holder.lblCantRec.setText(\"\"+BeDetalleOC.get(position).Cantidad_recibida);\r\n            }\r\n\r\n            holder.lblDiferencia.setText(\"\"+(BeDetalleOC.get(position).Cantidad_recibida-BeDetalleOC.get(position).Cantidad));\r\n\r\n            if(BeDetalleOC.get(position).Costo>0){\r\n                holder.lblCosto.setText(\"\"+BeDetalleOC.get(position).Costo);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).FactorPresentacion>0){\r\n                holder.lblFactor.setText(\"\"+BeDetalleOC.get(position).FactorPresentacion);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).IdOrdenCompraDet>0){\r\n                holder.lblIdOcDet.setText(\"\"+BeDetalleOC.get(position).IdOrdenCompraDet);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).IdOrdenCompraEnc>0){\r\n                holder.lblIdOcEnc.setText(\"\"+BeDetalleOC.get(position).IdOrdenCompraEnc);\r\n            }\r\n\r\n            if(BeDetalleOC.get(position).IdPropietarioBodega>0){\r\n                holder.lblIdPropietarioBodega.setText(\"\"+BeDetalleOC.get(position).IdPropietarioBodega);\r\n            }\r\n\r\n            if(!BeDetalleOC.get(position).Nombre_Propietario.isEmpty()){\r\n                holder.lblNombrePropietario.setText(\"\"+BeDetalleOC.get(position).Nombre_Propietario);\r\n            }\r\n\r\n          /*  if (position > 0 && BeDetalleOC.get(position).Cantidad_recibida > 0.0) {\r\n                //#GT 20210524 Aquí ponemos la letra de color rojo para identificar que ya fue recepcionado\r\n                holder.lblNoLinea.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblCodigo.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblProducto.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblPres.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblUmbas.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblCantidad.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblCosto.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblCantRec.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblDiferencia.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblCantRec.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblFactor.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblIdOcDet.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblIdOcEnc.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblIdPropietarioBodega.setTextColor(Color.parseColor(\"#f7400f\"));\r\n                holder.lblNombrePropietario.setTextColor(Color.parseColor(\"#f7400f\"));\r\n\r\n            } else {\r\n                holder.lblNoLinea.setTextColor(R.style.titlestyle);\r\n                holder.lblCodigo.setTextColor(R.style.titlestyle);\r\n                holder.lblProducto.setTextColor(R.style.titlestyle);\r\n                holder.lblPres.setTextColor(R.style.titlestyle);\r\n                holder.lblUmbas.setTextColor(R.style.titlestyle);\r\n                holder.lblCosto.setTextColor(R.style.titlestyle);\r\n                holder.lblCantidad.setTextColor(R.style.titlestyle);\r\n                holder.lblCantRec.setTextColor(R.style.titlestyle);\r\n                holder.lblDiferencia.setTextColor(R.style.titlestyle);\r\n                holder.lblCantRec.setTextColor(R.style.titlestyle);\r\n                holder.lblFactor.setTextColor(R.style.titlestyle);\r\n                holder.lblIdOcDet.setTextColor(R.style.titlestyle);\r\n                holder.lblIdOcEnc.setTextColor(R.style.titlestyle);\r\n                holder.lblIdPropietarioBodega.setTextColor(R.style.titlestyle);\r\n                holder.lblNombrePropietario.setTextColor(R.style.titlestyle);\r\n            }*/\r\n\r\n        }\r\n\r\n        if(selectedIndex!= -1 && position == selectedIndex) {\r\n            convertView.setBackgroundColor(Color.rgb(0, 128, 0));\r\n        } else {\r\n            if (position==0){\r\n                convertView.setBackgroundResource(R.drawable.color_medium);\r\n                holder.lblNoLinea.setTextColor(R.style.titlestyle);\r\n            }else{\r\n                //#CKFK 20210525 Aquí ponemos la fila de color verde claro para identificar que ya fue recepcionado\r\n                if (BeDetalleOC.get(position).Cantidad_recibida == BeDetalleOC.get(position).Cantidad) {\r\n                    convertView.setBackgroundColor(Color.parseColor(\"#c9ffc0\"));\r\n                }else if (BeDetalleOC.get(position).Cantidad_recibida < BeDetalleOC.get(position).Cantidad  &&\r\n                          BeDetalleOC.get(position).Cantidad_recibida >0) {\r\n                    convertView.setBackgroundColor(Color.parseColor(\"#f5ffae\"));\r\n                }else{\r\n                    convertView.setBackgroundColor(Color.TRANSPARENT);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return convertView;\r\n    }\r\n\r\n    static class ViewHolder {\r\n        TextView lblNoLinea,\r\n                 lblCodigo,\r\n                 lblProducto,\r\n                 lblPres,\r\n                 lblUmbas,\r\n                 lblCantidad,\r\n                 lblCantRec,\r\n                 lblDiferencia,\r\n                 lblCosto,\r\n                 lblFactor,\r\n                 lblIdOcDet,\r\n                 lblIdOcEnc,\r\n                 lblIdPropietarioBodega,\r\n                 lblNombrePropietario;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/dts/ladapt/list_adapt_detalle_recepcion.java	(revision 23573726fe05175388ab5ddc3769c2fb2c305ea7)
+++ app/src/main/java/com/dts/ladapt/list_adapt_detalle_recepcion.java	(date 1623443994416)
@@ -81,7 +81,7 @@
         if (position==0){
 
             holder.lblNombrePropietario.setText("Propietario");
-            holder.lblNombrePropietario.setTextColor(R.style.titlestyle);
+            holder.lblNombrePropietario.setTextColor(Color.parseColor("#FFFFFF"));
             if (!Es_Poliza_Consolidada) {
                 holder.lblNombrePropietario.setVisibility(View.GONE);
             }
@@ -193,42 +193,6 @@
                 holder.lblNombrePropietario.setText(""+BeDetalleOC.get(position).Nombre_Propietario);
             }
 
-          /*  if (position > 0 && BeDetalleOC.get(position).Cantidad_recibida > 0.0) {
-                //#GT 20210524 Aquí ponemos la letra de color rojo para identificar que ya fue recepcionado
-                holder.lblNoLinea.setTextColor(Color.parseColor("#f7400f"));
-                holder.lblCodigo.setTextColor(Color.parseColor("#f7400f"));
-                holder.lblProducto.setTextColor(Color.parseColor("#f7400f"));
-                holder.lblPres.setTextColor(Color.parseColor("#f7400f"));
-                holder.lblUmbas.setTextColor(Color.parseColor("#f7400f"));
-                holder.lblCantidad.setTextColor(Color.parseColor("#f7400f"));
-                holder.lblCosto.setTextColor(Color.parseColor("#f7400f"));
-                holder.lblCantRec.setTextColor(Color.parseColor("#f7400f"));
-                holder.lblDiferencia.setTextColor(Color.parseColor("#f7400f"));
-                holder.lblCantRec.setTextColor(Color.parseColor("#f7400f"));
-                holder.lblFactor.setTextColor(Color.parseColor("#f7400f"));
-                holder.lblIdOcDet.setTextColor(Color.parseColor("#f7400f"));
-                holder.lblIdOcEnc.setTextColor(Color.parseColor("#f7400f"));
-                holder.lblIdPropietarioBodega.setTextColor(Color.parseColor("#f7400f"));
-                holder.lblNombrePropietario.setTextColor(Color.parseColor("#f7400f"));
-
-            } else {
-                holder.lblNoLinea.setTextColor(R.style.titlestyle);
-                holder.lblCodigo.setTextColor(R.style.titlestyle);
-                holder.lblProducto.setTextColor(R.style.titlestyle);
-                holder.lblPres.setTextColor(R.style.titlestyle);
-                holder.lblUmbas.setTextColor(R.style.titlestyle);
-                holder.lblCosto.setTextColor(R.style.titlestyle);
-                holder.lblCantidad.setTextColor(R.style.titlestyle);
-                holder.lblCantRec.setTextColor(R.style.titlestyle);
-                holder.lblDiferencia.setTextColor(R.style.titlestyle);
-                holder.lblCantRec.setTextColor(R.style.titlestyle);
-                holder.lblFactor.setTextColor(R.style.titlestyle);
-                holder.lblIdOcDet.setTextColor(R.style.titlestyle);
-                holder.lblIdOcEnc.setTextColor(R.style.titlestyle);
-                holder.lblIdPropietarioBodega.setTextColor(R.style.titlestyle);
-                holder.lblNombrePropietario.setTextColor(R.style.titlestyle);
-            }*/
-
         }
 
         if(selectedIndex!= -1 && position == selectedIndex) {
@@ -236,7 +200,7 @@
         } else {
             if (position==0){
                 convertView.setBackgroundResource(R.drawable.color_medium);
-                holder.lblNoLinea.setTextColor(R.style.titlestyle);
+                holder.lblNoLinea.setTextColor(Color.parseColor("#FFFFFF"));
             }else{
                 //#CKFK 20210525 Aquí ponemos la fila de color verde claro para identificar que ya fue recepcionado
                 if (BeDetalleOC.get(position).Cantidad_recibida == BeDetalleOC.get(position).Cantidad) {
Index: app/src/main/res/layout/activity_frm_list_rec_prod_detalle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".Transacciones.Recepcion.frm_list_rec_prod_detalle\">\r\n\r\n    <HorizontalScrollView\r\n        android:id=\"@+id/srollRecDet\"\r\n        android:layout_width=\"392dp\"\r\n        android:layout_height=\"379dp\"\r\n        android:layout_above=\"@+id/btnCorregir\"\r\n        android:layout_below=\"@id/txtCodigoProductoRecepcion2\"\r\n        android:layout_marginBottom=\"5dp\">\r\n\r\n        <ListView\r\n            android:id=\"@+id/listRecDet\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_marginTop=\"1dp\"\r\n            android:layout_marginBottom=\"1dp\" />\r\n    </HorizontalScrollView>\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView97\"\r\n        style=\"@style/StyleText\"\r\n        android:layout_width=\"150dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignTop=\"@id/txtCodigoProductoRecepcion2\"\r\n        android:layout_alignBottom=\"@id/txtCodigoProductoRecepcion2\"\r\n        android:text=\"Código:\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/txtCodigoProductoRecepcion2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@id/btnCompletaRec2\"\r\n        android:layout_alignStart=\"@id/btnCompletaRec2\"\r\n        android:layout_alignEnd=\"@id/btnCompletaRec2\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:layout_marginEnd=\"0dp\"\r\n        android:inputType=\"textPersonName\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/imgImprimir\"\r\n        android:layout_width=\"70dp\"\r\n        android:layout_height=\"54dp\"\r\n        android:layout_above=\"@id/textView97\"\r\n        android:layout_below=\"@id/lblNoDocumento2\"\r\n        android:onClick=\"Imprimir\"\r\n        android:padding=\"10dp\"\r\n        android:src=\"@drawable/login_printer\"\r\n        android:visibility=\"invisible\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btnCompletaRec2\"\r\n        android:layout_width=\"204dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@id/lblNoDocumento2\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_marginStart=\"93dp\"\r\n        android:layout_marginTop=\"1dp\"\r\n        android:layout_marginEnd=\"44dp\"\r\n        android:layout_toEndOf=\"@+id/imageView13\"\r\n        android:background=\"@color/rosado\"\r\n        android:text=\"Incompleta\"\r\n        android:textColor=\"@color/colorPrimaryDark\"\r\n        android:textSize=\"18sp\"\r\n        android:textStyle=\"bold\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/lblNoDocumento2\"\r\n        style=\"@style/StyleText\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"35dp\"\r\n        android:layout_below=\"@+id/reltop\"\r\n        android:background=\"@drawable/color_light\"\r\n        android:gravity=\"center\"\r\n        android:text=\"NoDocumento:\" />\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/relbot\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"48dp\"\r\n        android:layout_alignParentStart=\"true\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_marginStart=\"0dp\"\r\n        android:layout_marginBottom=\"1dp\"\r\n        android:background=\"@drawable/color_medium\">\r\n\r\n        <Button\r\n            android:id=\"@+id/btnBack\"\r\n            android:layout_width=\"61dp\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_alignParentStart=\"true\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_marginBottom=\"0dp\"\r\n            android:background=\"@drawable/back\"\r\n            android:onClick=\"BacKList\" />\r\n\r\n    </RelativeLayout>\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/reltop\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"48dp\"\r\n        android:layout_alignParentStart=\"false\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:background=\"@drawable/color_medium\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/lblTituloForma\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:gravity=\"center\"\r\n            android:text=\"Detalle de productos recepcionados\"\r\n            android:textColor=\"#FFFFFF\"\r\n            android:textSize=\"18sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n    </RelativeLayout>\r\n\r\n    <Button\r\n        android:id=\"@+id/btnBorrarTd\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_above=\"@+id/relbot\"\r\n        android:layout_alignParentStart=\"true\"\r\n        android:layout_marginStart=\"30dp\"\r\n        android:layout_marginBottom=\"5dp\"\r\n        android:background=\"@android:color/holo_red_light\"\r\n        android:text=\"Borra todas\"\r\n        android:textColor=\"#FAF9F9\"\r\n        android:visibility=\"invisible\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btnCorregir\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignTop=\"@+id/btnBorrarTd\"\r\n        android:layout_alignBottom=\"@+id/btnBorrarTd\"\r\n        android:layout_marginStart=\"20dp\"\r\n        android:layout_marginTop=\"0dp\"\r\n        android:layout_marginBottom=\"0dp\"\r\n        android:layout_toEndOf=\"@+id/btnBorrarTd\"\r\n        android:background=\"@color/colorPrimary\"\r\n        android:text=\"Corregir\"\r\n        android:textColor=\"#FBF9F9\"\r\n        android:visibility=\"invisible\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btnRegs\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignTop=\"@+id/btnCorregir\"\r\n        android:layout_alignBottom=\"@+id/btnCorregir\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_marginStart=\"20dp\"\r\n        android:layout_marginTop=\"0dp\"\r\n        android:layout_marginEnd=\"40dp\"\r\n        android:layout_toEndOf=\"@+id/btnCorregir\"\r\n        android:background=\"#03508A\"\r\n        android:text=\"Regs: 1\"\r\n        android:textColor=\"#FDFCFC\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btnModo\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignTop=\"@+id/txtCodigoProductoRecepcion2\"\r\n        android:layout_alignBottom=\"@+id/txtCodigoProductoRecepcion2\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_toEndOf=\"@+id/txtCodigoProductoRecepcion2\"\r\n        android:background=\"@color/colorPrimary\"\r\n        android:text=\"R.\"\r\n        android:textColor=\"#FAF9F9\" />\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_frm_list_rec_prod_detalle.xml	(revision 23573726fe05175388ab5ddc3769c2fb2c305ea7)
+++ app/src/main/res/layout/activity_frm_list_rec_prod_detalle.xml	(date 1623438132482)
@@ -67,7 +67,7 @@
         android:text="Incompleta"
         android:textColor="@color/colorPrimaryDark"
         android:textSize="18sp"
-        android:textStyle="bold" />
+        android:textStyle="normal" />
 
     <TextView
         android:id="@+id/lblNoDocumento2"
Index: app/src/main/java/com/dts/ladapt/list_adapter_tareashh.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.dts.ladapt;\r\n\r\nimport android.content.Context;\r\nimport android.graphics.Color;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.BaseAdapter;\r\nimport android.widget.TextView;\r\n\r\nimport com.dts.classes.Transacciones.Recepcion.clsBeTareasIngresoHH;\r\nimport com.dts.tom.R;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class list_adapter_tareashh extends BaseAdapter {\r\n\r\n    private static ArrayList<clsBeTareasIngresoHH> BeListTareasHH;\r\n\r\n    private int selectedIndex;\r\n\r\n    private LayoutInflater l_Inflater;\r\n\r\n    public list_adapter_tareashh(Context context, ArrayList<clsBeTareasIngresoHH> results) {\r\n        BeListTareasHH = results;\r\n        l_Inflater = LayoutInflater.from(context);\r\n        selectedIndex = -1;\r\n    }\r\n\r\n    public void setSelectedIndex(int ind) {\r\n        selectedIndex = ind;\r\n        notifyDataSetChanged();\r\n    }\r\n\r\n    public void refreshItems() {\r\n        notifyDataSetChanged();\r\n    }\r\n\r\n    public int getCount() {\r\n        return BeListTareasHH.size();\r\n    }\r\n\r\n    public Object getItem(int position) {\r\n        return BeListTareasHH.get(position);\r\n    }\r\n\r\n    public long getItemId(int position) {\r\n        return position;\r\n    }\r\n\r\n    public View getView(int position, View convertView, ViewGroup parent) {\r\n\r\n        ViewHolder holder;\r\n\r\n        if (convertView == null) {\r\n\r\n            convertView = l_Inflater.inflate(R.layout.activity_list_adapter_tareashh, null);\r\n\r\n            holder = new ViewHolder();\r\n\r\n            holder.lblIdOrderCompraEnc = (TextView) convertView.findViewById(R.id.lblIdOC);\r\n            holder.lblIdRecepcionEnc = (TextView) convertView.findViewById(R.id.lblRecepcionEnc);\r\n            holder.lblNoReferenciaOC = (TextView) convertView.findViewById(R.id.lblNoRefOC);\r\n            holder.lblNoDocumentoOc = (TextView) convertView.findViewById(R.id.lblNDocOc);\r\n            holder.lblProveedor = (TextView) convertView.findViewById(R.id.lblProvee);\r\n            holder.lblTipoIngresoOC = (TextView) convertView.findViewById(R.id.lblTipoIng);\r\n            holder.lblTipoRecepcion = (TextView) convertView.findViewById(R.id.lblTipoRece);\r\n            holder.lblNombrePropietario = (TextView) convertView.findViewById(R.id.lblNombrePropietario);\r\n            holder.lblNumPoliza = (TextView) convertView.findViewById(R.id.lblNumPoliza);\r\n            holder.lblNumOrden = (TextView) convertView.findViewById(R.id.lblNumOrden);\r\n\r\n            convertView.setTag(holder);\r\n\r\n        } else {\r\n            holder = (ViewHolder) convertView.getTag();\r\n        }\r\n\r\n        if (position==0){\r\n\r\n            holder.lblIdOrderCompraEnc.setText(\"NoDoc\");\r\n            holder.lblIdRecepcionEnc.setText(\"Rec\");\r\n            holder.lblIdRecepcionEnc.setTextColor(R.style.titlestyle);\r\n            holder.lblNombrePropietario.setText(\"Propietario\");\r\n            holder.lblNombrePropietario.setTextColor(R.style.titlestyle);\r\n            holder.lblNoReferenciaOC.setText(\"NoRefDoc\");\r\n            holder.lblNoReferenciaOC.setTextColor(R.style.titlestyle);\r\n            holder.lblNoDocumentoOc.setText(\"No_Doc_ERP\");\r\n            holder.lblNoDocumentoOc.setTextColor(R.style.titlestyle);\r\n            holder.lblProveedor.setText(\"Proveedor\");\r\n            holder.lblProveedor.setTextColor(R.style.titlestyle);\r\n            holder.lblTipoIngresoOC.setText(\"TipoIngresoDoc\");\r\n            holder.lblTipoIngresoOC.setTextColor(R.style.titlestyle);\r\n            holder.lblTipoRecepcion.setText(\"TipoRecepcion\");\r\n            holder.lblTipoRecepcion.setTextColor(R.style.titlestyle);\r\n            holder.lblNumOrden.setText(\"NumOrden\");\r\n            holder.lblNumOrden.setTextColor(R.style.titlestyle);\r\n            holder.lblNumPoliza.setText(\"NumPoliza\");\r\n            holder.lblNumPoliza.setTextColor(R.style.titlestyle);\r\n\r\n        }else{\r\n\r\n            holder.lblIdOrderCompraEnc.setText(\"0\");\r\n            holder.lblIdRecepcionEnc.setText(\"0\");\r\n            holder.lblNoReferenciaOC.setText(\"--\");\r\n            holder.lblNoDocumentoOc.setText(\"--\");\r\n            holder.lblNumOrden.setText(\"--\");\r\n            holder.lblNumPoliza.setText(\"--\");\r\n            holder.lblProveedor.setText(\"--\");\r\n            holder.lblTipoIngresoOC.setText(\"--\");\r\n            holder.lblTipoRecepcion.setText(\"--\");\r\n\r\n            if(BeListTareasHH.get(position).IdOrderCompraEnc>0){\r\n                holder.lblIdOrderCompraEnc.setText(\"\"+BeListTareasHH.get(position).IdOrderCompraEnc);\r\n            }\r\n            if(BeListTareasHH.get(position).IdRecepcionEnc>0){\r\n                holder.lblIdRecepcionEnc.setText(\"\"+BeListTareasHH.get(position).IdRecepcionEnc);\r\n            }\r\n\r\n            if(BeListTareasHH.get(position).NombrePropietario!=null){\r\n                holder.lblNombrePropietario.setText(BeListTareasHH.get(position).NombrePropietario);\r\n            }\r\n\r\n            if(BeListTareasHH.get(position).NoReferenciaOC!=null){\r\n                holder.lblNoReferenciaOC.setText(BeListTareasHH.get(position).NoReferenciaOC);\r\n            }\r\n\r\n            if(BeListTareasHH.get(position).NoDocumentoOc!=null){\r\n                holder.lblNoDocumentoOc.setText(BeListTareasHH.get(position).NoDocumentoOc);\r\n            }\r\n\r\n            if(BeListTareasHH.get(position).NombreProveedor!=null){\r\n                holder.lblProveedor.setText(BeListTareasHH.get(position).NombreProveedor);\r\n            }\r\n\r\n            if(BeListTareasHH.get(position).NombreTipoIngresoOC!=null){\r\n                holder.lblTipoIngresoOC.setText(BeListTareasHH.get(position).NombreTipoIngresoOC);\r\n            }\r\n\r\n            if(BeListTareasHH.get(position).NombreTipoRecepcion!=null){\r\n                holder.lblTipoRecepcion.setText(BeListTareasHH.get(position).NombreTipoRecepcion);\r\n            }\r\n\r\n            if(BeListTareasHH.get(position).NumOrden!=null){\r\n                holder.lblNumOrden.setText(BeListTareasHH.get(position).NumOrden);\r\n            }\r\n\r\n            if(BeListTareasHH.get(position).NumPoliza!=null){\r\n                holder.lblNumPoliza.setText(BeListTareasHH.get(position).NumPoliza);\r\n            }\r\n        }\r\n\r\n        if(selectedIndex!= -1 && position == selectedIndex) {\r\n            convertView.setBackgroundColor(Color.rgb(0, 128, 0));\r\n        } else {\r\n           if (position==0){\r\n               convertView.setBackgroundResource(R.drawable.color_medium);\r\n               holder.lblIdOrderCompraEnc.setTextColor(R.style.titlestyle);\r\n           }else{\r\n               convertView.setBackgroundColor(Color.TRANSPARENT);\r\n           }\r\n\r\n        }\r\n\r\n        return convertView;\r\n    }\r\n\r\n    static class ViewHolder {\r\n        TextView lblIdOrderCompraEnc,\r\n                lblIdRecepcionEnc,\r\n                lblNombrePropietario,\r\n                lblNoReferenciaOC,\r\n                lblNoDocumentoOc,\r\n                lblProveedor,\r\n                lblTipoIngresoOC,\r\n                lblTipoRecepcion,\r\n                lblNumOrden,\r\n                lblNumPoliza;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/dts/ladapt/list_adapter_tareashh.java	(revision 23573726fe05175388ab5ddc3769c2fb2c305ea7)
+++ app/src/main/java/com/dts/ladapt/list_adapter_tareashh.java	(date 1623435924924)
@@ -78,24 +78,25 @@
         if (position==0){
 
             holder.lblIdOrderCompraEnc.setText("NoDoc");
+            holder.lblIdOrderCompraEnc.setTextColor(Color.parseColor("#FFFFFF"));
             holder.lblIdRecepcionEnc.setText("Rec");
-            holder.lblIdRecepcionEnc.setTextColor(R.style.titlestyle);
+            holder.lblIdRecepcionEnc.setTextColor(Color.parseColor("#FFFFFF"));
             holder.lblNombrePropietario.setText("Propietario");
-            holder.lblNombrePropietario.setTextColor(R.style.titlestyle);
+            holder.lblNombrePropietario.setTextColor(Color.parseColor("#FFFFFF"));
             holder.lblNoReferenciaOC.setText("NoRefDoc");
-            holder.lblNoReferenciaOC.setTextColor(R.style.titlestyle);
-            holder.lblNoDocumentoOc.setText("No_Doc_ERP");
-            holder.lblNoDocumentoOc.setTextColor(R.style.titlestyle);
+            holder.lblNoReferenciaOC.setTextColor(Color.parseColor("#FFFFFF"));
+            holder.lblNoDocumentoOc.setText("Doc.ERP");
+            holder.lblNoDocumentoOc.setTextColor(Color.parseColor("#FFFFFF"));
             holder.lblProveedor.setText("Proveedor");
-            holder.lblProveedor.setTextColor(R.style.titlestyle);
-            holder.lblTipoIngresoOC.setText("TipoIngresoDoc");
-            holder.lblTipoIngresoOC.setTextColor(R.style.titlestyle);
-            holder.lblTipoRecepcion.setText("TipoRecepcion");
-            holder.lblTipoRecepcion.setTextColor(R.style.titlestyle);
-            holder.lblNumOrden.setText("NumOrden");
-            holder.lblNumOrden.setTextColor(R.style.titlestyle);
-            holder.lblNumPoliza.setText("NumPoliza");
-            holder.lblNumPoliza.setTextColor(R.style.titlestyle);
+            holder.lblProveedor.setTextColor(Color.parseColor("#FFFFFF"));
+            holder.lblTipoIngresoOC.setText("TipoIngreso");
+            holder.lblTipoIngresoOC.setTextColor(Color.parseColor("#FFFFFF"));
+            holder.lblTipoRecepcion.setText("TipoRec");
+            holder.lblTipoRecepcion.setTextColor(Color.parseColor("#FFFFFF"));
+            holder.lblNumOrden.setText("No.Orden");
+            holder.lblNumOrden.setTextColor(Color.parseColor("#FFFFFF"));
+            holder.lblNumPoliza.setText("No.Poliza");
+            holder.lblNumPoliza.setTextColor(Color.parseColor("#FFFFFF"));
 
         }else{
 
@@ -154,7 +155,7 @@
         } else {
            if (position==0){
                convertView.setBackgroundResource(R.drawable.color_medium);
-               holder.lblIdOrderCompraEnc.setTextColor(R.style.titlestyle);
+               holder.lblIdOrderCompraEnc.setTextColor(Color.parseColor("#FFFFFF"));
            }else{
                convertView.setBackgroundColor(Color.TRANSPARENT);
            }
