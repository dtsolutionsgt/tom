Index: app/src/main/java/com/dts/tom/Transacciones/Recepcion/frm_list_rec_prod_detalle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.dts.tom.Transacciones.Recepcion;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.AdapterView;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.ListView;\r\n\r\nimport com.dts.base.WebService;\r\nimport com.dts.base.XMLObject;\r\nimport com.dts.classes.Mantenimientos.Producto.clsBeProducto;\r\nimport com.dts.classes.Transacciones.OrdenCompra.Trans_oc_det.clsBeTrans_oc_det;\r\nimport com.dts.classes.Transacciones.Recepcion.Trans_re_det.clsBeTrans_re_det;\r\nimport com.dts.classes.Transacciones.Recepcion.Trans_re_det.clsBeTrans_re_detList;\r\nimport com.dts.tom.PBase;\r\nimport com.dts.tom.R;\r\nimport com.dts.ladapt.list_adapt_detalle_rec_prod;\r\nimport com.zebra.sdk.comm.BluetoothConnection;\r\nimport com.zebra.sdk.printer.ZebraPrinter;\r\nimport com.zebra.sdk.printer.ZebraPrinterFactory;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.stream.Collectors;\r\n\r\nimport static br.com.zbra.androidlinq.Linq.stream;\r\n\r\n\r\npublic class frm_list_rec_prod_detalle extends PBase {\r\n\r\n    private WebServiceHandler ws;\r\n    private XMLObject xobj;\r\n\r\n    private Button btnRegs, btnCompletaRec2;\r\n    private ListView listView;\r\n\r\n    private clsBeTrans_oc_det BeOcDet;\r\n    private clsBeProducto BeProducto = new clsBeProducto();\r\n    private clsBeTrans_re_detList pListTransRecDet = new clsBeTrans_re_detList();\r\n    private clsBeTrans_re_det selitem;\r\n\r\n    private int mdet=1;\r\n    private String pNumeroLP=\"\";\r\n\r\n    private ImageView imgImprimir;\r\n\r\n    private list_adapt_detalle_rec_prod adapter;\r\n    private static ArrayList<clsBeTrans_re_det> BeListDetalleRec= new ArrayList<clsBeTrans_re_det>() ;\r\n\r\n    private ProgressDialog progress;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_frm_list_rec_prod_detalle);\r\n\r\n        super.InitBase();\r\n\r\n        ws = new frm_list_rec_prod_detalle.WebServiceHandler(frm_list_rec_prod_detalle.this, gl.wsurl);\r\n        xobj = new XMLObject(ws);\r\n\r\n        btnRegs = (Button) findViewById(R.id.btnRegs);\r\n        btnCompletaRec2 = (Button) findViewById(R.id.btnCompletaRec2);\r\n        imgImprimir = (ImageView)findViewById(R.id.imgImprimir);\r\n\r\n        listView = (ListView)findViewById(R.id.listRecDet);\r\n\r\n        if (gl.gselitem != null) {\r\n            BeOcDet=gl.gselitem;\r\n\r\n            valida_producto_completo();\r\n        }\r\n\r\n        this.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);\r\n\r\n        ProgressDialog();\r\n\r\n        progress.setMessage(\"Cargando detalle\");\r\n\r\n        setHandles();\r\n\r\n        //Llama a processBeProducto\r\n        execws(1);\r\n\r\n    }\r\n\r\n    public void ProgressDialog(){\r\n        progress=new ProgressDialog(this);\r\n        progress.setProgressStyle(ProgressDialog.STYLE_SPINNER);\r\n        progress.setIndeterminate(true);\r\n        progress.setProgress(0);\r\n        progress.show();\r\n    }\r\n\r\n    private void setHandles(){\r\n\r\n        try{\r\n\r\n            listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                @Override\r\n                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\r\n\r\n                    selid = 0;\r\n\r\n                    if (position>0){\r\n\r\n                            Object lvObj = listView.getItemAtPosition(position);\r\n                            selitem = pListTransRecDet.items.get(position-1);\r\n\r\n                            selid =selitem.IdRecepcionDet ;\r\n                            selidx = position;\r\n                            adapter.setSelectedIndex(position);\r\n                            pNumeroLP = selitem.Lic_plate;\r\n\r\n                            imgImprimir.setVisibility(View.VISIBLE);\r\n\r\n                    }else{\r\n                        imgImprimir.setVisibility(View.INVISIBLE);\r\n                    }\r\n\r\n                }\r\n\r\n            });\r\n\r\n\r\n            listView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {\r\n\r\n                @Override\r\n                public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\r\n\r\n                    selid = 0;\r\n\r\n                    if (position>0){\r\n\r\n                        Object lvObj = listView.getItemAtPosition(position);\r\n                        selitem = pListTransRecDet.items.get(position-1);\r\n\r\n                        selid =selitem.IdRecepcionDet ;\r\n                        selidx = position;\r\n                        adapter.setSelectedIndex(position);\r\n\r\n                        if (!gl.gBeRecepcion.Habilitar_Stock) {\r\n                            Procesar_registro();\r\n                        }else{\r\n                            msgbox(\"El detalle no se puede modificar porque ya el Stock estÃ¡ habilitado\");\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n\r\n            });\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"setHandles:\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    public void BacKList(View view) {\r\n        doExit();\r\n    }\r\n\r\n    private void Procesar_registro(){\r\n        gl.mode=2;\r\n        gl.gListTransRecDet.items = stream(pListTransRecDet.items).where(c->c.IdRecepcionDet == selid).toList();\r\n        browse=1;\r\n        startActivity(new Intent(this, frm_recepcion_datos.class));\r\n    }\r\n\r\n    private void Lista_Detalle_Rec(){\r\n        clsBeTrans_re_det vItem;\r\n        BeListDetalleRec.clear();\r\n\r\n        try{\r\n\r\n            vItem = new clsBeTrans_re_det();\r\n            BeListDetalleRec.add(vItem);\r\n\r\n            if (mdet==1){\r\n//Version de Android 7\r\n                if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N)\r\n                {\r\n                Map<String, Map<String, Map<String, Map<Double, List<clsBeTrans_re_det>>>>> employessGroup=\r\n                        null;\r\n                    employessGroup = pListTransRecDet.items.stream().collect(\r\n                            Collectors.groupingBy(clsBeTrans_re_det::getNombre_presentacion,\r\n                                Collectors.groupingBy(clsBeTrans_re_det::getNombre_producto_estado,\r\n                                    Collectors.groupingBy(clsBeTrans_re_det::getNombre_producto,\r\n                                            Collectors.groupingBy(clsBeTrans_re_det::getcantidad_recibida)))));\r\n                    employessGroup.size();\r\n                }\r\n\r\n            }else{\r\n\r\n            }\r\n\r\n            if (pListTransRecDet!=null){\r\n\r\n                if (pListTransRecDet.items!=null){\r\n\r\n                   for (clsBeTrans_re_det obj:pListTransRecDet.items){\r\n\r\n                       vItem = new clsBeTrans_re_det();\r\n\r\n                       vItem.Nombre_presentacion = obj.Nombre_presentacion;\r\n                       vItem.Codigo_Producto = obj.Codigo_Producto;\r\n                       vItem.Nombre_unidad_medida = obj.Nombre_unidad_medida;\r\n                       vItem.cantidad_recibida = obj.cantidad_recibida;\r\n                       vItem.IdProductoBodega = obj.IdProductoBodega;\r\n                       vItem.Nombre_producto_estado = obj.Nombre_producto_estado;\r\n                       vItem.Fecha_vence = du.convierteFechaMostar(obj.Fecha_vence);\r\n                       vItem.Lic_plate = obj.Lic_plate;\r\n\r\n                       BeListDetalleRec.add(vItem);\r\n\r\n                   }\r\n                    int count =BeListDetalleRec.size()-1;\r\n                    btnRegs.setText(\"Regs: \"+count);\r\n                }\r\n            }\r\n\r\n            Collections.sort(BeListDetalleRec,new OrdenarItems());\r\n\r\n            adapter=new list_adapt_detalle_rec_prod(this,BeListDetalleRec);\r\n            listView.setAdapter(adapter);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Lista_Detalle_Rec:\"+e.getMessage());\r\n        }\r\n    }\r\n    void valida_producto_completo(){\r\n\r\n        double CantRec = 0;\r\n        double CantOC  = 0;\r\n\r\n        try{\r\n\r\n           CantOC = BeOcDet.getCantidad();\r\n           CantRec = BeOcDet.getCantidad_recibida();\r\n\r\n            if (CantRec >= CantOC){\r\n\r\n                if (CantRec == CantOC){\r\n                    btnCompletaRec2.setText(\"COMPLETA\");\r\n                    btnCompletaRec2.setBackgroundColor(Color.parseColor(\"#FFA5A0\"));\r\n                }else if (CantRec > CantOC) {\r\n                    btnCompletaRec2.setText(\" DIF - (POS)\");\r\n                    btnCompletaRec2.setBackgroundColor(Color.parseColor(\"#FF0399D5\"));\r\n                }\r\n            }else{\r\n                btnCompletaRec2.setText(\"DIF - (NEG)\");\r\n                btnCompletaRec2.setBackgroundColor(Color.parseColor(\"#FFCC0000\"));\r\n            }\r\n        }catch (Exception ex){\r\n            msgbox(ex.getMessage());\r\n        }\r\n    }\r\n\r\n\r\n    /*Private Sub Valida_Producto_Completo(ByVal CantRec As Double, ByVal CantOC As Double)\r\n\r\n    Try\r\n\r\n    If CantRec >= CantOC Then\r\n    cmdCompletaProd.Text = \"COMPLETA\"\r\n    cmdCompletaProd.BackColor = Color.Green\r\n            Else\r\n    cmdCompletaProd.Text = \"INCOMPLETA\"\r\n    cmdCompletaProd.BackColor = Color.Firebrick\r\n    End If\r\n\r\n    Catch ex As Exception\r\n    MsgBox(ex.Message, MsgBoxStyle.Critical, Me.Text)\r\n    End Try\r\n\r\n    End Sub*/\r\n\r\n    public class OrdenarItems implements Comparator<clsBeTrans_re_det> {\r\n\r\n        public int compare(clsBeTrans_re_det left,clsBeTrans_re_det rigth){\r\n            return left.IdRecepcionDet-rigth.IdRecepcionDet;\r\n            //return left.Nombre.compareTo(rigth.Nombre);\r\n        }\r\n\r\n    }\r\n\r\n    public void Imprimir(View view){\r\n        msgAskImprimir(\"Imprimir Licencia\");\r\n    }\r\n\r\n    private void msgAskImprimir(String msg) {\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(true);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"CÃ³digo de Producto\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    Imprimir_Barra();\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"Licencia de Producto\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    Imprimir_Licencia();\r\n                }\r\n            });\r\n\r\n            dialog.setNeutralButton(\"No imprimir\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {}\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void Imprimir_Licencia(){\r\n        try{\r\n\r\n            //CM_20210112: ImpresiÃ³n de barras.\r\n            BluetoothConnection printerIns= new BluetoothConnection(gl.MacPrinter);\r\n            printerIns.open();\r\n\r\n            if (printerIns.isConnected()){\r\n                ZebraPrinter zPrinterIns = ZebraPrinterFactory.getInstance(printerIns);\r\n                //zPrinterIns.sendCommand(\"! U1 setvar \\\"device.languages\\\" \\\"zpl\\\"\\r\\n\");\r\n\r\n\r\n                String zpl = String.format(\"^XA \\n\" +\r\n                                \"^MMT \\n\" +\r\n                                \"^PW700 \\n\" +\r\n                                \"^LL0406 \\n\" +\r\n                                \"^LS0 \\n\" +\r\n                                \"^FT171,61^A0I,25,14^FH^FD%1$s^FS \\n\" +\r\n                                \"^FT550,61^A0I,25,14^FH^FD%2$s^FS \\n\" +\r\n                                \"^FT670,306^A0I,25,14^FH^FD%3$s^FS \\n\" +\r\n                                \"^FT292,61^A0I,25,24^FH^FDBodega:^FS \\n\" +\r\n                                \"^FT670,61^A0I,25,24^FH^FDEmpresa:^FS \\n\" +\r\n                                \"^FT670,367^A0I,25,24^FH^FDTOMIMS, WMS.  Product Barcode^FS \\n\" +\r\n                                \"^FO2,340^GB670,0,14^FS \\n\" +\r\n                                \"^BY3,3,160^FT670,131^BCI,,Y,N \\n\" +\r\n                                \"^FD%4$s^FS \\n\" +\r\n                                \"^PQ1,0,1,Y \" +\r\n                                \"^XZ\",gl.CodigoBodega, gl.gNomEmpresa,\r\n                        BeProducto.Codigo+\" - \"+BeProducto.Nombre,\r\n                        \"$\"+pNumeroLP);\r\n\r\n                zPrinterIns.sendCommand(zpl);\r\n\r\n\r\n                Thread.sleep(500);\r\n\r\n                // Close the connection to release resources.\r\n                printerIns.close();\r\n\r\n            }else{\r\n                mu.msgbox(\"No se pudo obtener conexiÃ³n con la impresora\");\r\n            }\r\n\r\n           // Actualiza_Valores_Despues_Imprimir();\r\n\r\n        }catch (Exception e){\r\n            //#EJC20210126\r\n            if (e.getMessage().contains(\"Could not connect to device:\")){\r\n                mu.msgbox(\"Error al imprimir el cÃ³digo de barra. No existe conexiÃ³n a la impresora: \"+ gl.MacPrinter);\r\n               // Actualiza_Valores_Despues_Imprimir();\r\n            }else{\r\n                mu.msgbox(\"Imprimir_barra: \"+e.getMessage());\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    private void Imprimir_Barra(){\r\n\r\n        try{\r\n\r\n            //CM_20210112: ImpresiÃ³n de barras.\r\n            BluetoothConnection printerIns= new BluetoothConnection(gl.MacPrinter);\r\n            printerIns.open();\r\n\r\n            if (printerIns.isConnected()){\r\n                ZebraPrinter zPrinterIns = ZebraPrinterFactory.getInstance(printerIns);\r\n                //zPrinterIns.sendCommand(\"! U1 setvar \\\"device.languages\\\" \\\"zpl\\\"\\r\\n\");\r\n\r\n                String zpl = String.format(\"^XA \\n\" +\r\n                                \"^MMT \\n\" +\r\n                                \"^PW700 \\n\" +\r\n                                \"^LL0406 \\n\" +\r\n                                \"^LS0 \\n\" +\r\n                                \"^FT171,61^A0I,25,14^FH^FD%1$s^FS \\n\" +\r\n                                \"^FT550,61^A0I,25,14^FH^FD%2$s^FS \\n\" +\r\n                                \"^FT670,306^A0I,25,14^FH^FD%3$s^FS \\n\" +\r\n                                \"^FT292,61^A0I,25,24^FH^FDBodega:^FS \\n\" +\r\n                                \"^FT670,61^A0I,25,24^FH^FDEmpresa:^FS \\n\" +\r\n                                \"^FT670,367^A0I,25,24^FH^FDTOMIMS, WMS.  Product Barcode^FS \\n\" +\r\n                                \"^FO2,340^GB670,0,14^FS \\n\" +\r\n                                \"^BY3,3,160^FT670,131^BCI,,Y,N \\n\" +\r\n                                \"^FD%4$s^FS \\n\" +\r\n                                \"^PQ1,0,1,Y \" +\r\n                                \"^XZ\",gl.CodigoBodega, gl.gNomEmpresa,\r\n                        BeProducto.Codigo+\" - \"+BeProducto.Nombre,\r\n                        (pNumeroLP!=\"\")?\"$\"+pNumeroLP:BeProducto.Codigo);\r\n\r\n                zPrinterIns.sendCommand(zpl);\r\n\r\n\r\n                Thread.sleep(500);\r\n\r\n                // Close the connection to release resources.\r\n                printerIns.close();\r\n\r\n            }else{\r\n                mu.msgbox(\"No se pudo obtener conexiÃ³n con la impresora\");\r\n            }\r\n\r\n            //Actualiza_Valores_Despues_Imprimir();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Imprimir_barra: \"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    public class WebServiceHandler extends WebService {\r\n\r\n        public WebServiceHandler(PBase Parent,String Url) {\r\n            super(Parent,Url);\r\n        }\r\n\r\n        @Override\r\n        public void wsExecute(){\r\n\r\n            try{\r\n\r\n                switch (ws.callback) {\r\n\r\n                    case 1:\r\n                        callMethod(\"Get_Producto_By_IdProductoBodega\",\"IdProductoBodega\",BeOcDet.IdProductoBodega);\r\n                        break;\r\n                    case 2:\r\n                        callMethod(\"Get_Detalle_By_IdRecepcionDet_HH\",\"pIdRecepcionEnc\",gl.gIdRecepcionEnc,\r\n                                \"pIdProductoBodega\",BeOcDet.IdProductoBodega,\"pNoLinea\",BeOcDet.No_Linea);\r\n                        break;\r\n                }\r\n\r\n            }catch (Exception e){\r\n                mu.msgbox(e.getClass()+\"WebServiceHandler:\"+e.getMessage());\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void wsCallBack(Boolean throwing,String errmsg,int errlevel) {\r\n\r\n        try {\r\n            if (throwing) throw new Exception(errmsg);\r\n\r\n            switch (ws.callback) {\r\n\r\n                case 1:\r\n                    processBeProducto();\r\n                    break;\r\n                case 2:\r\n                    processDetRec();\r\n                    break;\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \"wsCallBack: \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processBeProducto(){\r\n\r\n        try {\r\n\r\n\r\n            BeProducto = xobj.getresult(clsBeProducto.class,\"Get_Producto_By_IdProductoBodega\");\r\n\r\n            //Llama a processDetRec\r\n            execws(2);\r\n            //Load();\r\n\r\n        } catch (Exception e) {\r\n            msgbox(\" processBeProducto: \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processDetRec(){\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Obteniendo detalle\");\r\n\r\n            pListTransRecDet = xobj.getresult(clsBeTrans_re_detList.class,\"Get_Detalle_By_IdRecepcionDet_HH\");\r\n\r\n            if (pListTransRecDet!=null){\r\n                if (pListTransRecDet.items!=null){\r\n                    Lista_Detalle_Rec();\r\n\r\n                    progress.cancel();\r\n\r\n                }else{\r\n                    doExit();\r\n                }\r\n            }\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            mu.msgbox(\"processDetRec:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void execws(int callbackvalue) {\r\n        ws.callback=callbackvalue;\r\n        ws.execute();\r\n    }\r\n\r\n    private void doExit(){\r\n        try{\r\n\r\n            //LimpiaValores();\r\n            super.finish();\r\n            gl.Carga_Producto_x_Pallet=false;\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n\r\n        try{\r\n\r\n            super.onResume();\r\n\r\n            if (browse==1){\r\n                browse=0;\r\n                //Llama a processDetRec\r\n                execws(2);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"OnResume\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        try{\r\n            doExit();\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/dts/tom/Transacciones/Recepcion/frm_list_rec_prod_detalle.java	(revision 52acc74c5b40856a5e0a5e30772612a4ecf60da8)
+++ app/src/main/java/com/dts/tom/Transacciones/Recepcion/frm_list_rec_prod_detalle.java	(date 1623528767766)
@@ -1,6 +1,7 @@
 package com.dts.tom.Transacciones.Recepcion;
 
 import android.app.AlertDialog;
+import android.app.Dialog;
 import android.app.ProgressDialog;
 import android.content.DialogInterface;
 import android.content.Intent;
@@ -302,11 +303,14 @@
     private void msgAskImprimir(String msg) {
         try{
             AlertDialog.Builder dialog = new AlertDialog.Builder(this);
+            AlertDialog dialogT = dialog.create();
+
+            dialogT.setCanceledOnTouchOutside(false);
 
             dialog.setTitle(R.string.app_name);
             dialog.setMessage( msg);
 
-            dialog.setCancelable(true);
+            dialog.setCancelable(false);
 
             dialog.setIcon(R.drawable.ic_quest);
 
