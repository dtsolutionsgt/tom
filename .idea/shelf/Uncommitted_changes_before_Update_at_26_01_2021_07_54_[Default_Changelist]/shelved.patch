Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.1.1'\r\n        classpath 'me.tatarka:gradle-retrolambda:3.7.1'\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision a5622cca171a9b0fa8834e47aebef8f8b52dd59c)
+++ build.gradle	(date 1611364533478)
@@ -6,7 +6,7 @@
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:4.1.1'
+        classpath 'com.android.tools.build:gradle:4.1.2'
         classpath 'me.tatarka:gradle-retrolambda:3.7.1'
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
Index: app/src/main/java/com/dts/tom/Transacciones/Recepcion/frm_recepcion_datos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.dts.tom.Transacciones.Recepcion;\r\n\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.app.DatePickerDialog;\r\nimport android.app.Dialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.DialogInterface;\r\nimport android.graphics.Color;\r\nimport android.graphics.Typeface;\r\nimport android.os.Bundle;\r\nimport android.os.Looper;\r\nimport android.text.Editable;\r\nimport android.text.InputFilter;\r\nimport android.text.InputType;\r\nimport android.text.TextWatcher;\r\nimport android.view.KeyEvent;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\n\r\nimport com.dts.base.DecimalDigitsInputFilter;\r\nimport com.dts.base.WebService;\r\nimport com.dts.base.XMLObject;\r\nimport com.dts.classes.Mantenimientos.Barra_pallet.clsBeI_nav_barras_pallet;\r\nimport com.dts.classes.Mantenimientos.Motivo_devolucion.clsBeMotivo_devolucion;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_Presentacion.clsBeProducto_Presentacion;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_Presentacion.clsBeProducto_PresentacionList;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_codigos_barra.clsBeProducto_codigos_barraList;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_estado.clsBeProducto_estado;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_estado.clsBeProducto_estadoList;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_pallet.clsBeProducto_pallet;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_pallet.clsBeProducto_palletList;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_parametros.clsBeProducto_parametros;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_parametros.clsBeProducto_parametrosList;\r\nimport com.dts.classes.Mantenimientos.Producto.clsBeProducto;\r\nimport com.dts.classes.Mantenimientos.Unidad_medida.clsBeUnidad_medida;\r\nimport com.dts.classes.Transacciones.OrdenCompra.Trans_oc_det.clsBeTrans_oc_det;\r\nimport com.dts.classes.Transacciones.OrdenCompra.Trans_oc_det_lote.clsBeTrans_oc_det_lote;\r\nimport com.dts.classes.Transacciones.Recepcion.LicencePlates.clsBeLicensePlatesList;\r\nimport com.dts.classes.Transacciones.Recepcion.Trans_re_det.clsBeTrans_re_det;\r\nimport com.dts.classes.Transacciones.Recepcion.Trans_re_det.clsBeTrans_re_detList;\r\nimport com.dts.classes.Transacciones.Recepcion.Trans_re_det_parametros.clsBeTrans_re_det_parametros;\r\nimport com.dts.classes.Transacciones.Recepcion.Trans_re_det_parametros.clsBeTrans_re_det_parametrosList;\r\nimport com.dts.classes.Transacciones.Recepcion.clsBeTrans_re_enc;\r\nimport com.dts.classes.Transacciones.Stock.Stock.clsBeStock;\r\nimport com.dts.classes.Transacciones.Stock.Stock_rec.clsBeStock_rec;\r\nimport com.dts.classes.Transacciones.Stock.Stock_rec.clsBeStock_recList;\r\nimport com.dts.classes.Transacciones.Stock.Stock_se_rec.clsBeStock_se_rec;\r\nimport com.dts.classes.Transacciones.Stock.Stock_se_rec.clsBeStock_se_recList;\r\nimport com.dts.tom.PBase;\r\nimport com.dts.tom.R;\r\nimport com.zebra.sdk.comm.BluetoothConnection;\r\nimport com.zebra.sdk.printer.ZebraPrinter;\r\nimport com.zebra.sdk.printer.ZebraPrinterFactory;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.NoSuchElementException;\r\n\r\nimport static br.com.zbra.androidlinq.Linq.stream;\r\nimport static com.dts.tom.Transacciones.Recepcion.frm_list_rec_prod.EsTransferenciaInternaWMS;\r\nimport static com.dts.tom.Transacciones.Recepcion.frm_list_rec_prod.gBeConfiguracionBarraPallet;\r\nimport static com.dts.tom.Transacciones.Recepcion.frm_list_rec_prod.gBeStockRec;\r\n\r\npublic class frm_recepcion_datos extends PBase {\r\n\r\n    Calendar calendario = Calendar.getInstance();\r\n\r\n    private Spinner cmbEstadoProductoRec,cmbPresRec;\r\n    private EditText txtBarra,txtLoteRec,txtUmbasRec,txtCantidadRec,txtPeso,txtPesoUnitario,txtCostoReal,txtCostoOC,cmbVenceRec;\r\n    private TextView lblDatosProd,lblPropPrd,lblPeso,lblPUn,lblCosto,lblCReal,lblPres,lblLote,lblVence;\r\n    private Button btnCantPendiente,btnCantRecibida,btnBack,btnIr;\r\n    private ProgressDialog progress;\r\n    private DatePicker dpResult;\r\n    private ImageView imgDate;\r\n    private CheckBox chkPaletizar, chkPalletNoEstandar;\r\n    private Dialog dialog;\r\n\r\n    //Objeto para dialogo de parametros\r\n    private TextView lblSerieTit,lblSerialP,lblPesoTit,lblTempTit,lblPrducto,lblLicPlate,lblFManufact,lblAnada,lblTempEsta,lblTempReal,lblPresParam,lblPesoEsta,lblPesoReal,lblSerialIni,lblSerialFin;\r\n    private EditText txtLicPlate,txtSerial,txtAnada,txtFechaManu,txtFechaIng,txtTempEsta,txtTempReal,txtPesoEsta,txtPesoReal,txtSerieIni,txtSerieFin;\r\n    private Spinner cmbPresParams;\r\n    int pIndexStock=-1;\r\n\r\n    private WebServiceHandler ws;\r\n    private XMLObject xobj;\r\n\r\n    private boolean Mostro_Propiedades,Escaneo_Pallet;\r\n    private boolean Mostrar_Propiedades_Parametros = false;\r\n    private double Cant_Recibida_Anterior = 0,Cant_Recibida,Cant_A_Recibir,Cant_Pendiente;\r\n    private int pIdOrdenCompraDet,pIdOrdenCompraEnc,pLineaOC,pIdRecepcionDet,pIdProductoBodega;\r\n    private int IdEstadoSelect,IdPreseSelect=-1,IdPreseSelectParam=-1;\r\n    private String pNumeroLP = \"\";\r\n    private boolean PCorrecto=false;\r\n    private boolean TCorrecta=false;\r\n    private boolean PallCorrecto= false;\r\n    private int pIndexProdPallet=-1;\r\n    private int pIndexParam=-1;\r\n    private int IndexPresSelected=-1;\r\n    private String MensajeParam=\"\";\r\n    private int pIndiceListaStock = -1;\r\n    private double CostoOC=0;\r\n    private int vPresentacion;\r\n    private String pLp=\"\";\r\n    private boolean Escaneo_Pallet_Interno;\r\n    private boolean Existe_Lp=false;\r\n\r\n    private clsBeTrans_oc_det BeOcDet;\r\n    private clsBeProducto_parametrosList pListBEProductoParametro = new clsBeProducto_parametrosList();\r\n    private clsBeTrans_re_det_parametrosList plistBeReDetParametros = new clsBeTrans_re_det_parametrosList();\r\n    private clsBeStock_recList lBeStockRec = new clsBeStock_recList();\r\n    private clsBeProducto_palletList lBeProdPallet = new clsBeProducto_palletList();\r\n    private clsBeStock_se_recList pListBeStockSeRec = new clsBeStock_se_recList();\r\n    private clsBeStock_recList pListBeStockRec = new clsBeStock_recList();\r\n    private clsBeProducto_palletList pListBeProductoPallet = new clsBeProducto_palletList();\r\n    private clsBeTrans_re_detList pListTransRecDet = new clsBeTrans_re_detList();\r\n    private clsBeI_nav_barras_pallet BeINavBarraPallet = new clsBeI_nav_barras_pallet();\r\n    private clsBeLicensePlatesList pListBeLicensePlate = new clsBeLicensePlatesList();\r\n    private clsBeTrans_re_enc auxRec = new clsBeTrans_re_enc();\r\n    private clsBeTrans_re_det BeTransReDet= new clsBeTrans_re_det();\r\n    private clsBeStock_rec BeStockRecNuevaRec = new clsBeStock_rec();\r\n    private clsBeStock_recList listaStockPalletsNuevos = new clsBeStock_recList();\r\n    private clsBeProducto_palletList listaProdPalletsNuevos = new clsBeProducto_palletList();\r\n    private clsBeStock_recList listaStock = new clsBeStock_recList();\r\n    private clsBeProducto_palletList listaProdPallets = new clsBeProducto_palletList();\r\n    private clsBeStock_rec vBeStockRec = new clsBeStock_rec();\r\n    private clsBeStock_rec vBeStockRecPallet = new clsBeStock_rec();\r\n    private clsBeProducto_pallet BeProdPallet  = new clsBeProducto_pallet();\r\n    private clsBeStock gBeStockAnt;\r\n    private clsBeTrans_oc_det beTransOCDet =new clsBeTrans_oc_det();\r\n    private  clsBeStock_rec ObjS = new clsBeStock_rec();\r\n    private  clsBeStock_se_rec ObjNS =new clsBeStock_se_rec();\r\n    boolean Pperzonalizados=false,PCap_Manu=false,PCap_Anada=false,PGenera_lp=false,PTiene_Ctrl_Peso=false,PTiene_Ctrl_Temp=false,PTiene_PorSeries=false,PTiene_Pres=false;\r\n    private   clsBeTrans_re_detList LRecepcionCantidad = new clsBeTrans_re_detList();\r\n\r\n    double vFactorNuevaRec=0;\r\n    double vCantNuevaRec=0;\r\n\r\n    private clsBeProducto BeProducto = new clsBeProducto();\r\n    private clsBeProducto_estadoList LProductoEstado = new clsBeProducto_estadoList();\r\n\r\n    private ArrayList<String> EstadoList= new ArrayList<String>();\r\n    private ArrayList<String> PresList= new ArrayList<String>();\r\n    private ArrayList<String> VenceList= new ArrayList<String>();\r\n\r\n    // date\r\n    private int year;\r\n    private int month;\r\n    private int day;\r\n\r\n    static final int DATE_DIALOG_ID = 999;\r\n    private Object[] a1;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_frm_recepcion_datos);\r\n\r\n        super.InitBase();\r\n\r\n        ws = new WebServiceHandler(frm_recepcion_datos.this, gl.wsurl);\r\n        xobj = new XMLObject(ws);\r\n\r\n        cmbEstadoProductoRec = (Spinner)findViewById(R.id.cmbEstadoProductoRec);\r\n        cmbPresRec = (Spinner) findViewById(R.id.cmbPresRec);\r\n        cmbVenceRec = (EditText) findViewById(R.id.cmbVenceRec);\r\n\r\n        txtBarra = (EditText) findViewById(R.id.txtBarra);\r\n        txtLoteRec = (EditText) findViewById(R.id.txtLoteRec);\r\n        txtUmbasRec = (EditText) findViewById(R.id.txtUmbasRec);\r\n        txtCantidadRec = (EditText) findViewById(R.id.txtCantidadRec);\r\n        txtPeso= (EditText) findViewById(R.id.txtPeso);\r\n        txtPesoUnitario = (EditText) findViewById(R.id.txtPesoUnitario);\r\n        txtCostoReal = (EditText) findViewById(R.id.txtCostoReal);\r\n        txtCostoOC = (EditText) findViewById(R.id.txtCostoOC);\r\n\r\n        lblDatosProd = (TextView)findViewById(R.id.lblTituloForma);\r\n        lblPropPrd = (TextView)findViewById(R.id.lblPropPrd);\r\n        lblPeso = (TextView) findViewById(R.id.textView87);\r\n        lblPUn = (TextView) findViewById(R.id.textView86);\r\n        lblCReal = (TextView) findViewById(R.id.textView89);\r\n        lblCosto = (TextView) findViewById(R.id.textView88);\r\n        lblVence = (TextView) findViewById(R.id.textView81);\r\n        lblLote = (TextView) findViewById(R.id.textView82);\r\n        lblPres = (TextView) findViewById(R.id.textView83);\r\n\r\n        btnCantRecibida = (Button)findViewById(R.id.btnCantRecibida);\r\n        btnCantPendiente = (Button)findViewById(R.id.btnCantPendiente);\r\n\r\n        dpResult = (DatePicker) findViewById(R.id.datePicker);\r\n\r\n        imgDate = (ImageView)findViewById(R.id.imgDate);\r\n\r\n        chkPaletizar = (CheckBox)findViewById(R.id.chkPaletizar);\r\n        chkPalletNoEstandar = (CheckBox)findViewById(R.id.chkPalletNoEstandar);\r\n\r\n        btnBack = (Button)findViewById(R.id.btnBack);\r\n        btnIr = (Button)findViewById(R.id.btnIr);\r\n\r\n        setCurrentDateOnView();\r\n\r\n        setHandlers();\r\n\r\n        ProgressDialog();\r\n\r\n        progress.setMessage(\"Inicializando valores\");\r\n\r\n        if (gl.gselitem != null) {\r\n            BeOcDet=gl.gselitem;\r\n        }\r\n\r\n        if(!gl.Escaneo_Pallet){\r\n            execws(1);\r\n        }else{\r\n            Load();\r\n        }\r\n    }\r\n\r\n    //region Events\r\n\r\n    public void ProgressDialog(){\r\n        progress=new ProgressDialog(this);\r\n        progress.setCancelable(false);\r\n        progress.setProgressStyle(ProgressDialog.STYLE_SPINNER);\r\n        progress.setIndeterminate(true);\r\n        progress.setProgress(0);\r\n        progress.show();\r\n    }\r\n\r\n    public void ChangeDate(View view){\r\n        showDialog(DATE_DIALOG_ID);\r\n    }\r\n\r\n    public void Imprimir(View view){\r\n        msgAskImprimir(\"Imprimir Licencia\");\r\n    }\r\n\r\n    @Override\r\n    protected Dialog onCreateDialog(int id) {\r\n        switch (id) {\r\n            case DATE_DIALOG_ID:\r\n                // set date picker as current date\r\n                return new DatePickerDialog(this, datePickerListener,\r\n                        year, month,day);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void setCurrentDateOnView() {\r\n\r\n        final Calendar c = Calendar.getInstance();\r\n        year = c.get(Calendar.YEAR);\r\n        month = c.get(Calendar.MONTH)+1;\r\n        day = c.get(Calendar.DAY_OF_MONTH);\r\n\r\n        // set current date into textview\r\n        cmbVenceRec.setText(new StringBuilder()\r\n                // Month is 0 based, just add 1\r\n                .append(day).append(\"-\").append(month).append(\"-\")\r\n                .append(year).append(\" \"));\r\n\r\n        // set current date into datepicker\r\n        dpResult.init(year, month, day, null);\r\n\r\n    }\r\n\r\n    private DatePickerDialog.OnDateSetListener datePickerListener = new DatePickerDialog.OnDateSetListener() {\r\n\r\n        // when dialog box is closed, below method will be called.\r\n        public void onDateSet(DatePicker view, int selectedYear,\r\n                              int selectedMonth, int selectedDay) {\r\n\r\n            year = selectedYear;\r\n            month = selectedMonth+1;\r\n            day = selectedDay;\r\n            // set selected date into textview\r\n            cmbVenceRec.setText(new StringBuilder().append(day)\r\n                    .append(\"-\").append(month).append(\"-\").append(year)\r\n                    .append(\" \"));\r\n\r\n            // set selected date into datepicker also\r\n            dpResult.init(year, month, day, null);\r\n\r\n        }\r\n    };\r\n\r\n    private void setHandlers() {\r\n\r\n        try{\r\n\r\n            cmbEstadoProductoRec.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n\r\n                public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n                    spinlabel.setTextColor(Color.BLACK);\r\n                    spinlabel.setPadding(5,0,0,0);spinlabel.setTextSize(18);\r\n                    spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                    IdEstadoSelect=LProductoEstado.items.get(position).IdEstado;\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onNothingSelected(AdapterView<?> parentView) {\r\n                    return;\r\n                }\r\n\r\n            });\r\n\r\n            cmbPresRec.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n\r\n                public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n                    spinlabel.setTextColor(Color.BLACK);\r\n                    spinlabel.setPadding(5,0,0,0);spinlabel.setTextSize(18);\r\n                    spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                    IdPreseSelect=BeProducto.Presentaciones.items.get(position).IdPresentacion;\r\n                    IndexPresSelected=position;\r\n                    boolean EsPallet = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==IdPreseSelect).select(c->c.EsPallet).first();\r\n                    boolean PermitePaletizar = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==IdPreseSelect).select(c->c.Permitir_paletizar).first();\r\n                    double CajasPorCama = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==IdPreseSelect).select(c->c.CajasPorCama).first();\r\n                    double CamasPorTarima = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==IdPreseSelect).select(c->c.CamasPorTarima).first();\r\n\r\n                    if (EsPallet||PermitePaletizar){\r\n                        chkPaletizar.setVisibility(View.GONE);\r\n                    }else if(PermitePaletizar && CajasPorCama>0 && CamasPorTarima>0) {\r\n                        chkPaletizar.setVisibility(View.VISIBLE);\r\n                    }else{\r\n                        chkPaletizar.setVisibility(View.GONE);\r\n                    }\r\n\r\n                    /*if (EsPallet){\r\n                        chkPalletNoEstandar.setVisibility(View.VISIBLE);\r\n                    }else{\r\n                        chkPalletNoEstandar.setVisibility(View.GONE);\r\n                    }*/\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onNothingSelected(AdapterView<?> parent) {\r\n                    return;\r\n                }\r\n\r\n\r\n            });\r\n\r\n            txtBarra.setOnKeyListener(new View.OnKeyListener() {\r\n                @Override\r\n                public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                    if ((event.getAction()==KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER)){\r\n                        if (BeProducto.Control_vencimiento){\r\n                            cmbVenceRec.setSelectAllOnFocus(true);\r\n                            cmbVenceRec.requestFocus();\r\n                        }\r\n\r\n                        if (BeProducto.Control_lote){\r\n                            txtLoteRec.setSelectAllOnFocus(true);\r\n                            txtLoteRec.requestFocus();\r\n                        }\r\n\r\n                        if (!BeProducto.Control_lote&&!BeProducto.Control_vencimiento){\r\n                           txtCantidadRec.requestFocus();\r\n                        }\r\n\r\n                        Procesa_Barra_Producto();\r\n\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            txtCantidadRec.setOnKeyListener(new View.OnKeyListener() {\r\n                @Override\r\n                public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                    if ((event.getAction()==KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER)){\r\n                        ValidaCampos();\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            });\r\n\r\n             cmbVenceRec .addTextChangedListener(new TextWatcher() {\r\n                @Override\r\n                public void onTextChanged(CharSequence s, int start, int before, int count) {}\r\n\r\n                @Override\r\n                public void beforeTextChanged(CharSequence s, int start, int count,int after) {}\r\n\r\n                @Override\r\n                public void afterTextChanged(Editable s) {\r\n                    String valor= cmbVenceRec .getText().toString();\r\n                    try{\r\n\r\n                 /*       if (!du.EsFecha(valor)){\r\n                            toast(\"No es una fecha válida\");\r\n                            cmbVenceRec.getText().delete(valor.length() - 1, valor.length());\r\n                        };*/\r\n\r\n                       // du.EsFecha(valor);\r\n                    }catch(Exception e){\r\n                        if(valor.length() != 0){\r\n                            cmbVenceRec.getText().delete(valor.length() - 1, valor.length());\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(e.getClass()+\" \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region validaciones\r\n\r\n    private void ValidaCampos(){\r\n\r\n        double Cant_Recibida = 0;\r\n\r\n        try{\r\n\r\n            Cant_Recibida = Double.parseDouble(txtCantidadRec.getText().toString());\r\n\r\n            Cant_Recibida = mu.round(Cant_Recibida,6);\r\n\r\n            if (BeProducto!=null){\r\n                if (ValidaDatosIngresados()){\r\n                    //#CKFK20200816 Quité esta validacion porque no estó correcta\r\n                   /* if (Cant_Recibida_Anterior!=Cant_Recibida && Cant_Recibida_Anterior!=0){\r\n                        Mostro_Propiedades = false;\r\n                        return;\r\n                    }*/\r\n                    Mostrar_Propiedades_Parametros();\r\n                }\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"ValidaCampos:\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private boolean ValidaDatosIngresados(){\r\n\r\n        boolean EsValido=true;\r\n\r\n        try{\r\n\r\n            if (BeProducto.Control_vencimiento){\r\n                if(cmbVenceRec.getText().toString().isEmpty()){\r\n                    msgboxValidaFechaVence(\"La fecha no puede estar vacía.\");\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (BeProducto.Control_lote){\r\n                if(txtLoteRec.getText().toString().isEmpty()){\r\n                    msgboxValidaLote(\"El campo de lote no puede estar vacío.\");\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if(BeProducto.Control_peso){\r\n                if (txtPeso.getText().toString().isEmpty()){\r\n                    msgboxValidaPeso(\"El peso no puede estar vacío\");\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (txtCantidadRec.getText().toString().isEmpty()){\r\n                mu.msgbox(\"La cantidad no puede estar vacía\");\r\n                txtCantidadRec.requestFocus();\r\n                return false;\r\n            }else{\r\n                if (Double.parseDouble(txtCantidadRec.getText().toString())<=0){\r\n                    mu.msgbox(\"La cantidad debe ser mayor a 0\");\r\n                    txtCantidadRec.requestFocus();\r\n                    return false;\r\n                }\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"ValidaDatosIngresados:\"+e.getMessage());\r\n        }\r\n\r\n        return EsValido;\r\n    }\r\n\r\n    public void msgboxValidaLote(String msg) {\r\n\r\n        try{\r\n\r\n            if (!(msg.isEmpty())){\r\n\r\n                AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n                dialog.setTitle(R.string.app_name);\r\n                dialog.setMessage(msg);\r\n                dialog.setCancelable(false);\r\n\r\n                dialog.setNeutralButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        txtLoteRec.requestFocus();\r\n                        txtLoteRec.selectAll();\r\n                        txtLoteRec.setSelectAllOnFocus(true);\r\n                    }\r\n                });\r\n                dialog.show();\r\n\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n        }\r\n    }\r\n\r\n    public void msgboxValidaFechaVence(String msg) {\r\n\r\n        try{\r\n\r\n            if (!(msg.isEmpty())){\r\n\r\n                AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n                dialog.setTitle(R.string.app_name);\r\n                dialog.setMessage(msg);\r\n                dialog.setCancelable(false);\r\n\r\n                dialog.setNeutralButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        cmbVenceRec.requestFocus();\r\n                        cmbVenceRec.selectAll();\r\n                        cmbVenceRec.setSelectAllOnFocus(true);\r\n                    }\r\n                });\r\n                dialog.show();\r\n\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n        }\r\n    }\r\n\r\n    public void msgboxValidaPeso(String msg) {\r\n\r\n        try{\r\n\r\n            if (!(msg.isEmpty())){\r\n\r\n                AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n                dialog.setTitle(R.string.app_name);\r\n                dialog.setMessage(msg);\r\n                dialog.setCancelable(false);\r\n\r\n                dialog.setNeutralButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        txtPeso.requestFocus();\r\n                        txtPeso.selectAll();\r\n                        txtPeso.setSelectAllOnFocus(true);\r\n                    }\r\n                });\r\n                dialog.show();\r\n\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n        }\r\n    }\r\n\r\n    private void Muestra_Propiedades_Producto(){\r\n\r\n        int vIndiceParam = -1;\r\n        double vCant =0;\r\n        try{\r\n\r\n\r\n            if (plistBeReDetParametros.items!=null){\r\n                List AuxDetParams = stream(plistBeReDetParametros.items).select(c->c.IdParametroDet).toList();\r\n                vIndiceParam = AuxDetParams.indexOf(pIdRecepcionDet);\r\n            }\r\n\r\n            pIndexParam = vIndiceParam;\r\n\r\n            if (Mostro_Propiedades){\r\n                Mostro_Propiedades = true;\r\n                return;\r\n            }\r\n\r\n            int IndexPresentacion =IndexPresSelected;//BeProducto.Presentaciones.items.indexOf(IdPreseSelect);\r\n            clsBeProducto_Presentacion bePresentacion = new clsBeProducto_Presentacion();\r\n\r\n            if (IndexPresentacion!=-1){\r\n                bePresentacion = BeProducto.Presentaciones.items.get(IndexPresentacion);\r\n            }\r\n\r\n            if (bePresentacion.EsPallet && bePresentacion.Genera_lp_auto){\r\n                if(txtCantidadRec.getText().toString().isEmpty()){\r\n                    vCant = 0;\r\n                }else {\r\n                    vCant = Double.parseDouble(txtCantidadRec.getText().toString());\r\n                }\r\n\r\n                if(vCant>1){\r\n                    mu.msgbox(\"Los license plate van a ser ingresados manualmente, no puede recepcionar más de un pallet\");\r\n//                    txtCantidadRec.setText(mu.frmdecimal(1,gl.gCantDecDespliegue)+\"\");\r\n                    txtCantidadRec.setText(1+\"\");\r\n                    txtCantidadRec.requestFocus();\r\n                }\r\n\r\n            }else if (bePresentacion.Permitir_paletizar && chkPaletizar.isChecked() &&!bePresentacion.Genera_lp_auto){\r\n                if(txtCantidadRec.getText().toString().isEmpty()){\r\n                    vCant = 0;\r\n                }else {\r\n                    vCant = Double.parseDouble(txtCantidadRec.getText().toString());\r\n                }\r\n\r\n                if (vCant>bePresentacion.CajasPorCama*bePresentacion.CamasPorTarima){\r\n                    mu.msgbox(\"Los license plate van a ser ingresados manualmente, no puede recepcionar más de \"+bePresentacion.CajasPorCama * bePresentacion.CamasPorTarima\r\n                            + \" \"+ bePresentacion.Nombre);\r\n//                    txtCantidadRec.setText(mu.frmdecimal(bePresentacion.CajasPorCama * bePresentacion.CamasPorTarima,gl.gCantDecDespliegue)+\"\");\r\n                    txtCantidadRec.setText(bePresentacion.CajasPorCama * bePresentacion.CamasPorTarima+\"\");\r\n                    txtCantidadRec.requestFocus();\r\n                }\r\n\r\n            }\r\n\r\n            MuestraParametros1(this );\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Muestra_Propiedades_Producto: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void MuestraParametros1(Activity activity){\r\n\r\n        try{\r\n            int IndexPresentacion=-1;\r\n            double Cant_Recibida_Actual=0;\r\n\r\n            if (!txtCantidadRec.getText().toString().isEmpty()){\r\n                Cant_Recibida_Actual = Double.parseDouble(txtCantidadRec.getText().toString());\r\n            }\r\n\r\n            dialog = new Dialog(activity);\r\n            dialog.setCancelable(false);\r\n            dialog.setContentView(R.layout.frm_parametros1);\r\n\r\n            lblPrducto = (TextView)dialog.findViewById(R.id.lblTituloForma);\r\n            lblSerialP = (TextView)dialog.findViewById(R.id.textView7);\r\n            lblLicPlate = (TextView)dialog.findViewById(R.id.textView5);\r\n            lblFManufact = (TextView)dialog.findViewById(R.id.textView77);\r\n            lblAnada = (TextView) dialog.findViewById(R.id.label1);\r\n            lblTempEsta = (TextView)dialog.findViewById(R.id.textView8);\r\n            lblTempReal = (TextView)dialog.findViewById(R.id.textView91);\r\n            lblPresParam = (TextView)dialog.findViewById(R.id.textView92);\r\n            lblPesoEsta = (TextView)dialog.findViewById(R.id.textView93);\r\n            lblPesoReal = (TextView)dialog.findViewById(R.id.textView94);\r\n            lblSerialIni = (TextView)dialog.findViewById(R.id.textView95);\r\n            lblSerialFin = (TextView)dialog.findViewById(R.id.textView96);\r\n            lblTempTit = (TextView)dialog.findViewById(R.id.lblTempTit);\r\n            lblPesoTit = (TextView)dialog.findViewById(R.id.lblPesoTit);\r\n            lblSerieTit = (TextView)dialog.findViewById(R.id.lblSerieTit);\r\n\r\n            txtLicPlate = (EditText) dialog.findViewById(R.id.txtLicPlate);\r\n            txtSerial = (EditText)dialog.findViewById(R.id.txtSerial);\r\n            txtAnada = (EditText)dialog.findViewById(R.id.txtAnada);\r\n            txtFechaManu = (EditText)dialog.findViewById(R.id.txtFechaManu);\r\n            txtFechaIng = (EditText) dialog.findViewById(R.id.txtFechaIng);\r\n            txtTempEsta =(EditText)dialog.findViewById(R.id.txtTempEsta);\r\n            txtTempReal =(EditText)dialog.findViewById(R.id.txtTempReal);\r\n            txtPesoEsta =(EditText)dialog.findViewById(R.id.txtPesoEsta);\r\n            txtPesoReal =(EditText)dialog.findViewById(R.id.txtPesoReal);\r\n            txtSerieIni =(EditText)dialog.findViewById(R.id.txtSerieIni);\r\n            txtSerieFin =(EditText)dialog.findViewById(R.id.txtSerieFin);\r\n\r\n            txtTempReal.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtTempReal.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n            txtPesoReal.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtPesoReal.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n            txtTempEsta.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtTempEsta.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n            txtPesoEsta.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtPesoEsta.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n\r\n            cmbPresParams = (Spinner)dialog.findViewById(R.id.cmbPresParams);\r\n\r\n            cmbPresParams.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n\r\n                public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n                    spinlabel.setTextColor(Color.BLACK);\r\n                    spinlabel.setPadding(5,0,0,0);spinlabel.setTextSize(18);\r\n                    spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                    IdPreseSelectParam=BeProducto.Presentaciones.items.get(position).IdPresentacion;\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onNothingSelected(AdapterView<?> parent) {\r\n                    return;\r\n                }\r\n\r\n\r\n            });\r\n\r\n            lblPrducto.setText(BeProducto.Codigo + \" - \" +BeProducto.Nombre);\r\n\r\n            if (pListBeStockRec!=null){\r\n                if (pListBeStockRec.items!=null){\r\n                    List AuxStock=stream(pListBeStockRec.items).select(c->c.IdRecepcionDet).toList();\r\n                    pIndexStock =AuxStock.indexOf(pIdRecepcionDet);\r\n                }\r\n            }\r\n\r\n            IndexPresentacion = IndexPresSelected;\r\n\r\n              clsBeProducto_Presentacion bePresentacion= new clsBeProducto_Presentacion();\r\n\r\n            if (IndexPresentacion!= -1){\r\n                bePresentacion = BeProducto.Presentaciones.items.get(IndexPresentacion);\r\n            }\r\n\r\n            if (IndexPresentacion!=-1){\r\n                if((bePresentacion.EsPallet||chkPaletizar.isChecked())&&(bePresentacion.CamasPorTarima ==0|| bePresentacion.CajasPorCama==0)){\r\n                   // mu.msgbox(\"La presentación no tiene los valores necesarios para recepcionar pallets\");\r\n                    txtLicPlate.setFocusable(false);\r\n                    txtLicPlate.setFocusableInTouchMode(false);\r\n                    txtLicPlate.setClickable(false);\r\n                    txtLicPlate.setVisibility(View.GONE);\r\n                    lblLicPlate.setVisibility(View.GONE);\r\n                }else{\r\n                    if (bePresentacion.EsPallet ||chkPaletizar.isChecked()|| bePresentacion.Permitir_paletizar){\r\n\r\n                        if (bePresentacion.Genera_lp_auto){\r\n                            if (!Existe_Lp){\r\n                                execws(6);\r\n                            }else{\r\n                                pNumeroLP = pLp;\r\n                            }\r\n                            txtLicPlate.setFocusable(true);\r\n                            txtLicPlate.setFocusableInTouchMode(true);\r\n                            txtLicPlate.setClickable(true);\r\n                        }\r\n\r\n                    } else if (!bePresentacion.EsPallet || bePresentacion.Permitir_paletizar||chkPaletizar.isChecked()) {\r\n\r\n                        if (Cant_Recibida==0){\r\n                            if (pIndexStock<0){\r\n                                if (!Existe_Lp){\r\n                                    execws(6);\r\n                                }else{\r\n                                    pNumeroLP = pLp;\r\n                                }\r\n                            }\r\n                        }else if(Cant_Recibida_Actual>bePresentacion.Factor){\r\n                            if (pIndexStock<0){\r\n                                execws(7);\r\n                            }\r\n\r\n                            pNumeroLP = \"\";\r\n\r\n                            if (pListBeLicensePlate.items!=null){\r\n\r\n                                for (int i = pListBeLicensePlate.items.size()-1; i>=0; i--) {\r\n                                    if(pListBeLicensePlate.items.get(i).CantidadDisponible>=Cant_Recibida_Actual){\r\n                                        if (!Existe_Lp){\r\n                                            pNumeroLP = pListBeLicensePlate.items.get(i).LicensePlates;\r\n                                        }else{\r\n                                            pNumeroLP = pLp;\r\n                                        }\r\n\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n\r\n                            if (gl.mode==2){\r\n                                pListBeStockRec.items.get(pIndexStock).Lic_plate = pNumeroLP;\r\n                            }\r\n\r\n                            txtLicPlate.setVisibility(View.VISIBLE);\r\n\r\n                            txtLicPlate.setFocusable(false);\r\n                            txtLicPlate.setFocusableInTouchMode(false);\r\n                            txtLicPlate.setClickable(false);\r\n\r\n                        }\r\n                    }else{\r\n                        lblLicPlate.setVisibility(View.GONE);\r\n                        txtLicPlate.setFocusable(false);\r\n                        txtLicPlate.setFocusableInTouchMode(false);\r\n                        txtLicPlate.setClickable(false);\r\n                        txtLicPlate.setVisibility(View.GONE);\r\n                    }\r\n\r\n                }\r\n\r\n                //#CKFK 20201229 Agregué esta condición de que si la barra tiene información se coloca eso como LP\r\n                if (!txtBarra.getText().toString().isEmpty()){\r\n                    txtLicPlate.setText(txtBarra.getText().toString().replace(\"$\",\"\"));\r\n                }else{\r\n                    txtLicPlate.setText(pNumeroLP);\r\n                }\r\n            }else{\r\n                lblLicPlate.setVisibility(View.GONE);\r\n                txtLicPlate.setFocusable(false);\r\n                txtLicPlate.setFocusableInTouchMode(false);\r\n                txtLicPlate.setClickable(false);\r\n                txtLicPlate.setVisibility(View.GONE);\r\n            }\r\n\r\n            if (BeProducto.Fechamanufactura && BeProducto.Materia_prima){\r\n                lblFManufact.setVisibility(View.VISIBLE);\r\n                txtFechaManu.setVisibility(View.VISIBLE);\r\n\r\n            }else{\r\n                lblFManufact.setVisibility(View.GONE);\r\n                txtFechaManu.setVisibility(View.GONE);\r\n            }\r\n\r\n            txtAnada.setText(\"0\");\r\n\r\n            if (!BeProducto.Capturar_aniada){\r\n                lblAnada.setVisibility(View.GONE);\r\n                txtAnada.setVisibility(View.GONE);\r\n            }else{\r\n                lblAnada.setVisibility(View.VISIBLE);\r\n                txtAnada.setVisibility(View.VISIBLE);\r\n            }\r\n\r\n            //ValidaPeso\r\n            Valida_Peso(IndexPresentacion);\r\n\r\n            //ValidaTemperatura\r\n            Valida_Temperatura();\r\n\r\n            Valida_Perfil_Serializado();\r\n\r\n            Carga_Parametros_Personalizados();\r\n\r\n            final Calendar c = Calendar.getInstance();\r\n            year = c.get(Calendar.YEAR);\r\n            month = c.get(Calendar.MONTH)+1;\r\n            day = c.get(Calendar.DAY_OF_MONTH);\r\n\r\n            txtFechaIng.setText(new StringBuilder()\r\n                    // Month is 0 based, just add 1\r\n                    .append(day).append(\"-\").append(month).append(\"-\")\r\n                    .append(year).append(\" \"));\r\n\r\n            if  (pIndexStock>=0){\r\n\r\n                txtLicPlate.setText(pListBeStockRec.items.get(pIndexStock).Lic_plate);\r\n\r\n                pNumeroLP = pListBeStockRec.items.get(pIndexStock).Lic_plate;\r\n\r\n                if (pListBeStockRec.items.get(pIndexStock).Fecha_Ingreso!=null){\r\n                    if (pListBeStockRec.items.get(pIndexStock).Fecha_Ingreso.isEmpty()){\r\n                        txtFechaIng.setText(new StringBuilder()\r\n                                // Month is 0 based, just add 1\r\n                                .append(day).append(\"-\").append(month).append(\"-\")\r\n                                .append(year).append(\" \"));\r\n                    }else{\r\n                        txtFechaIng.setText(pListBeStockRec.items.get(pIndexStock).Fecha_Ingreso);\r\n                    }\r\n                }\r\n\r\n                if (BeProducto.Fechamanufactura && BeProducto.Materia_prima){\r\n                    txtFechaManu.setText(pListBeStockRec.items.get(pIndexStock).Fecha_Manufactura);\r\n                }\r\n\r\n                txtSerial.setText(pListBeStockRec.items.get(pIndexStock).Serial);\r\n                txtAnada.setText(pListBeStockRec.items.get(pIndexStock).Anada+\"\");\r\n\r\n                if (BeProducto.Peso_recepcion){\r\n                    txtPesoReal.setText(mu.round(pListBeStockRec.items.get(pIndexStock).Peso, gl.gCantDecCalculo)+\"\");\r\n                }else{\r\n                    txtPesoReal.setText(mu.round(0,  gl.gCantDecCalculo)+\"\");\r\n                }\r\n\r\n                if (BeProducto.Temperatura_recepcion){\r\n                txtTempReal.setText(mu.round(pListBeStockRec.items.get(pIndexStock).Temperatura,  gl.gCantDecCalculo)+\"\");\r\n                }\r\n\r\n            }\r\n\r\n            Button btnIr = (Button)dialog.findViewById(R.id.btnIr);\r\n            Button btnBack = (Button)dialog.findViewById(R.id.btnBack);\r\n\r\n            btnIr.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    BotonIrGuardarParametros();\r\n                }\r\n            });\r\n            btnBack.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    SalirPantallaParametros();\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n            mu.msgbox(MensajeParam);\r\n\r\n        }catch (Exception e){\r\n        mu.msgbox(\"MuestraParametros1: \"+ e.getMessage());\r\n        }\r\n    }\r\n\r\n    //View view\r\n    public void BotonIrGuardarParametros(){\r\n        GuardarParametros();\r\n    }\r\n\r\n    //View view\r\n    public void SalirPantallaParametros(){\r\n        dialog.cancel();\r\n    }\r\n\r\n    private  void Valida_Perfil_Serializado(){\r\n\r\n        try{\r\n\r\n            if (BeProducto.Serializado){\r\n                switch (BeProducto.IdPerfilSerializado){\r\n\r\n                    case 1:\r\n                        lblSerialP.setVisibility(View.GONE);\r\n                        txtSerial.setVisibility(View.GONE);\r\n                        lblSerialIni.setVisibility(View.GONE);\r\n                        txtSerieIni.setVisibility(View.GONE);\r\n                        lblSerialFin.setVisibility(View.GONE);\r\n                        txtSerieFin.setVisibility(View.GONE);\r\n                        break;\r\n                    case 2:\r\n                        lblSerialP.setVisibility(View.GONE);\r\n                        txtSerial.setVisibility(View.GONE);\r\n                        break;\r\n                    case 3:\r\n                        txtSerial.setText(BeProducto.Noserie);\r\n                    default:\r\n                        lblSerialP.setVisibility(View.GONE);\r\n                        txtSerial.setVisibility(View.GONE);\r\n                        lblSerialIni.setVisibility(View.GONE);\r\n                        txtSerieIni.setVisibility(View.GONE);\r\n                        lblSerialFin.setVisibility(View.GONE);\r\n                        txtSerieFin.setVisibility(View.GONE);\r\n                        break;\r\n                }\r\n            }else{\r\n                lblSerialP.setVisibility(View.GONE);\r\n                txtSerial.setVisibility(View.GONE);\r\n                lblSerialIni.setVisibility(View.GONE);\r\n                txtSerieIni.setVisibility(View.GONE);\r\n                lblSerialFin.setVisibility(View.GONE);\r\n                txtSerieFin.setVisibility(View.GONE);\r\n            }\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Valida_Perfil_Serializado\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Valida_Temperatura(){\r\n\r\n        try{\r\n\r\n            if (BeProducto.Temperatura_recepcion){\r\n                txtTempEsta.setText( mu.round(BeProducto.Temperatura_referencia,  gl.gCantDecCalculo)+\"\");\r\n            }else{\r\n                lblTempTit.setVisibility(View.GONE);\r\n                lblTempEsta.setVisibility(View.GONE);\r\n                lblTempReal.setVisibility(View.GONE);\r\n                txtTempEsta.setVisibility(View.GONE);\r\n                txtTempReal.setVisibility(View.GONE);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Valida_Temperatura: \"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Valida_Peso(int IndexPresentacion){\r\n\r\n        try{\r\n\r\n            if (BeProducto.Peso_recepcion){\r\n\r\n                txtPesoEsta.setText(mu.round(BeProducto.Peso_referencia,  gl.gCantDecCalculo)+\"\");\r\n                txtPesoReal.setText(txtPeso.getText()+\"\");\r\n\r\n                if (BeProducto.Presentaciones.items!=null){\r\n\r\n                    PresList.clear();\r\n\r\n                    for (int i = 0; i <BeProducto.Presentaciones.items.size(); i++) {\r\n                        PresList.add(BeProducto.Presentaciones.items.get(i).Nombre);\r\n                    }\r\n\r\n                    ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this,android.R.layout.simple_spinner_item, PresList);\r\n                    dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                    cmbPresParams.setAdapter(dataAdapter);\r\n\r\n                    if (PresList.size()>0) cmbPresParams.setSelection(0);\r\n\r\n                }\r\n\r\n                cmbPresParams.setFocusable(false);\r\n                cmbPresParams.setFocusableInTouchMode(false);\r\n                cmbPresParams.setClickable(false);\r\n\r\n                if (IdPreseSelect!= -1){\r\n                    List AuxPresParam = stream(BeProducto.Presentaciones.items).select(c->c.IdPresentacion).toList();\r\n                    IndexPresentacion =AuxPresParam.indexOf(IdPreseSelect);\r\n                    cmbPresParams.setSelection(IndexPresentacion);\r\n                }\r\n\r\n            }else{\r\n                lblPresParam.setVisibility(View.GONE);\r\n                cmbPresParams.setVisibility(View.GONE);\r\n                lblPesoTit.setVisibility(View.GONE);\r\n                lblPesoEsta.setVisibility(View.GONE);\r\n                txtPesoEsta.setVisibility(View.GONE);\r\n                lblPesoReal.setVisibility(View.GONE);\r\n                txtPesoReal.setVisibility(View.GONE);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Valida Peso: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private boolean GuardarParametros(){\r\n\r\n        String Detalle=\"\";\r\n        boolean Parametros_Ingresados=false;\r\n        clsBeStock_rec BeStock_rec  = new clsBeStock_rec();\r\n        boolean Guardar=false;\r\n\r\n        try{\r\n\r\n            Parametros_Ingresados =Parametros_Obligatorios_Ingresados(Detalle);\r\n\r\n            if (!Parametros_Ingresados){\r\n                mu.msgbox(\"¿Está seguro de que no va a ingresar los parámetros obligatorios del producto?\");\r\n\r\n                Parametros_Ingresados = true;\r\n            }\r\n\r\n            if (Parametros_Ingresados){\r\n\r\n                Peso_Correcto();\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"GuardarParamaetros: \"+ e.getMessage());\r\n        }\r\n\r\n        return Guardar;\r\n    }\r\n\r\n    private boolean Carga_Parametros_Personalizados(){\r\n\r\n        boolean Carga_Param=false;\r\n\r\n        try{\r\n\r\n            if (pIndexParam==-1){\r\n\r\n                if (pListBEProductoParametro!=null){\r\n\r\n                    if (pListBEProductoParametro.items!=null){\r\n                        Carga_Param = true;\r\n                    }else{\r\n                        execws(10);\r\n\r\n                        if (plistBeReDetParametros.items!=null){\r\n                            Carga_Param = true;\r\n                        }\r\n                }\r\n\r\n               }\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Carga_Parametros_Personalizados:\"+e.getMessage());\r\n        }\r\n\r\n        return  Carga_Param;\r\n\r\n    }\r\n\r\n    private boolean Temperatura_Correcta(){\r\n\r\n        boolean Correcta = false;\r\n\r\n        try{\r\n\r\n            if (BeProducto.Temperatura_recepcion){\r\n\r\n                if (BeProducto.Temperatura_referencia>0){\r\n\r\n                    if (txtTempReal.getText().toString().isEmpty()){\r\n                        MensajeParam+=\"Debe de ingresar la temperatura \\n\";\r\n                        return false;\r\n                    }else if (Double.parseDouble(txtTempReal.getText().toString())<=0){\r\n                        MensajeParam+=\"La temperatura debe ser mayor a 0 \\n\";\r\n                        return false;\r\n                    }\r\n\r\n                }\r\n\r\n                double PorcentajeToleranciaTemp = mu.round(BeProducto.Temperatura_referencia * BeProducto.Temperatura_tolerancia,  gl.gCantDecCalculo) / 100;\r\n                double TemperaturaMax  = mu.round(BeProducto.Temperatura_referencia + PorcentajeToleranciaTemp,  gl.gCantDecCalculo);\r\n                double TemperaturaMin  = mu.round(BeProducto.Temperatura_referencia - PorcentajeToleranciaTemp,  gl.gCantDecCalculo);\r\n                double vTemp=0;\r\n                if (!txtTempReal.getText().toString().isEmpty()){\r\n                    vTemp = Double.parseDouble(txtTempReal.getText().toString());\r\n                }\r\n                double ValorTemperatura  = mu.round(vTemp,  gl.gCantDecCalculo);\r\n\r\n                if ((ValorTemperatura < TemperaturaMin)||(ValorTemperatura > TemperaturaMax)){\r\n                    msgContinuarTemp(\"La temperatura ingresada es menor a \"+TemperaturaMin + \" o mayor a \"+TemperaturaMax + \"(tolerancia permitida en base a la temperatura estadística). ¿Desea continuar?\");\r\n                    //Correcta =TCorrecta;\r\n                    return true;\r\n                }else {\r\n                    if (BeProducto.Genera_lp){\r\n                        execws(8);\r\n                    }else{\r\n                        PallCorrecto=true;\r\n                        ContinuaValidandoParametros();\r\n                    }\r\n                }\r\n\r\n            }else{\r\n                if (BeProducto.Genera_lp){\r\n                    execws(8);\r\n                }else{\r\n                    PallCorrecto=true;\r\n                    ContinuaValidandoParametros();\r\n                }\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Temperatura_Correcta: \"+ e.getMessage());\r\n        }\r\n\r\n        return  Correcta;\r\n\r\n    }\r\n\r\n    private boolean Peso_Correcto(){\r\n\r\n        boolean Correcto=false;\r\n        double val=0;\r\n\r\n        try{\r\n\r\n            if (BeProducto.Peso_recepcion){\r\n\r\n                val = Double.parseDouble(txtPesoEsta.getText().toString());\r\n\r\n                if (val>0){\r\n\r\n                    if (txtPesoReal.getText().toString().isEmpty()){\r\n                        MensajeParam +=\"Debe de ingresar peso \\n\";\r\n                        return false;\r\n                    }else if(Double.parseDouble(txtPesoReal.getText().toString())<=0){\r\n                        MensajeParam+=\"El peso debe ser mayor a 0 \\n\";\r\n                        return false;\r\n                    }\r\n\r\n                }\r\n\r\n                Double PorcentajeToleranciaPeso = (Double.parseDouble(txtPesoEsta.getText().toString()) * (BeProducto.Peso_tolerancia));\r\n                Double PesoMaximoReferencia = mu.round( Double.parseDouble(txtPesoEsta.getText().toString()) + PorcentajeToleranciaPeso,  gl.gCantDecCalculo);\r\n                Double PesoMinimoReferencia = mu.round(Double.parseDouble(txtPesoEsta.getText().toString()) - PorcentajeToleranciaPeso,  gl.gCantDecCalculo);\r\n                Double ValorPeso  = mu.round(Double.parseDouble(txtPesoReal.getText().toString()),  gl.gCantDecCalculo);\r\n\r\n                if (!(ValorPeso >= PesoMinimoReferencia)&&(ValorPeso <= PesoMaximoReferencia)){\r\n                    msgContinuarPeso(\"El peso ingresado es menor que \"+PesoMinimoReferencia +\" o mayor que \"+ PesoMaximoReferencia+\" (tolerancia permitida en base al peso estadístico). ¿Desea continuar?\");\r\n                    return true;\r\n                }else{\r\n                    Temperatura_Correcta();\r\n                }\r\n\r\n\r\n            }else{\r\n                Temperatura_Correcta();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Peso_Correcto: \"+e.getMessage());\r\n        }\r\n\r\n        return Correcto;\r\n\r\n    }\r\n\r\n    private void ContinuaValidandoParametros(){\r\n\r\n        clsBeStock_rec BeStock_rec  = new clsBeStock_rec();\r\n\r\n        try {\r\n\r\n            if (PallCorrecto){\r\n\r\n                if (pIndexStock==-1){\r\n\r\n                    BeStock_rec  = new clsBeStock_rec();\r\n                    pListBeStockRec.items = new ArrayList<clsBeStock_rec>();\r\n\r\n                    BeStock_rec.IdRecepcionDet = pIdRecepcionDet;\r\n                    BeStock_rec.IdPropietarioBodega = gl.gBeRecepcion.PropietarioBodega.IdPropietarioBodega;\r\n                    BeStock_rec.IdProductoBodega = BeProducto.IdProductoBodega;\r\n                    BeStock_rec.IdUnidadMedida = BeProducto.IdUnidadMedidaBasica;\r\n                    if(IdPreseSelect>0){\r\n                        BeStock_rec.Presentacion = new clsBeProducto_Presentacion();\r\n                    }\r\n                    if (gl.mode==1){\r\n                        BeStock_rec.IsNew = true;\r\n                    }else{\r\n                        BeStock_rec.IsNew = false;\r\n                    }\r\n\r\n                   pListBeStockRec.items.add(BeStock_rec);\r\n                   pIndexStock = pListBeStockRec.items.size()-1;\r\n\r\n\r\n                    if  ((BeProducto.Presentaciones!=null)){\r\n\r\n                        if (BeProducto.Presentaciones.items!=null) {\r\n\r\n                            List AuxLisPres = stream(BeProducto.Presentaciones.items).select(c->c.IdPresentacion).toList();\r\n\r\n                        int IndexPresentacion = AuxLisPres.indexOf(IdPreseSelect);\r\n\r\n                        clsBeProducto_Presentacion bePresentacion = new clsBeProducto_Presentacion();\r\n\r\n                        bePresentacion = BeProducto.Presentaciones.items.get(IndexPresentacion);\r\n\r\n                        BeStock_rec.Presentacion = bePresentacion;\r\n\r\n                        if (BeStock_rec.Presentacion.Imprime_barra){\r\n\r\n                            clsBeProducto_pallet BeProdPallet = new clsBeProducto_pallet();\r\n                            BeProdPallet.IdPropietarioBodega = gl.gBeRecepcion.PropietarioBodega.IdPropietarioBodega;\r\n                            BeProdPallet  .IdProductoBodega = BeProducto.IdProductoBodega;\r\n                            BeProdPallet.IdOperadorBodega = gl.IdOperador;\r\n                            BeProdPallet.IdPresentacion = IdPreseSelect;\r\n                            BeProdPallet.IdRecepcionDet = pIdRecepcionDet;\r\n                            BeProdPallet.Impreso = false;\r\n                            BeProdPallet.IdImpresora = 1;\r\n                            BeProdPallet.Activo = true;\r\n                            BeProdPallet.Fecha_ingreso = String.valueOf(du.getFechaActual());\r\n                            BeProdPallet.Codigo_Barra = txtLicPlate.getText().toString();\r\n                            BeProdPallet.Codigo_Producto = BeProducto.Codigo;\r\n                            BeProdPallet.Reimpresiones = 0;\r\n                            BeProdPallet.Fec_agr =String.valueOf(du.getFechaActual());\r\n                            BeProdPallet.Fec_mod = String.valueOf(du.getFechaActual());\r\n                            BeProdPallet.IsNew = true;\r\n\r\n                            if (pListBeProductoPallet.items!=null){\r\n                                pListBeProductoPallet.items.add(BeProdPallet);\r\n                                pIndexProdPallet = pListBeProductoPallet.items.size() - 1;\r\n                            }else{\r\n\r\n                                pListBeProductoPallet.items =  new ArrayList<clsBeProducto_pallet>();\r\n\r\n                                pListBeProductoPallet.items.add(BeProdPallet);\r\n                                pIndexProdPallet = pListBeProductoPallet.items.size() - 1;\r\n                            }\r\n                        }\r\n                        }else{\r\n                            BeStock_rec.Presentacion.IdPresentacion = 0;\r\n                        }\r\n\r\n                    }else{\r\n                        BeStock_rec.Presentacion.IdPresentacion = 0;\r\n                    }\r\n\r\n                }//finpIndexStock\r\n\r\n                if (pIndexStock >= 0){\r\n\r\n                    if (BeProducto.IdPerfilSerializado == 1){\r\n                        if (pListBeStockSeRec.items==null){\r\n                            MensajeParam+=\"Ingrese al menos una serie \\n\";\r\n                        }\r\n                    }else if(BeProducto.IdPerfilSerializado == 2){\r\n\r\n                        ObjNS =  new clsBeStock_se_rec();\r\n\r\n                        if (pListBeStockSeRec.items!=null){\r\n                            ObjNS.IdStockSeRec = stream(pListBeStockSeRec.items).max(c->c.IdStockSeRec>0).IdStockSeRec+1;\r\n                        }else{\r\n                            execws(9);\r\n                        }\r\n\r\n                        ObjNS.NoSerie = \"\";\r\n                        ObjNS.NoSerieInicial =txtSerieIni.getText().toString();\r\n                        ObjNS.NoSerieFinal = txtSerieFin.getText().toString();\r\n                        ObjNS.User_agr = gl.IdOperador+\"\";\r\n                        ObjNS.Fec_agr =String.valueOf(du.getFechaActual());\r\n                        ObjNS.User_mod = gl.IdOperador+\"\";\r\n                        ObjNS.Fec_mod = String.valueOf(du.getFechaActual());\r\n                        ObjNS.Activo = true;\r\n                        if (gl.mode==1){\r\n                            ObjNS.IsNew = true;\r\n                        }else{\r\n                            ObjNS.IsNew = false;\r\n                        }\r\n\r\n                        if (pListBeStockSeRec.items!=null){\r\n                            pListBeStockSeRec.items.add(ObjNS);\r\n                        }else{\r\n                            pListBeStockSeRec.items = new ArrayList<clsBeStock_se_rec>();\r\n                            pListBeStockSeRec.items.add(ObjNS);\r\n                        }\r\n\r\n                    }else if(BeProducto.IdPerfilSerializado == 3){\r\n                        if (txtSerial.getText().toString().isEmpty()){\r\n                            MensajeParam+=\"Ingrese Serial \\n\";\r\n                        }\r\n                    }else{\r\n\r\n                        if (!txtSerial.getText().toString().isEmpty()){\r\n\r\n                            pListBeStockRec.items.get(pIndexStock).Serial = txtSerial.getText().toString();\r\n\r\n                            if (pListBeStockRec!=null){\r\n\r\n                                List AuxStockRec = stream(pListBeStockRec.items).select(c->c.Serial).toList();\r\n\r\n                                int lIndex=-1;\r\n\r\n                                lIndex = AuxStockRec.indexOf(pListBeStockRec.items.get(pIndexStock).Serial);\r\n\r\n                                if (lIndex>-1){\r\n                                    mu.msgbox(\"El Serial \" +txtSerial.getText().toString() +\" se encuentra ya ingresado\");\r\n                                }\r\n\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    }//TerminaValidacionPerfilSerializado\r\n\r\n                    pListBeStockRec.items.get(pIndexStock).IdPropietarioBodega = gl.gBeRecepcion.PropietarioBodega.IdPropietarioBodega;\r\n                    pListBeStockRec.items.get(pIndexStock).IdProductoBodega = BeProducto.IdProductoBodega;\r\n                    pListBeStockRec.items.get(pIndexStock).Lic_plate = txtLicPlate.getText().toString();\r\n                    pListBeStockRec.items.get(pIndexStock).Fecha_Ingreso = String.valueOf(du.getFechaActual());\r\n\r\n                    if (IdPreseSelectParam>0){\r\n                        pListBeStockRec.items.get(pIndexStock).IdPresentacion = IdPreseSelectParam;\r\n                        pListBeStockRec.items.get(pIndexStock).Presentacion = new clsBeProducto_Presentacion();\r\n                        pListBeStockRec.items.get(pIndexStock).Presentacion.IdPresentacion =IdPreseSelectParam;\r\n                    }else {\r\n                        if (IdPreseSelect>0){\r\n                            pListBeStockRec.items.get(pIndexStock).IdPresentacion = IdPreseSelect;\r\n                            pListBeStockRec.items.get(pIndexStock).Presentacion = new clsBeProducto_Presentacion();\r\n                            pListBeStockRec.items.get(pIndexStock).Presentacion.IdPresentacion =IdPreseSelect;\r\n                        }\r\n                    }\r\n\r\n                    pListBeStockRec.items.get(pIndexStock).Serial = txtSerial.getText().toString();\r\n                    pListBeStockRec.items.get(pIndexStock).Anada = Integer.parseInt(txtAnada.getText().toString());\r\n                    pListBeStockRec.items.get(pIndexStock).Fec_agr = gl.gBeRecepcion.Fecha_recepcion;\r\n                    pListBeStockRec.items.get(pIndexStock).User_agr = gl.IdOperador+\"\";\r\n                    pListBeStockRec.items.get(pIndexStock).Fec_mod = gl.gBeRecepcion.Fecha_recepcion;\r\n                    pListBeStockRec.items.get(pIndexStock).User_mod = gl.IdOperador+\"\";\r\n                    pListBeStockRec.items.get(pIndexStock).IsNew = true;\r\n                    pListBeStockRec.items.get(pIndexStock).Activo = true;\r\n                    pListBeStockRec.items.get(pIndexStock).IdRecepcionDet = pIdRecepcionDet;\r\n\r\n                    if (BeProducto.Peso_recepcion){\r\n                        pListBeStockRec.items.get(pIndexStock).Peso = Double.parseDouble(txtPesoReal.getText().toString());\r\n                    }else{\r\n                        pListBeStockRec.items.get(pIndexStock).Peso = 0.0;\r\n                    }\r\n\r\n                    if (BeProducto.Temperatura_recepcion){\r\n                        pListBeStockRec.items.get(pIndexStock).Temperatura = Double.parseDouble(txtTempReal.getText().toString());\r\n                    }else{\r\n                        pListBeStockRec.items.get(pIndexStock).Temperatura = 0.0;\r\n                    }\r\n\r\n                    pListBeStockRec.items.get(pIndexStock).Regularizado =false;\r\n                    pListBeStockRec.items.get(pIndexStock).Fecha_regularizacion =du.convierteFecha(\"01-01-1900\");\r\n\r\n                    if (pListBeStockSeRec.items!=null){\r\n                        for (clsBeStock_se_rec bo: pListBeStockSeRec.items){\r\n                            bo.IdStockRec = pListBeStockRec.items.get(pIndexStock).IdStockRec;\r\n                        }\r\n                    }\r\n\r\n                    if (gl.mode==2){\r\n\r\n                        if (plistBeReDetParametros.items!=null){\r\n\r\n                            for (clsBeTrans_re_det_parametros Obj: plistBeReDetParametros.items){\r\n\r\n                                Obj.IdProductoParametro = Obj.IdProductoParametro;\r\n                                Obj.IdRecepcionDet = pIdRecepcionDet;\r\n                                Obj.IdRecepcionEnc = gl.gIdRecepcionEnc;\r\n                                Obj.ProductoParametro.IdProductoParametro = Obj.IdProductoParametro;\r\n                                Obj.TipoParametro = Obj.TipoParametro;\r\n                                Obj.Valor_fecha = Obj.Valor_fecha;\r\n                                Obj.Valor_texto = Obj.Valor_texto;\r\n                                Obj.Valor_numerico = Obj.Valor_numerico;\r\n                                Obj.Valor_logico = Obj.Valor_logico;\r\n                                Obj.Valor_Unico = Obj.Valor_Unico;\r\n                                Obj.User_agr = gl.IdOperador+\"\";\r\n                                Obj.Fec_agr = String.valueOf(du.getFechaActual());\r\n                                Obj.IsNew = true;\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    }else{\r\n\r\n                        if (pListBEProductoParametro!=null){\r\n\r\n                            if (pListBEProductoParametro.items!=null){\r\n\r\n                                for (clsBeProducto_parametros obj: pListBEProductoParametro.items){\r\n\r\n                                    clsBeTrans_re_det_parametros ObjDP = new clsBeTrans_re_det_parametros();\r\n\r\n                                    ObjDP.IdRecepcionDet = pIdRecepcionDet;\r\n                                    ObjDP.IdProductoParametro = obj.IdProductoParametro;\r\n\r\n                                    ObjDP.IdParametroDet = 0;\r\n                                    ObjDP.IdProductoParametro = obj.IdProductoParametro;\r\n                                    ObjDP.IdRecepcionDet = pIdRecepcionDet;\r\n                                    ObjDP.IdRecepcionEnc = gl.gIdRecepcionEnc;\r\n                                    ObjDP.ProductoParametro = obj;\r\n                                    ObjDP.TipoParametro = obj.TipoParametro;\r\n                                    ObjDP.Valor_fecha = obj.Valor_fecha;\r\n                                    ObjDP.Valor_texto = obj.Valor_texto;\r\n                                    ObjDP.Valor_numerico = obj.Valor_numerico;\r\n                                    ObjDP.Valor_logico = obj.Valor_logico;\r\n                                    ObjDP.Valor_Unico = obj.Valor_Unico;\r\n                                    ObjDP.User_agr = gl.IdOperador+\"\";\r\n                                    ObjDP.Fec_agr = String.valueOf(du.getFechaActual());\r\n                                    ObjDP.IsNew = true;\r\n\r\n                                    if(gl.mode==1){\r\n                                        plistBeReDetParametros.items.add(ObjDP);\r\n                                    }\r\n\r\n                                }\r\n\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                    if (pListBeStockRec.items.get(pIndexStock).Presentacion!=null){\r\n\r\n                        if (pListBeStockRec.items.get(pIndexStock).Presentacion.IdPresentacion!=-1){\r\n\r\n                            clsBeProducto_Presentacion bePresentacion = new clsBeProducto_Presentacion();\r\n\r\n                            bePresentacion = pListBeStockRec.items.get(pIndexStock).Presentacion;\r\n\r\n                            BeStock_rec.Presentacion = bePresentacion;\r\n\r\n                            if (BeStock_rec.Presentacion.Imprime_barra&&BeStock_rec.Presentacion.EsPallet){\r\n\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).IdPropietarioBodega=gl.gBeRecepcion.PropietarioBodega.IdPropietarioBodega;\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).IdProductoBodega = BeProducto.IdProductoBodega;\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).IdOperadorBodega = 0;\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).IdPresentacion = IdPreseSelectParam;\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).IdRecepcionDet = pIdRecepcionDet;\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).Impreso = false;\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).IdImpresora = 1;\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).Activo = true;\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).Fecha_ingreso = String.valueOf(du.getFechaActual());\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).Codigo_Barra = txtLicPlate.getText().toString();\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).Reimpresiones = 0;\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).Fec_agr = String.valueOf(du.getFechaActual());\r\n                                pListBeProductoPallet.items.get(pIndexProdPallet).Fec_mod = String.valueOf(du.getFechaActual());\r\n\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    dialog.cancel();\r\n                    Mostro_Propiedades = true;\r\n                    Guardar_Recepcion_Nueva();\r\n\r\n                }else{\r\n\r\n                    ObjS = new clsBeStock_rec();\r\n\r\n                    if (BeProducto.IdPerfilSerializado == 1){\r\n                        MensajeParam+=\" Ingrese al menos una serie \\n\";\r\n                        return;\r\n                    }else if(BeProducto.IdPerfilSerializado == 2){\r\n\r\n                        ObjNS =new clsBeStock_se_rec();\r\n\r\n                        if (pListBeStockSeRec.items!=null){\r\n                            ObjNS.IdStockSeRec = stream(pListBeStockSeRec.items).max(c->c.IdStockSeRec>0).IdStockSeRec+1; //pListBeStockSeRec.Max(Function(b) b.IdStockSeRec) + 1\r\n                            ValidaParametrosDespuesSeRec();\r\n                        }else{\r\n                            execws(9);\r\n                        }\r\n\r\n                    }else if(BeProducto.IdPerfilSerializado == 3){\r\n\r\n                        if (txtSerial.getText().toString().isEmpty()){\r\n                            MensajeParam+=\"Ingrese serial \\n\";\r\n                            return;\r\n                        }\r\n\r\n                    }else{\r\n\r\n                        if (!txtSerial.getText().toString().isEmpty()){\r\n\r\n                            ObjS.Serial = txtSerial.getText().toString();\r\n\r\n                            if (pListBeStockRec.items!=null){\r\n\r\n                                List AuxListSerial = stream(pListBeStockRec.items).select(c->c.Serial).toList();\r\n\r\n                                int lIndex=-1;\r\n\r\n                                lIndex = AuxListSerial.indexOf( ObjS.Serial );\r\n\r\n                                if (lIndex>-1){\r\n                                    MensajeParam+=\"El Serial \"+ txtSerial.getText().toString()+\" se encuentra ya ingresado\\n\";\r\n                                    return;\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    UltimoEspacioDeValidar();\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"ContinuaValidandoParametros:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void UltimoEspacioDeValidar(){\r\n        try{\r\n            if (pListBeStockRec!=null){\r\n                if (pListBeStockRec.items!=null){\r\n                    ObjS.IdStockRec = stream(pListBeStockRec.items).max(c->c.IdStockRec>0).IdStockRec+1; // pListBeStockRec.Max(Function(b) b.IdStockRec) + 1\r\n                    SigueValidandoParametros();\r\n                }else{\r\n                    execws(11);\r\n                }\r\n            }else{\r\n                execws(11);\r\n            }\r\n        }catch (Exception e){\r\n            mu.msgbox(\"UltimoEspacioDeValidar\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void ValidaParametrosDespuesSeRec(){\r\n\r\n        try{\r\n\r\n            if(BeProducto.IdPerfilSerializado == 2){\r\n\r\n                ObjNS.NoSerie = \"\";\r\n                ObjNS.NoSerieInicial = txtSerieIni.getText().toString();\r\n                ObjNS.NoSerieFinal = txtSerieFin.getText().toString();\r\n                ObjNS.User_agr = gl.IdOperador+\"\";\r\n                ObjNS.Fec_agr = String.valueOf(du.getFechaActual());\r\n                ObjNS.User_mod = gl.IdOperador+\"\";\r\n                ObjNS.Fec_mod = String.valueOf(du.getFechaActual());\r\n                ObjNS.Activo = true;\r\n                ObjNS.IsNew = true;\r\n\r\n                pListBeStockSeRec.items.add(ObjNS);\r\n\r\n            }\r\n\r\n            UltimoEspacioDeValidar();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"ValidaParametrosDespuesSeRec:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void SigueValidandoParametros(){\r\n\r\n        try{\r\n\r\n            ObjS.IdPropietarioBodega = gl.gBeRecepcion.PropietarioBodega.IdPropietarioBodega;\r\n            ObjS.IdProductoBodega = BeProducto.IdProductoBodega;\r\n\r\n            ObjS.Lic_plate = txtLicPlate.getText().toString();\r\n\r\n            ObjS.Fecha_Ingreso = String.valueOf(du.getFechaActual());\r\n\r\n            if (BeProducto.Fechamanufactura){\r\n                ObjS.Fecha_Manufactura = txtFechaManu.getText().toString();\r\n            }else{\r\n                ObjS.Fecha_Manufactura = du.convierteFecha(\"01-01-1900\");\r\n            }\r\n\r\n            ObjS.Serial = txtSerial.getText().toString();\r\n            ObjS.Anada = Integer.parseInt(txtAnada.getText().toString());\r\n            ObjS.Fec_agr = String.valueOf(du.getFechaActual());\r\n            ObjS.User_agr = gl.IdOperador+\"\";\r\n            ObjS.Fec_mod = String.valueOf(du.getFechaActual());\r\n            ObjS.User_mod = gl.IdOperador+\"\";\r\n            ObjS.IsNew = true;\r\n\r\n            ObjS.Activo = true;\r\n            ObjS.IdRecepcionDet = pIdRecepcionDet;\r\n\r\n            if (IdPreseSelectParam>0){\r\n                ObjS.IdPresentacion = IdPreseSelectParam;\r\n                ObjS.Presentacion = new clsBeProducto_Presentacion();\r\n                ObjS.Presentacion.IdPresentacion = IdPreseSelectParam;\r\n            }else{\r\n                ObjS.IdPresentacion = IdPreseSelect;\r\n                ObjS.Presentacion = new clsBeProducto_Presentacion();\r\n                ObjS.Presentacion.IdPresentacion = IdPreseSelect;\r\n            }\r\n\r\n            if (BeProducto.Peso_recepcion){\r\n                ObjS.Peso = Double.parseDouble(txtPesoReal.getText().toString());\r\n            }else{\r\n                ObjS.Peso = 0.0;\r\n            }\r\n\r\n            if (BeProducto.Temperatura_recepcion){\r\n                ObjS.Temperatura = Double.parseDouble(txtTempReal.getText().toString());\r\n            }else{\r\n                ObjS.Temperatura = 0.0;\r\n            }\r\n\r\n            ObjS.Regularizado = false;\r\n            ObjS.Fecha_regularizacion = \"\";\r\n\r\n            pListBeStockRec.items.add(ObjS);\r\n\r\n            if (pListBeStockSeRec.items!=null){\r\n                for (clsBeStock_se_rec bo:pListBeStockSeRec.items){\r\n                    bo.IdStockRec = ObjS.IdStockRec;\r\n                }\r\n            }\r\n\r\n            for (clsBeProducto_parametros Obj: pListBEProductoParametro.items){\r\n\r\n                clsBeTrans_re_det_parametros ObjDP = new clsBeTrans_re_det_parametros();\r\n\r\n                ObjDP.IdRecepcionDet = pIdRecepcionDet;\r\n                ObjDP.IdProductoParametro = Obj.IdProductoParametro;\r\n                ObjDP.IdParametroDet = 0;\r\n                ObjDP.IdRecepcionEnc = gl.gIdRecepcionEnc;\r\n                ObjDP.ProductoParametro = Obj;\r\n                ObjDP.TipoParametro = Obj.TipoParametro;\r\n                ObjDP.Valor_fecha = Obj.Valor_fecha;\r\n                ObjDP.Valor_texto = Obj.Valor_texto;\r\n                ObjDP.Valor_numerico = Obj.Valor_numerico;\r\n                ObjDP.Valor_logico = Obj.Valor_logico;\r\n                ObjDP.Valor_Unico = Obj.Valor_Unico;\r\n                ObjDP.User_agr = gl.IdOperador+\"\";\r\n                ObjDP.Fec_agr = String.valueOf(du.getFechaActual());\r\n                ObjDP.IsNew = true;\r\n\r\n                if (Obj.IsNew){\r\n                    plistBeReDetParametros.items.add(ObjDP);\r\n                }\r\n\r\n            }\r\n\r\n            dialog.cancel();\r\n            Mostro_Propiedades = true;\r\n            Guardar_Recepcion_Nueva();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"SigueValidandoParametros:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgContinuarTemp(String msg) {\r\n\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    if (BeProducto.Genera_lp){\r\n                        execws(8);\r\n                    }else{\r\n                        PallCorrecto=true;\r\n                        ContinuaValidandoParametros();\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                 return;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n            dialog.wait();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void msgContinuarPeso(String msg) {\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(\"¿\" + msg + \"?\");\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    Temperatura_Correcta();\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    return;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    public boolean Parametros_Obligatorios_Ingresados(String Detalle) {\r\n\r\n        boolean Parametros=true;\r\n        int Indice=-1;\r\n        String Descripcion;\r\n        int pIdProductoParametro=-1;\r\n\r\n        try{\r\n\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Parametros_Obligatorios_Ingresados: \"+e.getMessage());\r\n        }\r\n\r\n        return Parametros;\r\n    }\r\n\r\n    private boolean Mostrar_Propiedades_Parametros(){\r\n\r\n        boolean Mostrar=false;\r\n\r\n        try{\r\n\r\n            if (!Mostro_Propiedades){\r\n                execws(5);\r\n            }else{\r\n                Guardar_Recepcion_Nueva();\r\n            }\r\n\r\n            Mostrar_Propiedades_Parametros = Mostrar;\r\n\r\n        }catch (Exception e){\r\n\r\n        }\r\n\r\n        return Mostrar;\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region CargaProducto\r\n    private void Procesa_Barra_Producto(){\r\n\r\n        boolean LongitudValida = true;\r\n\r\n        try{\r\n\r\n            pLp = \"\";\r\n            Escaneo_Pallet_Interno = false;\r\n\r\n            if (!txtBarra.getText().toString().isEmpty()){\r\n\r\n                String vStarWithParameter = \"$\";\r\n\r\n                if (gBeConfiguracionBarraPallet!=null){\r\n                    if (!gBeConfiguracionBarraPallet.IdentificadorInicio.isEmpty()){\r\n                        vStarWithParameter = gBeConfiguracionBarraPallet.IdentificadorInicio;\r\n                    }\r\n                }\r\n\r\n                if (txtBarra.getText().toString().startsWith(\"$\") |\r\n                        txtBarra.getText().toString().startsWith(\"(01)\") |\r\n                        txtBarra.getText().toString().startsWith(vStarWithParameter)){\r\n\r\n                    //int vLengthBarra  = txtBarra.getText().toString().length();\r\n\r\n                    pLp = txtBarra.getText().toString().replace(\"$\", \"\");\r\n\r\n                    Escaneo_Pallet_Interno = true;\r\n\r\n                    //Llama al método del WS Existe_Lp\r\n                    execws(24);\r\n                }\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Procesa_Barra_Producto: \"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Load(){\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Cargando valores de tarea\");\r\n\r\n            if (gl.gselitem != null) {\r\n\r\n                Escaneo_Pallet = gl.gEscaneo_Pallet;\r\n\r\n                BeProducto.IdProductoBodega = BeOcDet.IdProductoBodega;\r\n                pIdOrdenCompraDet= BeOcDet.IdOrdenCompraDet;\r\n                pIdOrdenCompraEnc = BeOcDet.IdOrdenCompraEnc;\r\n                pLineaOC = BeOcDet.No_Linea;\r\n\r\n                if (Escaneo_Pallet){\r\n\r\n                    BeINavBarraPallet = frm_list_rec_prod.BeINavBarraPallet;\r\n\r\n                    if (frm_list_rec_prod.BeProducto!=null){\r\n                        if (frm_list_rec_prod.BeProducto.IdProducto>0){\r\n                            BeProducto = frm_list_rec_prod.BeProducto;\r\n                            BeProducto.Presentaciones.items = stream(BeProducto.Presentaciones.items).where(c->c.Codigo_barra.equals(BeINavBarraPallet.UM_Producto)).toList();\r\n                            BeProducto.Presentacion = BeProducto.Presentaciones.items.get(0);\r\n                        }\r\n                    }\r\n\r\n                    if (gl.mode==1){\r\n                        Carga_Datos_Producto();\r\n                    }else{\r\n                        Carga_Datos_Producto_Existente();\r\n                    }\r\n\r\n                }else{\r\n\r\n                    if (frm_list_rec_prod.BeProducto!=null){\r\n                        if (frm_list_rec_prod.BeProducto.IdProducto>0){\r\n                            BeProducto = frm_list_rec_prod.BeProducto;\r\n                        }\r\n                    }\r\n\r\n                    if (gl.Carga_Producto_x_Pallet){\r\n\r\n                        Carga_Datos_Producto_Por_Pallet();\r\n\r\n                    }else{\r\n                        txtCantidadRec.requestFocus();\r\n                        if (gl.mode==1){\r\n                            Carga_Datos_Producto();\r\n                        }else{\r\n                            Carga_Datos_Producto_Existente();\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Load:\"+ e.getMessage());\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private void Carga_Datos_Producto_Por_Pallet(){\r\n\r\n        try{\r\n\r\n            if (BeProducto.IdProducto!=0){\r\n\r\n                Mostro_Propiedades = false;\r\n\r\n                plistBeReDetParametros =  new clsBeTrans_re_det_parametrosList();\r\n                lBeProdPallet = new clsBeProducto_palletList();\r\n                pListBeStockSeRec = new clsBeStock_se_recList();\r\n\r\n                if (pListTransRecDet.items!=null){\r\n\r\n                    pIdRecepcionDet = stream(pListTransRecDet.items).max(c->c.IdRecepcionDet>0).IdRecepcionDet+1;\r\n\r\n                    if (gl.TipoOpcion==2){\r\n                        pLineaOC  = stream(pListTransRecDet.items).max(c->c.IdRecepcionDet>0).IdRecepcionDet+1;\r\n                    }else if(pLineaOC==-1){\r\n                        pLineaOC= stream(gl.gBeRecepcion.OrdenCompraRec.OC.DetalleOC.items).max(c->c.IdOrdenCompraDet>0).IdOrdenCompraDet+1;\r\n                    }\r\n\r\n                }else{\r\n\r\n                    pListTransRecDet.items = new ArrayList<clsBeTrans_re_det>();\r\n\r\n                    execws(19);\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            mu.msgbox(\"Carga_Datos_Producto_Por_Pallet:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Carga_Datos_Producto(){\r\n\r\n        int IndiceOCDet;\r\n        int vPresentacion;\r\n        int IndicePres;\r\n        double Factor;\r\n        double CostoOC=0;\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Cargando datos de producto\");\r\n\r\n            if (BeProducto.IdProducto!=0){\r\n\r\n                Mostro_Propiedades = false;\r\n\r\n                plistBeReDetParametros = new clsBeTrans_re_det_parametrosList();\r\n                lBeStockRec = new clsBeStock_recList();\r\n                lBeProdPallet = new clsBeProducto_palletList();\r\n                pListBeStockSeRec = new clsBeStock_se_recList();\r\n                pListBeStockRec = new clsBeStock_recList();\r\n                pListBeProductoPallet = new clsBeProducto_palletList();\r\n                pListTransRecDet = new clsBeTrans_re_detList();\r\n\r\n                if (pListTransRecDet.items!=null){\r\n\r\n                    pIdRecepcionDet = stream(pListTransRecDet.items).max(c->c.IdRecepcionDet>0).IdRecepcionDet+1;\r\n\r\n                    if (gl.TipoOpcion==2){\r\n                        pLineaOC  = stream(pListTransRecDet.items).max(c->c.IdRecepcionDet>0).IdRecepcionDet+1;\r\n                    }else if(pLineaOC==-1){\r\n                        pLineaOC= stream(gl.gBeRecepcion.OrdenCompraRec.OC.DetalleOC.items).max(c->c.IdOrdenCompraDet>0).IdOrdenCompraDet+1;\r\n                    }\r\n\r\n                }else{\r\n                    pListTransRecDet.items = new ArrayList<clsBeTrans_re_det>();\r\n\r\n                    execws(19);\r\n\r\n                    //Listar_Producto_Presentaciones();\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"CargarDatos: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void Carga_Datos_Producto_Existente(){\r\n\r\n        int IndiceOCDet;\r\n        int vPresentacion;\r\n        int IndicePres;\r\n        double Factor;\r\n        double CostoOC=0;\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Cargando datos de producto existente\");\r\n\r\n            if (BeProducto.IdProducto!=0){\r\n\r\n                Mostro_Propiedades = false;\r\n\r\n                plistBeReDetParametros = new clsBeTrans_re_det_parametrosList();\r\n                lBeStockRec = new clsBeStock_recList();\r\n                lBeProdPallet = new clsBeProducto_palletList();\r\n                pListBeStockSeRec = new clsBeStock_se_recList();\r\n                pListBeStockRec = new clsBeStock_recList();\r\n                pListBeProductoPallet = new clsBeProducto_palletList();\r\n                pListTransRecDet.items = gl.gListTransRecDet.items;\r\n\r\n                if (pListTransRecDet.items!=null){\r\n\r\n                    pIdRecepcionDet = pListTransRecDet.items.get(0).IdRecepcionDet;\r\n\r\n                    pLineaOC = pListTransRecDet.items.get(0).No_Linea;\r\n\r\n                    execws(23);\r\n\r\n                }else{\r\n                    pListTransRecDet.items = new ArrayList<clsBeTrans_re_det>();\r\n\r\n                    execws(19);\r\n\r\n                    //Listar_Producto_Presentaciones();\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"CargarDatos_Existentes: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void LlenaDatosFaltantes(){\r\n\r\n        vPresentacion=0;\r\n        CostoOC=0;\r\n        double Factor=0;\r\n        boolean EsPallet=false;\r\n        int Indx=-1;\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Terminando de cargar datos y validando valores\");\r\n\r\n            if (Escaneo_Pallet){\r\n                txtBarra.setText(BeINavBarraPallet.Codigo_barra);\r\n            }else{\r\n                txtBarra.setText(Get_Codigo_Barra(gl.CodigoRecepcion));\r\n                txtBarra.setText(\"\");\r\n            }\r\n\r\n            if(BeProducto.IdProductoBodega>0){\r\n                pIdProductoBodega = BeProducto.IdProductoBodega;\r\n            }\r\n\r\n            lblDatosProd.setText(BeProducto.Codigo + \" - \" + BeProducto.Nombre);\r\n            lblPropPrd.setText(BeProducto.Propietario.Nombre_comercial);\r\n\r\n            if (BeProducto.Control_vencimiento){\r\n                lblVence.setVisibility(View.VISIBLE);\r\n                cmbVenceRec.setVisibility(View.VISIBLE);\r\n                imgDate.setVisibility(View.VISIBLE);\r\n\r\n                if (!gl.gFechaVenceAnterior.equals(\"\")){\r\n                    cmbVenceRec.setText(gl.gFechaVenceAnterior);\r\n                }\r\n\r\n            }else{\r\n                cmbVenceRec.setVisibility(View.GONE);\r\n                lblVence.setVisibility(View.GONE);\r\n                imgDate.setVisibility(View.GONE);\r\n            }\r\n\r\n            Valida_Lote();\r\n\r\n            clsBeTrans_oc_det BeOcDet =\r\n                    stream(gl.gpListDetalleOC.items)\r\n                            .where(c -> c.IdOrdenCompraDet == pIdOrdenCompraDet)\r\n                            .first();\r\n\r\n            vPresentacion = Get_Presentacion_A_Recibir();\r\n\r\n            if (vPresentacion>0){\r\n\r\n                Factor =Get_Factor_Presentacion(vPresentacion);\r\n\r\n                //#EJC20201008: Da error de NoSuchElementException cuando no encuntra la presentación por el ID,\r\n                //Por eso agregué este try catch así.\r\n\r\n                clsBeProducto_Presentacion a= new clsBeProducto_Presentacion();\r\n\r\n                try {\r\n                    EsPallet = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==vPresentacion).select(c->c.EsPallet).first();\r\n                } catch (NoSuchElementException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n\r\n                if (EsPallet){\r\n                    Factor = Factor * stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==vPresentacion).select(c->c.CajasPorCama).first() * stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==vPresentacion).select(c->c.CamasPorTarima).first();\r\n                }\r\n\r\n                List AxuListPres = stream(BeProducto.Presentaciones.items).select(c->c.IdPresentacion).toList();\r\n                Indx =AxuListPres.indexOf(vPresentacion);\r\n\r\n                cmbPresRec.setSelection(Indx);\r\n\r\n            }else{\r\n\r\n                if (vPresentacion>0){\r\n\r\n                    Factor = 1;\r\n\r\n                    if (BeProducto.Presentaciones!=null){\r\n                        cmbPresRec.setVisibility(View.VISIBLE);\r\n                        cmbPresRec.setSelection(0);\r\n                    }else{\r\n                        cmbPresRec.setVisibility(View.GONE);\r\n                    }\r\n\r\n                }else{\r\n                    lblPres.setVisibility(View.GONE);\r\n                    cmbPresRec.setVisibility(View.GONE);\r\n                }\r\n\r\n            }\r\n\r\n            if (gl.Carga_Producto_x_Pallet){\r\n\r\n                if  (BeProducto.Presentaciones.items.get(Indx).EsPallet){\r\n\r\n                    Cant_Recibida = gBeStockRec.Uds_lic_plate;\r\n                    Cant_A_Recibir = Factor;\r\n\r\n                    FinalizCargaProductos();\r\n\r\n                }else{\r\n\r\n                execws(22);\r\n\r\n                }\r\n\r\n            }else{\r\n\r\n                Cant_Recibida = gl.gselitem.Cantidad_recibida;//stream(gl.gpListDetalleOC.items).where(c->c.IdOrdenCompraDet ==pIdOrdenCompraDet).select(c->c.Cantidad_recibida).first();\r\n                Cant_A_Recibir = gl.gselitem.Cantidad; //stream(gl.gpListDetalleOC.items).where(c->c.IdOrdenCompraDet ==pIdOrdenCompraDet).select(c->c.Cantidad).first();\r\n                if(Cant_A_Recibir - Cant_Recibida<0){\r\n                    Cant_Pendiente = 0;\r\n                }else{\r\n                    Cant_Pendiente = mu.round(Cant_A_Recibir - Cant_Recibida,gl.gCantDecCalculo);\r\n                }\r\n\r\n//                txtCantidadRec.setText(mu.frmdecimal(Cant_Pendiente,gl.gCantDecDespliegue)+\"\");\r\n                txtCantidadRec.setText(Cant_Pendiente+\"\");\r\n                txtBarra.requestFocus();\r\n                txtBarra.selectAll();\r\n\r\n                clsBeTrans_oc_det_lote BeLoteLinea;\r\n\r\n                if (BeOcDet!=null){\r\n\r\n                if (gl.gBeOrdenCompra.DetalleLotes.items!=null){\r\n\r\n                    if (gl.gBeOrdenCompra.DetalleLotes.items.size()>0){\r\n\r\n                        BeLoteLinea = stream(gl.gBeOrdenCompra.DetalleLotes.items)\r\n                                .where(c->c.No_linea == BeOcDet.No_Linea &&\r\n                                        c.IdOrdenCompraDet == pIdOrdenCompraDet\r\n                                        && c.Codigo_producto.equals(BeOcDet.Codigo_Producto)).first();\r\n\r\n                        if (BeLoteLinea!=null){\r\n                            txtLoteRec.setText(BeLoteLinea.Lote);\r\n\r\n                            if (!BeLoteLinea.Fecha_vence.isEmpty()){\r\n\r\n                                VenceList.clear();\r\n\r\n                                BeLoteLinea.Fecha_vence =du.convierteFechaMostar(BeLoteLinea.Fecha_vence);\r\n\r\n                                VenceList.add(BeLoteLinea.Fecha_vence);\r\n\r\n                                cmbVenceRec.setText(VenceList.get(0));\r\n\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n                FinalizCargaProductos();\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            mu.msgbox(e.getClass()+\" \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void LlenaDatosFaltantes_Existente(){\r\n\r\n        vPresentacion=0;\r\n        CostoOC=0;\r\n        double Factor=0;\r\n        boolean EsPallet=false;\r\n        int Indx=-1;\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Terminando de cargar datos y validando valores\");\r\n\r\n            if (Escaneo_Pallet){\r\n                txtBarra.setText(pListTransRecDet.items.get(0).Lic_plate);\r\n            }else{\r\n                txtBarra.setText(Get_Codigo_Barra(gl.CodigoRecepcion));\r\n                txtBarra.setText(\"\");\r\n            }\r\n\r\n            if(BeProducto.IdProductoBodega>0){\r\n                pIdProductoBodega = pListTransRecDet.items.get(0).IdProductoBodega;\r\n            }\r\n\r\n            lblDatosProd.setText(BeProducto.Codigo + \" - \" + BeProducto.Nombre);\r\n            lblPropPrd.setText(BeProducto.Propietario.Nombre_comercial);\r\n\r\n            if (BeProducto.Control_vencimiento){\r\n                lblVence.setVisibility(View.VISIBLE);\r\n                cmbVenceRec.setVisibility(View.VISIBLE);\r\n                imgDate.setVisibility(View.VISIBLE);\r\n\r\n                if (!gl.gFechaVenceAnterior.equals(\"\")){\r\n                    cmbVenceRec.setText(gl.gFechaVenceAnterior);\r\n                }\r\n\r\n            }else{\r\n                cmbVenceRec.setVisibility(View.GONE);\r\n                lblVence.setVisibility(View.GONE);\r\n                imgDate.setVisibility(View.GONE);\r\n            }\r\n\r\n            Valida_Lote();\r\n\r\n            clsBeTrans_oc_det BeOcDet =\r\n                    stream(gl.gpListDetalleOC.items)\r\n                            .where(c -> c.IdOrdenCompraDet == pIdOrdenCompraDet)\r\n                            .first();\r\n\r\n            vPresentacion = pListTransRecDet.items.get(0).IdPresentacion;\r\n\r\n            if (vPresentacion>0){\r\n\r\n                Factor =Get_Factor_Presentacion(vPresentacion);\r\n                EsPallet = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==vPresentacion).select(c->c.EsPallet).first();\r\n\r\n                if (EsPallet){\r\n                    Factor = Factor * stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==vPresentacion).select(c->c.CajasPorCama).first() * stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==vPresentacion).select(c->c.CamasPorTarima).first();\r\n                }\r\n\r\n                List AxuListPres = stream(BeProducto.Presentaciones.items).select(c->c.IdPresentacion).toList();\r\n                Indx =AxuListPres.indexOf(vPresentacion);\r\n\r\n                cmbPresRec.setSelection(Indx);\r\n\r\n            }else{\r\n\r\n                if (vPresentacion>0){\r\n\r\n                    Factor = 1;\r\n\r\n                    if (BeProducto.Presentaciones!=null){\r\n                        cmbPresRec.setVisibility(View.VISIBLE);\r\n                        cmbPresRec.setSelection(0);\r\n                    }else{\r\n                        cmbPresRec.setVisibility(View.GONE);\r\n                    }\r\n\r\n                }else{\r\n                    lblPres.setVisibility(View.GONE);\r\n                    cmbPresRec.setVisibility(View.GONE);\r\n                }\r\n\r\n            }\r\n\r\n            if (gl.Carga_Producto_x_Pallet){\r\n\r\n                if  (BeProducto.Presentaciones.items.get(Indx).EsPallet){\r\n\r\n                    Cant_Recibida = gBeStockRec.Uds_lic_plate;\r\n                    Cant_A_Recibir = Factor;\r\n\r\n                    FinalizCargaProductos();\r\n\r\n                }else{\r\n\r\n                    execws(22);\r\n\r\n                }\r\n\r\n            }else{\r\n\r\n                Cant_Recibida = gl.gselitem.Cantidad_recibida;//stream(gl.gpListDetalleOC.items).where(c->c.IdOrdenCompraDet ==pIdOrdenCompraDet).select(c->c.Cantidad_recibida).first();\r\n                Cant_A_Recibir = gl.gselitem.Cantidad; //stream(gl.gpListDetalleOC.items).where(c->c.IdOrdenCompraDet ==pIdOrdenCompraDet).select(c->c.Cantidad).first();\r\n                if(Cant_A_Recibir - Cant_Recibida<0){\r\n                    Cant_Pendiente = 0;\r\n                }else{\r\n                    Cant_Pendiente = mu.round(Cant_A_Recibir - Cant_Recibida,gl.gCantDecCalculo);\r\n                }\r\n\r\n//                txtCantidadRec.setText(mu.frmdecimal(pListTransRecDet.items.get(0).cantidad_recibida,gl.gCantDecDespliegue)+\"\");\r\n                txtCantidadRec.setText(pListTransRecDet.items.get(0).cantidad_recibida+\"\");\r\n                txtCantidadRec.requestFocus();\r\n\r\n                Cant_Recibida_Anterior = pListTransRecDet.items.get(0).cantidad_recibida;\r\n\r\n                txtLoteRec.setText(pListTransRecDet.items.get(0).Lote);\r\n\r\n                cmbVenceRec.setText(du.convierteFechaMostar(pListTransRecDet.items.get(0).Fecha_vence));\r\n\r\n                txtCostoReal.setText(pListTransRecDet.items.get(0).Costo+\"\");\r\n\r\n                List AxuLisEsta = stream(pListTransRecDet.items).select(c->c.IdProductoEstado).toList();\r\n                Indx =AxuLisEsta.indexOf(pListTransRecDet.items.get(0).IdProductoEstado);\r\n\r\n                cmbPresRec.setSelection(Indx);\r\n\r\n                FinalizCargaProductos();\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            mu.msgbox(e.getClass()+\" \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void FinalizCargaProductos(){\r\n\r\n        try{\r\n\r\n            txtUmbasRec.setText(BeProducto.UnidadMedida.Nombre);\r\n            txtPeso.setText(\"\");\r\n\r\n            if (BeProducto.Control_lote){\r\n                if (gl.mode==1){\r\n                    if (!gl.gLoteAnterior.isEmpty()){\r\n                        txtLoteRec.setText(gl.gLoteAnterior);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!BeProducto.Control_peso){\r\n                txtPeso.setVisibility(View.GONE);\r\n                txtPesoUnitario.setVisibility(View.GONE);\r\n                lblPeso.setVisibility(View.GONE);\r\n                lblPUn.setVisibility(View.GONE);\r\n            }\r\n\r\n            if(!BeProducto.Control_vencimiento){\r\n                cmbVenceRec.setVisibility(View.GONE);\r\n                lblVence.setVisibility(View.GONE);\r\n                imgDate.setVisibility(View.GONE);\r\n            }\r\n\r\n            if (!gl.gBeRecepcion.Muestra_precio){\r\n                txtCostoOC.setVisibility(View.GONE);\r\n                txtCostoReal.setVisibility(View.GONE);\r\n                lblCosto.setVisibility(View.GONE);\r\n                lblCReal.setVisibility(View.GONE);\r\n            }\r\n\r\n            CostoOC = stream(gl.gpListDetalleOC.items).where(c->c.IdProductoBodega == pIdProductoBodega\r\n                    && c.IdPresentacion == vPresentacion).select(c->c.Costo).first();\r\n\r\n            if (gl.gBeOrdenCompra!=null) {\r\n                if (((gl.gBeOrdenCompra.IdOrdenCompraEnc > 0) && (CostoOC > 0))) {\r\n                    txtCostoOC.setText(mu.round(CostoOC,  gl.gCantDecCalculo)+\"\");\r\n                }\r\n                else {\r\n                    txtCostoOC.setText(mu.round(BeProducto.Costo, gl.gCantDecCalculo)+\"\");\r\n                }\r\n\r\n            } else {\r\n                txtCostoOC.setText(mu.round(BeProducto.Costo, gl.gCantDecCalculo)+\"\");\r\n            }\r\n\r\n            txtCostoOC.setText(mu.round(BeProducto.Costo, gl.gCantDecCalculo)+\"\");\r\n\r\n            txtCostoReal.setText(CostoOC+\"\");\r\n\r\n            txtUmbasRec.setFocusable(false);\r\n            txtUmbasRec.setFocusableInTouchMode(false);\r\n            txtUmbasRec.setClickable(false);\r\n\r\n            if (gl.mode==1){\r\n                txtBarra.setText(BeProducto.Codigo);\r\n                txtBarra.setText(\"\");\r\n            }\r\n\r\n            /*txtBarra.setFocusable(false);\r\n            txtBarra.setFocusableInTouchMode(false);\r\n            txtBarra.setClickable(false);*/\r\n\r\n            txtCantidadRec.setInputType(InputType.TYPE_CLASS_NUMBER |InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtCantidadRec.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n            txtCostoOC.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtCostoOC.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n            txtPeso.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtPeso.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n            txtCostoReal.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtCostoReal.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n            txtPesoUnitario.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n            txtPesoUnitario.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(gl.gCantDecDespliegue)});\r\n            cmbVenceRec.setInputType(InputType.TYPE_DATETIME_VARIATION_DATE);\r\n\r\n            btnCantPendiente.setText(\"Pendiente: \"+mu.frmdecimal(Cant_Pendiente, gl.gCantDecDespliegue));\r\n            btnCantRecibida.setText(\"Recibido: \"+mu.frmdecimal(Cant_Recibida, gl.gCantDecDespliegue));\r\n\r\n            if (gl.Carga_Producto_x_Pallet){\r\n\r\n                txtLoteRec.setText(gBeStockRec.Lote);\r\n\r\n                txtLoteRec.setFocusable(false);\r\n                txtLoteRec.setFocusableInTouchMode(false);\r\n                txtLoteRec.setClickable(false);\r\n\r\n                cmbVenceRec.setText(du.convierteFechaMostar(gBeStockRec.Fecha_vence));\r\n\r\n                cmbVenceRec.setFocusable(false);\r\n                cmbVenceRec.setFocusableInTouchMode(false);\r\n                cmbVenceRec.setClickable(false);\r\n\r\n            }\r\n\r\n            if (gl.mode==1){\r\n                if (Escaneo_Pallet){\r\n                    LlenaCamposEsPallet();\r\n                }\r\n            }else{\r\n                Llena_beStock_Anterior();\r\n            }\r\n\r\n            progress.cancel();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"FinalizCargaProductos:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Llena_beStock_Anterior(){\r\n\r\n        try{\r\n\r\n            gBeStockAnt = new  clsBeStock();\r\n\r\n            gBeStockAnt.IdProductoBodega = pListTransRecDet.items.get(0).IdProductoBodega;\r\n            if (pListTransRecDet.items.get(0).Presentacion.Factor>0){\r\n                gBeStockAnt.Cantidad = pListTransRecDet.items.get(0).cantidad_recibida*pListTransRecDet.items.get(0).Presentacion.Factor;\r\n            }else{\r\n                gBeStockAnt.Cantidad = pListTransRecDet.items.get(0).cantidad_recibida;\r\n            }\r\n\r\n            if ( pListTransRecDet.items.get(0).ProductoEstado!=null&&pListTransRecDet.items.get(0).ProductoEstado.IdEstado>0){\r\n                gBeStockAnt.IdProductoEstado = pListTransRecDet.items.get(0).ProductoEstado.IdEstado;\r\n            }else{\r\n                gBeStockAnt.IdProductoEstado = pListTransRecDet.items.get(0).IdProductoEstado;\r\n            }\r\n\r\n            gBeStockAnt.Lote = pListTransRecDet.items.get(0).Lote;\r\n            gBeStockAnt.IdUnidadMedida = pListTransRecDet.items.get(0).IdUnidadMedida;\r\n            gBeStockAnt.IdPresentacion = pListTransRecDet.items.get(0).IdPresentacion;\r\n            gBeStockAnt.Fecha_vence = pListTransRecDet.items.get(0).Fecha_vence;\r\n            gBeStockAnt.IdRecepcionDet = pListTransRecDet.items.get(0).IdRecepcionDet;\r\n            gBeStockAnt.IdRecepcionEnc = pListTransRecDet.items.get(0).IdRecepcionEnc;\r\n            gBeStockAnt.IdUbicacion = gl.gBeRecepcion.IdUbicacionRecepcion;\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Llena_beStock_Anterior:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void LlenaCamposEsPallet(){\r\n\r\n        try{\r\n\r\n            txtLoteRec.setText(BeINavBarraPallet.Lote);\r\n            cmbVenceRec.setText(du.convierteFechaMostar(BeINavBarraPallet.Fecha_Vence));\r\n\r\n            if (!EsTransferenciaInternaWMS){\r\n//                txtCantidadRec.setText(mu.frmdecimal(BeINavBarraPallet.Cantidad_UMP,gl.gCantDecDespliegue)+\"\");\r\n                txtCantidadRec.setText(BeINavBarraPallet.Cantidad_UMP+\"\");\r\n                txtCantidadRec.requestFocus();\r\n            }else{\r\n//                txtCantidadRec.setText(mu.frmdecimal(BeINavBarraPallet.Cantidad_Presentacion,gl.gCantDecDespliegue));\r\n                txtCantidadRec.setText(BeINavBarraPallet.Cantidad_Presentacion+\"\");\r\n                txtCantidadRec.requestFocus();\r\n            }\r\n\r\n            List AuxList = stream(BeProducto.Presentaciones.items).select(c->c.Codigo_barra).toList();\r\n\r\n            int indxPres=AuxList.indexOf(BeINavBarraPallet.UM_Producto);\r\n\r\n            if (indxPres>-1){\r\n                cmbPresRec.setSelection(indxPres);\r\n            }else{\r\n                mu.msgbox(\"No está definida la presentación contenida en pallet para el LP: \"+BeINavBarraPallet.IdPallet);\r\n            }\r\n\r\n            List AuxLis1=stream(LProductoEstado.items).select(c->c.IdEstado).toList();\r\n\r\n            int indxEstado=AuxLis1.indexOf(gl.gIdProductoBuenEstadoPorDefecto);\r\n\r\n            if(indxEstado>-1){\r\n                cmbEstadoProductoRec.setSelection(indxEstado);\r\n            }else{\r\n                mu.msgbox(\"No existe un estado por defecto\");\r\n                return;\r\n            }\r\n\r\n            Llena_Detalle_Recepcion_Nueva();\r\n\r\n            Llena_Stock_Rec_Pallet_Proveedor();\r\n\r\n            double vCantidad  = BeINavBarraPallet.Cajas_Por_Cama * BeINavBarraPallet.Camas_Por_Tarima;\r\n\r\n            String vMensaje1 = \"Código: \"+BeINavBarraPallet.Codigo+\"\\n \"\r\n                    +\"Cant: \"+vCantidad +\"\\n \"\r\n                    +\"Pres: \"+ BeProducto.Presentaciones.items.get(indxPres).Nombre +\"\\n\"\r\n                    +\"Venc: \"+BeINavBarraPallet.Fecha_Vence+\"\\n \"\r\n                    +\"Lote: \"+BeINavBarraPallet.Lote +\"\\n\"\r\n                    +\"¿El producto está completo y en buen estado?\";\r\n\r\n\r\n\r\n            msgValidaProductoPallet(vMensaje1);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"LlenaCamposEsPallet:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Guardar_Pallet(){\r\n\r\n        try{\r\n\r\n            vBeStockRecPallet.Uds_lic_plate = BeINavBarraPallet.Cantidad_UMP;\r\n            vBeStockRecPallet.No_bulto = 0;\r\n\r\n            execws(21);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Guardar_Pallet:\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void Llena_Stock_Rec_Pallet_Proveedor(){\r\n\r\n        vBeStockRecPallet = new clsBeStock_rec();\r\n        double vCantidad=0;\r\n\r\n        try{\r\n\r\n            if (BeINavBarraPallet!=null){\r\n\r\n                vBeStockRecPallet.IdStockRec = 0;\r\n                vBeStockRecPallet.IdPropietarioBodega = gl.gBeOrdenCompra.IdPropietarioBodega;\r\n                vBeStockRecPallet.IdProductoBodega = BeProducto.IdProductoBodega;\r\n                if (IdPreseSelect>0){\r\n                    vBeStockRecPallet.IdPresentacion =IdPreseSelect;\r\n                    vBeStockRecPallet.Presentacion = new  clsBeProducto_Presentacion();\r\n                    vBeStockRecPallet.Presentacion.IdPresentacion = IdPreseSelect;\r\n                }else{\r\n                    vBeStockRecPallet.IdPresentacion =0;\r\n                    vBeStockRecPallet.Presentacion = new  clsBeProducto_Presentacion();\r\n                    vBeStockRecPallet.Presentacion.IdPresentacion = 0;\r\n                }\r\n\r\n                vBeStockRecPallet.IdUnidadMedida = BeProducto.IdUnidadMedidaBasica;\r\n                vBeStockRecPallet.IdRecepcionEnc = gl.gBeRecepcion.IdRecepcionEnc;\r\n                vBeStockRecPallet.IdRecepcionDet = pIdRecepcionDet;\r\n                vBeStockRecPallet.Lote = BeINavBarraPallet.Lote;\r\n                vBeStockRecPallet.Lic_plate = BeINavBarraPallet.Codigo_barra;\r\n                vBeStockRecPallet.Serial = \"\";\r\n\r\n                if (vBeStockRecPallet.IdPresentacion > 0){\r\n\r\n                    if (!EsTransferenciaInternaWMS){\r\n                        if (BeProducto.Presentacion.EsPallet){\r\n                            vCantidad = BeINavBarraPallet.Cantidad_UMP * BeProducto.Presentacion.Factor * BeProducto.Presentacion.CamasPorTarima * BeProducto.Presentacion.CajasPorCama;\r\n                        }else{\r\n                            vCantidad = BeProducto.Presentacion.Factor * BeINavBarraPallet.Cantidad_UMP;\r\n                        }\r\n                    }else{\r\n\r\n                        if (BeProducto.Presentacion.EsPallet){\r\n                            vCantidad = BeINavBarraPallet.Cantidad_Presentacion * BeProducto.Presentacion.Factor * BeProducto.Presentacion.CamasPorTarima * BeProducto.Presentacion.CajasPorCama;\r\n                        }else{\r\n                            vCantidad = BeINavBarraPallet.Cantidad_Presentacion * BeProducto.Presentacion.Factor;\r\n                        }\r\n\r\n                    }\r\n\r\n                }else{\r\n                    vCantidad = BeINavBarraPallet.Cantidad_UMP;\r\n                }\r\n\r\n                vBeStockRecPallet.Cantidad = vCantidad;\r\n                vBeStockRecPallet.Fecha_Ingreso = du.getFechaActual();\r\n                vBeStockRecPallet.Fecha_vence = BeINavBarraPallet.Fecha_Vence;\r\n                vBeStockRecPallet.Uds_lic_plate = BeINavBarraPallet.Cantidad_Presentacion;\r\n                vBeStockRecPallet.No_bulto = BeINavBarraPallet.IdPallet;\r\n                vBeStockRecPallet.Fecha_Manufactura = BeINavBarraPallet.Fecha_Produccion;\r\n                vBeStockRecPallet.Serial = \"\";\r\n                vBeStockRecPallet.Anada = 0;\r\n                vBeStockRecPallet.Fec_agr = du.getFechaActual();\r\n                vBeStockRecPallet.User_agr = gl.IdOperador+\"\";\r\n                vBeStockRecPallet.Fec_mod = du.getFechaActual();\r\n                vBeStockRecPallet.User_mod = gl.IdOperador+\"\";\r\n                vBeStockRecPallet.Peso = 0.0;\r\n                vBeStockRecPallet.Temperatura = 0.0;\r\n                vBeStockRecPallet.Regularizado = false;\r\n                vBeStockRecPallet.IsNew = true;\r\n\r\n                vBeStockRecPallet.Lote = BeINavBarraPallet.Lote;\r\n                vBeStockRecPallet.ProductoEstado = new  clsBeProducto_estado();\r\n\r\n                if (IdEstadoSelect>0){\r\n\r\n                    vBeStockRecPallet.ProductoEstado.IdEstado = IdEstadoSelect;\r\n                    vBeStockRecPallet.IdProductoEstado = IdEstadoSelect;\r\n\r\n                    if (LProductoEstado.items.size()>0){\r\n\r\n                        if (stream(LProductoEstado.items).where(c->c.IdEstado ==IdEstadoSelect).select(c->c.Danado).first()){\r\n                            execws(20);\r\n                        }else{\r\n                            vBeStockRecPallet.IdUbicacion = gl.gBeRecepcion.IdUbicacionRecepcion;\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                Continua_Llenando_Stock_Pallet_Proveedor();\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Llena_Stock_Rec_Pallet_Proveedor\");\r\n        }\r\n\r\n    }\r\n\r\n    private void Continua_Llenando_Stock_Pallet_Proveedor(){\r\n\r\n        try{\r\n\r\n\r\n            vBeStockRecPallet.IdUbicacion_anterior = vBeStockRecPallet.IdUbicacion;\r\n\r\n            if (!txtUmbasRec.getText().toString().isEmpty()){\r\n                vBeStockRecPallet.IdUnidadMedida = BeProducto.UnidadMedida.IdUnidadMedida;\r\n            }\r\n\r\n            vBeStockRecPallet.IdRecepcionEnc = gl.gBeRecepcion.IdRecepcionEnc;\r\n            vBeStockRecPallet.ProductoValidado = true;\r\n            vBeStockRecPallet.No_linea = pLineaOC;\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Continua_Llenando_Stock_Pallet_Proveedor:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private double Get_Factor_Presentacion(int vIdPresentacion){\r\n        double Factor=0;\r\n\r\n        try{\r\n\r\n            if (BeProducto.Presentaciones!=null){\r\n                Factor = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion == vIdPresentacion).select(c->c.Factor).firstOrDefault(Factor);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(e.getClass()+\" \"+e.getMessage());\r\n        }\r\n        return Factor;\r\n\r\n    }\r\n\r\n    private int Get_Presentacion_A_Recibir(){\r\n\r\n        int rPresentacion=0;\r\n\r\n        try{\r\n\r\n            if(gl.Carga_Producto_x_Pallet){\r\n                rPresentacion = gBeStockRec.IdPresentacion;\r\n            }else {\r\n                rPresentacion = stream(gl.gpListDetalleOC.items).where(c -> c.IdProductoBodega == pIdProductoBodega && c.IdOrdenCompraDet == pIdOrdenCompraDet).select(c -> c.IdPresentacion).firstOrDefault(0);\r\n            }\r\n        }catch (Exception e){\r\n            mu.msgbox(e.getClass()+\" \"+e.getMessage());\r\n        }\r\n\r\n        return rPresentacion;\r\n\r\n    }\r\n\r\n    private void Valida_Lote(){\r\n\r\n        int dia,mes,ano;\r\n        String lCorrelativo;\r\n\r\n        try{\r\n\r\n            if (BeProducto.Control_lote && BeProducto.Genera_lote){\r\n\r\n                dia =calendario.get(Calendar.DAY_OF_MONTH);\r\n                mes = calendario.get(Calendar.MONTH)+1;\r\n                ano = calendario.get(Calendar.YEAR);\r\n\r\n                lCorrelativo = (ano+mes+dia+\"0001\");\r\n\r\n                txtLoteRec.setText(lCorrelativo);\r\n            }else if(!BeProducto.Control_lote){\r\n                txtLoteRec.setText(\"\");\r\n                txtLoteRec.setVisibility(View.GONE);\r\n                lblLote.setVisibility(View.GONE);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(e.getClass()+\"\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private String Get_Codigo_Barra(String valor){\r\n\r\n        String vCodBarra=\"\";\r\n\r\n        try{\r\n\r\n            if(BeProducto.Codigos_Barra!=null){\r\n\r\n                if (BeProducto.Codigos_Barra.items!=null){\r\n\r\n                    vCodBarra = stream(BeProducto.Codigos_Barra.items).where(c->c.Codigo_barra.equals(valor)).select(c->c.Codigo_barra).toString();\r\n\r\n                    if(vCodBarra.isEmpty()){\r\n\r\n                        if (BeProducto.Presentaciones!=null){\r\n\r\n                            vCodBarra = stream(BeProducto.Presentaciones.items).where(c->c.Codigo_barra.equals(valor)).select(c->c.Codigo_barra).toString();\r\n\r\n                            if(vCodBarra.isEmpty()){\r\n\r\n                                if(BeProducto.Codigo_barra.equals(valor)){\r\n                                    vCodBarra = valor;\r\n                                }else{\r\n                                    vCodBarra = BeProducto.Codigo_barra;\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Get_Codigo_Barra: \"+e.getMessage());\r\n        }\r\n\r\n        return vCodBarra;\r\n    }\r\n\r\n    private void Listar_Producto_Presentaciones(){\r\n\r\n        try{\r\n\r\n            if (BeProducto.Presentaciones!=null){\r\n\r\n                if (BeProducto.Presentaciones.items!=null){\r\n\r\n                    PresList.clear();\r\n\r\n                    for (int i = 0; i <BeProducto.Presentaciones.items.size(); i++) {\r\n                        PresList.add(BeProducto.Presentaciones.items.get(i).Nombre);\r\n                        if (Escaneo_Pallet){\r\n                            IdPreseSelect=BeProducto.Presentaciones.items.get(i).IdPresentacion;\r\n                        }\r\n                    }\r\n\r\n                    ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this,android.R.layout.simple_spinner_item, PresList);\r\n                    dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                    cmbPresRec.setAdapter(dataAdapter);\r\n\r\n                    if (PresList.size()>0) cmbPresRec.setSelection(0);\r\n\r\n                }\r\n\r\n            } else{\r\n                execws(3);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(e.getClass()+\" \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void Listar_Producto_Estado(){\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Listando estados de producto\");\r\n\r\n            EstadoList.clear();\r\n\r\n            for (int i = 0; i <LProductoEstado.items.size(); i++) {\r\n                EstadoList.add(LProductoEstado.items.get(i).Nombre);\r\n            }\r\n\r\n            ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this,android.R.layout.simple_spinner_item, EstadoList);\r\n            dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n            cmbEstadoProductoRec.setAdapter(dataAdapter);\r\n\r\n            if (Escaneo_Pallet){\r\n                IdEstadoSelect = gl.gIdProductoBuenEstadoPorDefecto;\r\n                List AuxEst = stream(LProductoEstado.items).select(c->c.IdEstado).toList();\r\n                int indx = AuxEst.indexOf(IdEstadoSelect);\r\n                if (EstadoList.size()>0) cmbEstadoProductoRec.setSelection(indx);\r\n            }else{\r\n                if (EstadoList.size()>0) cmbEstadoProductoRec.setSelection(0);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(e.getClass()+\" \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region GuardarRecepcion\r\n\r\n    private void Guardar_Recepcion_Nueva(){\r\n\r\n        try{\r\n\r\n            if (Mostrar_Propiedades_Parametros){\r\n                Muestra_Propiedades_Producto();\r\n            }else{\r\n                if (!Mostro_Propiedades){\r\n                    Llena_Stock();\r\n                    Mostro_Propiedades = true;\r\n                }\r\n            }\r\n\r\n            if (!Mostro_Propiedades){\r\n                Muestra_Propiedades_Producto();\r\n                return;\r\n            }\r\n\r\n            if (gl.TipoOpcion==2 && gl.gBeRecepcion.IsNew){\r\n\r\n               execws(12);\r\n\r\n            }else{\r\n                ContinuaGuardandoRecepcion();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Guardar_Recepcion: \"+ e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    public void BotonGuardarRecepcion(View view){\r\n\r\n        try{\r\n\r\n            if (gl.gBeRecepcion.IdTipoTransaccion.equals(\"PICH000\")){\r\n\r\n                if (Escaneo_Pallet){\r\n                    //Guardar_Recepcion_Pallet\r\n                }else{\r\n                    ValidaCampos();\r\n                }\r\n\r\n            }else{\r\n                ValidaCampos();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"BotonGuardarRecepcion:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Llena_Stock(){\r\n\r\n        try{\r\n\r\n            if (pListBeStockRec!=null){\r\n                if (pListBeStockRec.items!=null){\r\n                    List auxList= stream(pListBeStockRec.items).select(c->c.IdRecepcionDet).toList();\r\n                    pIndiceListaStock = auxList.indexOf(pIdRecepcionDet);\r\n                }\r\n            }\r\n\r\n            if (pIndiceListaStock==-1){\r\n\r\n                clsBeStock_rec BeStock_rec = new clsBeStock_rec();\r\n                pListBeStockRec.items = new ArrayList<clsBeStock_rec>();\r\n                BeStock_rec.IdRecepcionDet = pIdRecepcionDet;\r\n                BeStock_rec.IdRecepcionEnc = gl.gIdRecepcionEnc;\r\n                BeStock_rec.IdPropietarioBodega = gl.gBeRecepcion.PropietarioBodega.IdPropietarioBodega;\r\n                BeStock_rec.IdProductoBodega = BeProducto.IdProductoBodega;\r\n                BeStock_rec.IsNew = true;\r\n\r\n                if (IdPreseSelect>0){\r\n                    BeStock_rec.Presentacion = new clsBeProducto_Presentacion();\r\n                    BeStock_rec.Presentacion.IdPresentacion = IdPreseSelect;\r\n                }\r\n\r\n                pListBeStockRec.items.add(BeStock_rec);\r\n                pIndiceListaStock = pListBeStockRec.items.size()-1;\r\n\r\n            }\r\n\r\n            if (pIndiceListaStock>=0){\r\n\r\n                pListBeStockRec.items.get(pIndiceListaStock).IdPropietarioBodega = gl.gBeRecepcion.PropietarioBodega.IdPropietarioBodega;\r\n                pListBeStockRec.items.get(pIndiceListaStock).IdProductoBodega = BeProducto.IdProductoBodega;\r\n                if (pListBeStockRec.items.get(pIndiceListaStock).Lic_plate!=null){\r\n                    pListBeStockRec.items.get(pIndiceListaStock).Lic_plate = pListBeStockRec.items.get(pIndiceListaStock).Lic_plate;\r\n                }else{\r\n                    pListBeStockRec.items.get(pIndiceListaStock).Lic_plate = \"\";\r\n                }\r\n                pListBeStockRec.items.get(pIndiceListaStock).Fecha_Ingreso = String.valueOf(du.getFechaActual());\r\n                pListBeStockRec.items.get(pIndiceListaStock).IdRecepcionDet = pIdRecepcionDet;\r\n\r\n                pListBeStockRec.items.get(pIndiceListaStock).Fecha_Manufactura = \"1990-01-01\";\r\n\r\n                if (pListBeStockRec.items.get(pIndiceListaStock).Serial!=null){\r\n\r\n                }else{\r\n                    pListBeStockRec.items.get(pIndiceListaStock).Serial = \"\";\r\n                }\r\n                pListBeStockRec.items.get(pIndiceListaStock).Anada = 0;\r\n                pListBeStockRec.items.get(pIndiceListaStock).Fec_agr = String.valueOf(du.getFechaActual());\r\n                pListBeStockRec.items.get(pIndiceListaStock).User_agr = gl.IdOperador+\"\";\r\n                pListBeStockRec.items.get(pIndiceListaStock).Fec_mod = String.valueOf(du.getFechaActual());\r\n                pListBeStockRec.items.get(pIndiceListaStock).User_mod = gl.IdOperador+\"\";\r\n                pListBeStockRec.items.get(pIndiceListaStock).IsNew = true;\r\n\r\n                pListBeStockRec.items.get(pIndiceListaStock).Activo = true;\r\n                pListBeStockRec.items.get(pIndiceListaStock).IdRecepcionDet = pIdRecepcionDet;\r\n                pListBeStockRec.items.get(pIndiceListaStock).IdRecepcionEnc = gl.gIdRecepcionEnc;\r\n                pListBeStockRec.items.get(pIndiceListaStock).IdUnidadMedida = BeProducto.IdUnidadMedidaBasica;\r\n\r\n                if (IdPreseSelect>0){\r\n                    pListBeStockRec.items.get(pIndiceListaStock).IdPresentacion = IdPreseSelect;\r\n                }else{\r\n                    pListBeStockRec.items.get(pIndiceListaStock).IdPresentacion = 0;\r\n                }\r\n\r\n                if (pListBeStockRec.items.get(pIndiceListaStock).Peso>0){\r\n                    pListBeStockRec.items.get(pIndiceListaStock).Peso =pListBeStockRec.items.get(pIndiceListaStock).Peso ;\r\n                }else{\r\n                    pListBeStockRec.items.get(pIndiceListaStock).Peso = 0;\r\n                }\r\n\r\n                if (pListBeStockRec.items.get(pIndiceListaStock).Temperatura>0){\r\n                    pListBeStockRec.items.get(pIndiceListaStock).Temperatura = pListBeStockRec.items.get(pIndiceListaStock).Temperatura;\r\n                }else{\r\n                    pListBeStockRec.items.get(pIndiceListaStock).Temperatura = 0.0;\r\n                }\r\n\r\n                pListBeStockRec.items.get(pIndiceListaStock).Regularizado = false;\r\n                pListBeStockRec.items.get(pIndiceListaStock).Fecha_regularizacion = du.convierteFecha(\"01-01-1900\");\r\n\r\n                pListBeStockRec.items.get(pIndiceListaStock).Atributo_Variante_1 = \"\";\r\n                pListBeStockRec.items.get(pIndiceListaStock).No_linea = pLineaOC;\r\n                pListBeStockRec.items.get(pIndiceListaStock).Pallet_No_Estandar = false;\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Llena_Stock:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void ContinuaGuardandoRecepcion(){\r\n        int vIndice=-1;\r\n        String Resultado = \"\";\r\n        int CantRegSeries  = 0;\r\n        if (pListBeStockSeRec.items!=null){\r\n            CantRegSeries = pListBeStockSeRec.items.size();\r\n        }\r\n\r\n        progress.setMessage(\"Guardando recepción\");\r\n        progress.show();\r\n\r\n        int CantRegStock=0;\r\n        int CantRegPP=0;\r\n        int vCont = 0;\r\n        String msj  = \"\";\r\n        clsBeTrans_re_detList auxListTransRecDet = new clsBeTrans_re_detList();\r\n\r\n        try{\r\n\r\n            Valida_Cantidad_Recibida();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"ContinuaGuardandoRecepcion: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    public void valida_fecha_vencimiento(){\r\n\r\n        try{\r\n\r\n            if (BeProducto.Control_vencimiento){\r\n\r\n                if (cmbVenceRec.getText().toString().isEmpty()){\r\n                    mu.msgbox(\"Ingrese fecha de vencimiento para el producto \"+BeProducto.Codigo);\r\n                    return;\r\n                }else{\r\n\r\n                    BeTransReDet.Fecha_vence =du.convierteFecha(cmbVenceRec.getText().toString().trim());\r\n                    gl.gFechaVenceAnterior = cmbVenceRec.getText().toString().trim();\r\n\r\n                    String FechaVence=BeTransReDet.Fecha_vence;\r\n                    String FechaActual=du.getFechaActual();\r\n\r\n                    SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n                    Date strDate = sdf.parse(FechaVence);\r\n                    Date strDateNow = sdf.parse(FechaActual);\r\n\r\n                    if (strDate.getTime()  <=  strDateNow.getTime() ) {\r\n                        msgValidaFechaVence(\"La fecha de vencimiento del producto \"+BeProducto.Codigo+ \" es igual o menor a la fecha de hoy. ¿Desea ingresar un producto ya vencido?\");\r\n                    }else{\r\n                        DespuesDeValidarCantidad();\r\n                    }\r\n\r\n                    //#CKFK 20201007 quité esta validacion de fecha porque no era correcta\r\n                   /* if (FechaVence.equals(String.valueOf(du.getFechaActual()))){\r\n\r\n                    }*/\r\n\r\n                    //#CKFK 20200917 Puse esto en comentario porque la validación no se hacía correctamente\r\n                       /* if (!Valida_Fecha_Vencimiento()){\r\n                            return;\r\n                        }else{\r\n                            Continua_Llenando_Detalle_Recepcion_Nueva();\r\n                        }*/\r\n                }\r\n            }\r\n\r\n        }catch (Exception ex){\r\n\r\n        }\r\n    }\r\n\r\n    private void DespuesDeValidarCantidad(){\r\n        int vIndice=-1;\r\n        String Resultado = \"\";\r\n        int CantRegSeries  = 0;\r\n        if (pListBeStockSeRec.items!=null){\r\n            CantRegSeries = pListBeStockSeRec.items.size();\r\n        }\r\n\r\n        int CantRegStock=0;\r\n        int CantRegPP=0;\r\n        int vCont = 0;\r\n        String msj  = \"\";\r\n        clsBeTrans_re_detList auxListTransRecDet = new clsBeTrans_re_detList();\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Llenando detalle de recepción\");\r\n\r\n            switch (gl.TipoOpcion){\r\n\r\n                case 1:\r\n\r\n                    if (gl.mode==1){\r\n                        Llena_Detalle_Recepcion_Nueva();\r\n                    }else{\r\n                        Llena_Detalle_Recepcion_Existente();\r\n\r\n                    }\r\n                    break;\r\n\r\n                case 2:\r\n                    //Aquí código de recepción ciega.\r\n                    break;\r\n\r\n            }\r\n\r\n            int I=0;\r\n\r\n            auxListTransRecDet = new clsBeTrans_re_detList();\r\n            auxListTransRecDet.items = stream(pListTransRecDet.items).where(c->c.IdRecepcionDet == pIdRecepcionDet).toList();\r\n\r\n            //Esto es el equivalente a ReDim en .net\r\n            if (auxListTransRecDet.items!=null)\r\n            {\r\n                //#EJC20200325: Aquí da error en algunas ocasiones\r\n\r\n                try{\r\n\r\n                    gl.gBeRecepcion.Detalle.items = new ArrayList<>();\r\n\r\n                    for(clsBeTrans_re_det  det: auxListTransRecDet.items)\r\n                    {\r\n                        gl.gBeRecepcion.Detalle.items.add(det);\r\n                    }\r\n\r\n                }catch (Exception ex)\r\n                {\r\n                    mu.msgbox(\"#20200325_0338AM: When redim array -> \"+ex.getMessage());\r\n                }\r\n\r\n            }\r\n\r\n            if (gl.gBeRecepcion.DetalleParametros.items!=null){\r\n                System.arraycopy(gl.gBeRecepcion.DetalleParametros.items,0,plistBeReDetParametros.items,0,Math.min(gl.gBeRecepcion.DetalleParametros.items.size(), plistBeReDetParametros.items.size()));\r\n                gl.gBeRecepcion.DetalleParametros.items = plistBeReDetParametros.items;\r\n            }\r\n\r\n            I = 0;\r\n\r\n            if (plistBeReDetParametros.items!=null){\r\n                for  (clsBeTrans_re_det_parametros RD: plistBeReDetParametros.items){\r\n                    gl.gBeRecepcion.DetalleParametros.items.add(I,RD);\r\n                    I += 1;\r\n                }\r\n            }\r\n\r\n            if (pListBeStockRec.items.size()==0){\r\n                mu.msgbox(\"No se guardó el stock, no se puede continuar\");\r\n                return;\r\n            }\r\n\r\n            if (pListBeStockRec.items!=null){\r\n                CantRegStock = pListBeStockRec.items.size() - 1;\r\n            }\r\n\r\n            //Productos_Pallet\r\n        if(pListBeProductoPallet.items!=null){\r\n            CantRegPP = pListBeProductoPallet.items.size() - 1;\r\n        }else{\r\n            CantRegPP = 0;\r\n        }\r\n\r\n            if (gl.mode==1){\r\n                execws(16);\r\n            }else{\r\n                execws(17);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"DespuesDeValidarCantidad\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Imprime_Barra_Despues_Guardar(){\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Validando imprimir barra\");\r\n\r\n            if (gl.IdImpresora>0){\r\n\r\n                progress.cancel();\r\n\r\n                msgAskImprimir(\"Seleccione una opción para imprimir\");\r\n\r\n            }\r\n\r\n            switch (gl.TipoOpcion){\r\n\r\n                case 1:\r\n                    progress.setMessage(\"Actualizando valores OCDet\");\r\n                    beTransOCDet =new clsBeTrans_oc_det();\r\n                    beTransOCDet.IdOrdenCompraEnc = pIdOrdenCompraEnc;\r\n                    beTransOCDet.IdOrdenCompraDet = pIdOrdenCompraDet;\r\n                    execws(18);\r\n                    break;\r\n\r\n                case 2:\r\n                    progress.cancel();\r\n                    break;\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Imprime_Barra_Despues_Guardar: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void msgAskImprimir(String msg) {\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(\"¿\" + msg + \"?\");\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Código de Producto\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    Imprimir_Barra();\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"Licencia de Producto\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    Imprimir_Licencia();\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private void Imprimir_Licencia(){\r\n        try{\r\n\r\n            //CM_20210112: Impresión de barras.\r\n            BluetoothConnection printerIns= new BluetoothConnection(gl.MacPrinter);\r\n            printerIns.open();\r\n\r\n            if (printerIns.isConnected()){\r\n                ZebraPrinter zPrinterIns = ZebraPrinterFactory.getInstance(printerIns);\r\n                //zPrinterIns.sendCommand(\"! U1 setvar \\\"device.languages\\\" \\\"zpl\\\"\\r\\n\");\r\n\r\n\r\n                String zpl = String.format(\"^XA \\n\" +\r\n                                \"^MMT \\n\" +\r\n                                \"^PW700 \\n\" +\r\n                                \"^LL0406 \\n\" +\r\n                                \"^LS0 \\n\" +\r\n                                \"^FT171,61^A0I,25,14^FH^FD%1$s^FS \\n\" +\r\n                                \"^FT550,61^A0I,25,14^FH^FD%2$s^FS \\n\" +\r\n                                \"^FT670,306^A0I,25,14^FH^FD%3$s^FS \\n\" +\r\n                                \"^FT292,61^A0I,25,24^FH^FDBodega:^FS \\n\" +\r\n                                \"^FT670,61^A0I,25,24^FH^FDEmpresa:^FS \\n\" +\r\n                                \"^FT670,367^A0I,25,24^FH^FDTOMIMS, WMS.  Product Barcode^FS \\n\" +\r\n                                \"^FO2,340^GB670,0,14^FS \\n\" +\r\n                                \"^BY3,3,160^FT670,131^BCI,,Y,N \\n\" +\r\n                                \"^FD%4$s^FS \\n\" +\r\n                                \"^PQ1,0,1,Y \" +\r\n                                \"^XZ\",gl.CodigoBodega, gl.gNomEmpresa,\r\n                        BeProducto.Codigo+\" - \"+BeProducto.Nombre,\r\n                        \"$\"+pNumeroLP);\r\n\r\n                zPrinterIns.sendCommand(zpl);\r\n\r\n\r\n                Thread.sleep(500);\r\n\r\n                // Close the connection to release resources.\r\n                printerIns.close();\r\n\r\n            }else{\r\n                mu.msgbox(\"No se pudo obtener conexión con la impresora\");\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Imprimir_barra: \"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Imprimir_Barra(){\r\n        try{\r\n\r\n                            //CM_20210112: Impresión de barras.\r\n                BluetoothConnection printerIns= new BluetoothConnection(gl.MacPrinter);\r\n                printerIns.open();\r\n\r\n                if (printerIns.isConnected()){\r\n                    ZebraPrinter zPrinterIns = ZebraPrinterFactory.getInstance(printerIns);\r\n                    //zPrinterIns.sendCommand(\"! U1 setvar \\\"device.languages\\\" \\\"zpl\\\"\\r\\n\");\r\n\r\n\r\n                    String zpl = String.format(\"^XA \\n\" +\r\n                                    \"^MMT \\n\" +\r\n                                    \"^PW700 \\n\" +\r\n                                    \"^LL0406 \\n\" +\r\n                                    \"^LS0 \\n\" +\r\n                                    \"^FT171,61^A0I,25,14^FH^FD%1$s^FS \\n\" +\r\n                                    \"^FT550,61^A0I,25,14^FH^FD%2$s^FS \\n\" +\r\n                                    \"^FT670,306^A0I,25,14^FH^FD%3$s^FS \\n\" +\r\n                                    \"^FT292,61^A0I,25,24^FH^FDBodega:^FS \\n\" +\r\n                                    \"^FT670,61^A0I,25,24^FH^FDEmpresa:^FS \\n\" +\r\n                                    \"^FT670,367^A0I,25,24^FH^FDTOMIMS, WMS.  Product Barcode^FS \\n\" +\r\n                                    \"^FO2,340^GB670,0,14^FS \\n\" +\r\n                                    \"^BY3,3,160^FT670,131^BCI,,Y,N \\n\" +\r\n                                    \"^FD%4$s^FS \\n\" +\r\n                                    \"^PQ1,0,1,Y \" +\r\n                                    \"^XZ\",gl.CodigoBodega, gl.gNomEmpresa,\r\n                            BeProducto.Codigo+\" - \"+BeProducto.Nombre,\r\n                            (pNumeroLP!=\"\")?\"$\"+pNumeroLP:BeProducto.Codigo);\r\n\r\n                    zPrinterIns.sendCommand(zpl);\r\n\r\n\r\n                    Thread.sleep(500);\r\n\r\n                    // Close the connection to release resources.\r\n                    printerIns.close();\r\n\r\n                }else{\r\n                    mu.msgbox(\"No se pudo obtener conexión con la impresora\");\r\n                }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Imprimir_barra: \"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    double Factor=0;\r\n    double TotalLinea=0;\r\n    double vCant =0;\r\n\r\n    private void Llena_Detalle_Recepcion_Nueva(){\r\n        Factor=0;\r\n        TotalLinea=0;\r\n        vCant =0;\r\n\r\n        try{\r\n\r\n\r\n            if (BeProducto!=null){\r\n                BeTransReDet = new clsBeTrans_re_det();\r\n\r\n                BeTransReDet.IdPropietarioBodega = gl.gBeRecepcion.PropietarioBodega.IdPropietarioBodega;\r\n                BeTransReDet.Producto = new clsBeProducto();\r\n                BeTransReDet.Producto.IdProducto = BeProducto.IdProducto;\r\n                BeTransReDet.Producto.Codigo = BeProducto.Codigo;\r\n                BeTransReDet.IdProductoBodega = BeProducto.IdProductoBodega;\r\n                BeTransReDet.Nombre_producto = BeProducto.Nombre;\r\n                BeTransReDet.IdRecepcionEnc = gl.gBeRecepcion.IdRecepcionEnc;\r\n                BeTransReDet.IdRecepcionDet = pIdRecepcionDet;\r\n\r\n                BeTransReDet.Presentacion = new clsBeProducto_Presentacion();\r\n\r\n                if (IdPreseSelect>0){\r\n\r\n                    BeTransReDet.Presentacion.IdPresentacion = IdPreseSelect;\r\n                    BeTransReDet.Presentacion.Factor = BeProducto.Presentacion.Factor;\r\n                    BeTransReDet.IdPresentacion = IdPreseSelect;\r\n\r\n                    clsBeProducto_Presentacion bePresentacion = new clsBeProducto_Presentacion();\r\n\r\n                    bePresentacion = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==IdPreseSelect).first();\r\n\r\n\r\n                    BeTransReDet.Presentacion = bePresentacion;\r\n\r\n                    if(!bePresentacion.EsPallet){\r\n                        Factor = bePresentacion.Factor;\r\n                    }else{\r\n                        Factor = bePresentacion.Factor * bePresentacion.CamasPorTarima * bePresentacion.CajasPorCama;\r\n                    }\r\n\r\n                }\r\n\r\n                BeTransReDet.No_Linea = pLineaOC;\r\n\r\n                if (txtUmbasRec.getText().toString().isEmpty()){\r\n                    mu.msgbox(\"No existe Unidad de Medida en Producto \"+BeProducto.Codigo);\r\n                    return;\r\n                }else{\r\n                    BeTransReDet.UnidadMedida = new clsBeUnidad_medida();\r\n                    BeTransReDet.UnidadMedida.IdUnidadMedida = BeProducto.UnidadMedida.IdUnidadMedida;\r\n                    BeTransReDet.IdUnidadMedida = BeProducto.UnidadMedida.IdUnidadMedida;\r\n                }\r\n\r\n                BeTransReDet.ProductoEstado = new clsBeProducto_estado();\r\n                BeTransReDet.ProductoEstado.IdEstado = IdEstadoSelect;\r\n\r\n                BeTransReDet.IdProductoEstado = IdEstadoSelect;\r\n\r\n                BeTransReDet.IsNew = true;\r\n\r\n                BeTransReDet.User_agr = gl.IdOperador+\"\";\r\n                BeTransReDet.Fec_agr = String.valueOf(du.getFechaActual());\r\n\r\n                BeTransReDet.MotivoDevolucion = new clsBeMotivo_devolucion();\r\n\r\n                //VALIDACIÓN DE CANTIDADES CON REGLA SEGÚN PROPIETARIO\r\n\r\n               if (txtCantidadRec.getText().toString().isEmpty()){\r\n                   mu.msgbox(\"Ingrese la cantidad a Recibir\");\r\n                   txtCantidadRec.requestFocus();\r\n                   return;\r\n               }else if (Double.parseDouble(txtCantidadRec.getText().toString())==0){\r\n                   mu.msgbox(\"La cantidad a Recibir debe ser mayor a 0\");\r\n                   txtCantidadRec.requestFocus();\r\n                   return;\r\n               }else{\r\n                   BeTransReDet.cantidad_recibida = Double.parseDouble(txtCantidadRec.getText().toString());\r\n               }\r\n\r\n               if (txtPesoUnitario.getText().toString().isEmpty()){\r\n                   BeTransReDet.peso_unitario = 0;\r\n               }else{\r\n                   BeTransReDet.peso_unitario = Double.parseDouble(txtPesoUnitario.getText().toString());\r\n               }\r\n\r\n                BeTransReDet.Nombre_producto = BeProducto.Nombre;\r\n\r\n                if (IdPreseSelect>0){\r\n                    BeTransReDet.Nombre_presentacion = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==IdPreseSelect).select(c->c.Nombre).first();\r\n                }else{\r\n                    BeTransReDet.Nombre_presentacion = \"\";\r\n                }\r\n                BeTransReDet.Nombre_unidad_medida = BeProducto.UnidadMedida.Nombre;\r\n                BeTransReDet.Codigo_Producto = BeProducto.Codigo;\r\n\r\n                //#CKFK 20201228 Agregué la funcionalidad de poder determinar si el pallet es o no estandar\r\n                BeTransReDet.Pallet_No_Estandar=(chkPalletNoEstandar.isChecked()?true:false);\r\n\r\n                BeTransReDet.ProductoEstado = new clsBeProducto_estado();\r\n\r\n                if (IdEstadoSelect>0) {\r\n                    BeTransReDet.ProductoEstado.IdEstado = IdEstadoSelect;\r\n                }else {\r\n                    mu.msgbox(\"No existe Estado en Producto \"+BeProducto.Codigo);\r\n                    return;\r\n                }\r\n\r\n                if (BeProducto.Control_lote){\r\n\r\n                    if (txtLoteRec.getText().toString().isEmpty()){\r\n                         mu.msgbox(\"Debe ingresar el lote del producto \"+BeProducto.Codigo);\r\n                         return;\r\n                    }else{\r\n                        BeTransReDet.Lote = txtLoteRec.getText().toString();\r\n                        gl.gLoteAnterior = txtLoteRec.getText().toString();\r\n                    }\r\n\r\n                }else{\r\n                    if (!txtLoteRec.getText().toString().isEmpty()){\r\n                        BeTransReDet.Lote = txtLoteRec.getText().toString();\r\n                        gl.gLoteAnterior = txtLoteRec.getText().toString();\r\n                    }\r\n\r\n                }\r\n\r\n                /*if (BeProducto.Control_vencimiento){\r\n\r\n                    if (cmbVenceRec.getText().toString().isEmpty()){\r\n                        mu.msgbox(\"Ingrese fecha de vencimiento para el producto \"+BeProducto.Codigo);\r\n                        return;\r\n                    }else{\r\n                        BeTransReDet.Fecha_vence =du.convierteFecha(cmbVenceRec.getText().toString().trim());\r\n                        gl.gFechaVenceAnterior = cmbVenceRec.getText().toString().trim();\r\n\r\n                        String FechaVence=BeTransReDet.Fecha_vence;\r\n\r\n                        if (FechaVence.equals(String.valueOf(du.getFechaActual()))){\r\n                            msgValidaFechaVence(\"La fecha de vencimiento del producto \"+BeProducto.Codigo+ \" es igual o menor a la fecha de hoy. ¿Desea ingresar un producto ya vencido?\");\r\n                        }else{\r\n                            Continua_Llenando_Detalle_Recepcion_Nueva();\r\n                        }\r\n\r\n                        //#CKFK 20200917 Puse esto en comentario porque la validación no se hacía correctamente\r\n                        //if (!Valida_Fecha_Vencimiento()){\r\n                        //    return;\r\n                        //}else{\r\n                        //    Continua_Llenando_Detalle_Recepcion_Nueva();\r\n                        //}\r\n                    }\r\n                }else{\r\n                    BeTransReDet.Fecha_vence = \"\";\r\n                    Continua_Llenando_Detalle_Recepcion_Nueva();\r\n                }*/\r\n\r\n                if (!BeProducto.Control_vencimiento){\r\n                    BeTransReDet.Fecha_vence = \"\";\r\n                }\r\n\r\n                Continua_Llenando_Detalle_Recepcion_Nueva();\r\n\r\n            }\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Llena_Detalle_Recepcion_Nueva:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Llena_Detalle_Recepcion_Existente(){\r\n        Factor=0;\r\n        TotalLinea=0;\r\n        vCant =0;\r\n\r\n        try{\r\n\r\n            if (BeProducto!=null){\r\n                BeTransReDet = new clsBeTrans_re_det();\r\n                BeTransReDet = pListTransRecDet.items.get(0);\r\n\r\n                BeTransReDet.IdPropietarioBodega = gl.gBeRecepcion.PropietarioBodega.IdPropietarioBodega;\r\n                BeTransReDet.Producto = new clsBeProducto();\r\n                BeTransReDet.Producto.IdProducto = BeProducto.IdProducto;\r\n                BeTransReDet.Producto.Codigo = BeProducto.Codigo;\r\n                BeTransReDet.IdProductoBodega = BeProducto.IdProductoBodega;\r\n                BeTransReDet.Nombre_producto = BeProducto.Nombre;\r\n                BeTransReDet.IdRecepcionEnc = gl.gBeRecepcion.IdRecepcionEnc;\r\n                BeTransReDet.IdRecepcionDet = pIdRecepcionDet;\r\n\r\n                BeTransReDet.Presentacion = new clsBeProducto_Presentacion();\r\n\r\n                if (IdPreseSelect>0){\r\n\r\n                    BeTransReDet.Presentacion.IdPresentacion = IdPreseSelect;\r\n                    BeTransReDet.Presentacion.Factor = BeProducto.Presentacion.Factor;\r\n                    BeTransReDet.IdPresentacion = IdPreseSelect;\r\n\r\n                    clsBeProducto_Presentacion bePresentacion = new clsBeProducto_Presentacion();\r\n\r\n                    bePresentacion = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==IdPreseSelect).first();\r\n\r\n                    if(!bePresentacion.EsPallet){\r\n                        Factor = bePresentacion.Factor;\r\n                    }else{\r\n                        Factor = bePresentacion.Factor * bePresentacion.CamasPorTarima * bePresentacion.CajasPorCama;\r\n                    }\r\n\r\n                }\r\n\r\n                BeTransReDet.No_Linea = pLineaOC;\r\n\r\n                if (txtUmbasRec.getText().toString().isEmpty()){\r\n                    mu.msgbox(\"No existe Unidad de Medida en Producto \"+BeProducto.Codigo);\r\n                    return;\r\n                }else{\r\n                    BeTransReDet.UnidadMedida = new clsBeUnidad_medida();\r\n                    BeTransReDet.UnidadMedida.IdUnidadMedida = BeProducto.UnidadMedida.IdUnidadMedida;\r\n                    BeTransReDet.IdUnidadMedida = BeProducto.UnidadMedida.IdUnidadMedida;\r\n                }\r\n\r\n                BeTransReDet.ProductoEstado = new clsBeProducto_estado();\r\n                BeTransReDet.ProductoEstado.IdEstado = IdEstadoSelect;\r\n\r\n                BeTransReDet.IdProductoEstado = IdEstadoSelect;\r\n\r\n                BeTransReDet.IsNew = true;\r\n                BeTransReDet.User_agr = gl.IdOperador+\"\";\r\n                BeTransReDet.Fec_agr = String.valueOf(du.getFechaActual());\r\n\r\n                //#CKFK 20201228 Agregué la funcionalidad de poder determinar si el pallet es o no estandar\r\n                BeTransReDet.Pallet_No_Estandar=(chkPalletNoEstandar.isChecked()?true:false);\r\n\r\n                BeTransReDet.MotivoDevolucion = new clsBeMotivo_devolucion();\r\n\r\n                //VALIDACIÓN DE CANTIDADES CON REGLA SEGÚN PROPIETARIO\r\n\r\n                if (txtCantidadRec.getText().toString().isEmpty()){\r\n                    mu.msgbox(\"Ingrese la cantidad a Recibir\");\r\n                    txtCantidadRec.requestFocus();\r\n                    return;\r\n                }else if (Double.parseDouble(txtCantidadRec.getText().toString())==0){\r\n                    mu.msgbox(\"La cantidad a Recibir debe ser mayor a 0\");\r\n                    txtCantidadRec.requestFocus();\r\n                    return;\r\n                }else{\r\n                    BeTransReDet.cantidad_recibida = Double.parseDouble(txtCantidadRec.getText().toString());\r\n                }\r\n\r\n                if (txtPesoUnitario.getText().toString().isEmpty()){\r\n                    BeTransReDet.peso_unitario = 0;\r\n                }else{\r\n                    BeTransReDet.peso_unitario = Double.parseDouble(txtPesoUnitario.getText().toString());\r\n                }\r\n\r\n                BeTransReDet.Nombre_producto = BeProducto.Nombre;\r\n\r\n                if (IdPreseSelect>0){\r\n                    BeTransReDet.Nombre_presentacion = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion==IdPreseSelect).select(c->c.Nombre).first();\r\n                }else{\r\n                    BeTransReDet.Nombre_presentacion = \"\";\r\n                }\r\n                BeTransReDet.Nombre_unidad_medida = BeProducto.UnidadMedida.Nombre;\r\n                BeTransReDet.Codigo_Producto = BeProducto.Codigo;\r\n\r\n                BeTransReDet.ProductoEstado = new clsBeProducto_estado();\r\n\r\n                if (IdEstadoSelect>0) {\r\n                    BeTransReDet.ProductoEstado.IdEstado = IdEstadoSelect;\r\n                }else {\r\n                    mu.msgbox(\"No existe Estado en Producto \"+BeProducto.Codigo);\r\n                    return;\r\n                }\r\n\r\n                if (BeProducto.Control_lote){\r\n\r\n                    if (txtLoteRec.getText().toString().isEmpty()){\r\n                        mu.msgbox(\"Debe ingresar el lote del producto \"+BeProducto.Codigo);\r\n                        return;\r\n                    }else{\r\n                        BeTransReDet.Lote = txtLoteRec.getText().toString();\r\n                        gl.gLoteAnterior = txtLoteRec.getText().toString();\r\n                    }\r\n\r\n                }else{\r\n                    if (!txtLoteRec.getText().toString().isEmpty()){\r\n                        BeTransReDet.Lote = txtLoteRec.getText().toString();\r\n                        gl.gLoteAnterior = txtLoteRec.getText().toString();\r\n                    }\r\n\r\n                }\r\n\r\n                if (!BeProducto.Control_vencimiento){\r\n                    BeTransReDet.Fecha_vence = \"\";\r\n                }\r\n\r\n                Continua_Llenando_Detalle_Recepcion_Nueva();\r\n\r\n                //#CKFK 20200917 Lo puse en comentario porque hice la validación de la fecha de vencimiento antes de comenzar a Guardar\r\n                /*if (BeProducto.Control_vencimiento){\r\n\r\n                    if (cmbVenceRec.getText().toString().isEmpty()){\r\n                        mu.msgbox(\"Ingrese fecha de vencimiento para el producto \"+BeProducto.Codigo);\r\n                        return;\r\n                    }else{\r\n                        BeTransReDet.Fecha_vence =du.convierteFecha(cmbVenceRec.getText().toString().trim());\r\n                        gl.gFechaVenceAnterior = cmbVenceRec.getText().toString().trim();\r\n                        if (!Valida_Fecha_Vencimiento()){\r\n                            return;\r\n                        }else{\r\n                            Continua_Llenando_Detalle_Recepcion_Nueva();\r\n                        }\r\n                    }\r\n\r\n                }else{\r\n                    BeTransReDet.Fecha_vence = \"\";\r\n                    Continua_Llenando_Detalle_Recepcion_Nueva();\r\n                }*/\r\n\r\n            }\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Llena_Detalle_Recepcion_Nueva:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Continua_Llenando_Detalle_Recepcion_Nueva(){\r\n\r\n        try{\r\n\r\n            BeTransReDet.Fecha_ingreso = String.valueOf(du.getFechaActual());\r\n\r\n            if (!txtPeso.getText().toString().isEmpty()){\r\n                BeTransReDet.Peso = Double.parseDouble(txtPeso.getText().toString());\r\n            }else{\r\n                BeTransReDet.Peso= 0;\r\n            }\r\n            BeTransReDet.Peso_Estadistico = 0;\r\n            BeTransReDet.Peso_Minimo = 0;\r\n            BeTransReDet.Peso_Maximo = 0;\r\n\r\n            BeTransReDet.Observacion = \"\";\r\n            BeTransReDet.Aniada = 0;\r\n\r\n            Valida_Costo();\r\n\r\n            if (!txtCostoReal.getText().toString().isEmpty()) {\r\n                BeTransReDet.Costo = Double.parseDouble(txtCostoReal.getText().toString());\r\n                BeTransReDet.Costo_Oc = Double.parseDouble(txtCostoOC.getText().toString());\r\n                BeTransReDet.Costo_Estadistico = 0;\r\n            }else{\r\n                BeTransReDet.Costo = 0;\r\n                BeTransReDet.Costo_Oc =0;\r\n                BeTransReDet.Costo_Estadistico = 0;\r\n            }\r\n\r\n            BeTransReDet.IdOperadorBodega = gl.IdOperador;\r\n            BeTransReDet.Nombre_producto_estado = stream(LProductoEstado.items).where(c->c.IdEstado==IdEstadoSelect).select(c->c.Nombre).first();\r\n\r\n            if (!txtCantidadRec.getText().toString().isEmpty()){\r\n                vCant =Double.parseDouble(txtCantidadRec.getText().toString());\r\n            }\r\n\r\n            if (gl.gBeRecepcion.Muestra_precio){\r\n                TotalLinea = Double.parseDouble(txtCostoReal.getText().toString()) * vCant;\r\n            }else{\r\n                TotalLinea = vCant;\r\n            }\r\n            listaStockPalletsNuevos = new clsBeStock_recList();\r\n            listaProdPalletsNuevos = new clsBeProducto_palletList();\r\n\r\n            if (pListBeStockRec.items!=null){\r\n\r\n                listaStock = new clsBeStock_recList();\r\n                listaProdPallets = new clsBeProducto_palletList();\r\n\r\n                if (BeTransReDet.Presentacion.IdPresentacion!= 0){\r\n\r\n                    listaStock.items = stream(pListBeStockRec.items).where(c->c.IdProductoBodega == BeTransReDet.IdProductoBodega  &&\r\n                            c.IdRecepcionDet == pIdRecepcionDet && c.Presentacion.IdPresentacion == BeTransReDet.Presentacion.IdPresentacion).toList();\r\n\r\n                    if (pListBeProductoPallet.items!=null){\r\n\r\n                        listaProdPallets.items = stream(pListBeProductoPallet.items).where(p->p.IdRecepcionDet == BeTransReDet.IdRecepcionDet &&\r\n                                p.IdProductoBodega == BeTransReDet.IdProductoBodega &&\r\n                                p.IdPresentacion == BeTransReDet.Presentacion.IdPresentacion).toList();\r\n\r\n                        for (clsBeProducto_pallet BePP : listaProdPallets.items){\r\n\r\n                            BePP.Lote = txtLoteRec.getText().toString();\r\n                            BePP.User_agr = gl.OperadorBodega.IdOperadorBodega+\"\";\r\n                            BePP.User_mod = gl.OperadorBodega.IdOperadorBodega+\"\";\r\n                            BePP.Cantidad = (1 * Factor);\r\n\r\n                            if (BeProducto.Control_vencimiento){\r\n                                BePP.Fecha_Vence = du.convierteFecha(cmbVenceRec.getText().toString().trim());\r\n                            }else {\r\n                                BePP.Fecha_Vence = \"\";\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }else{\r\n\r\n                    listaStock.items =stream(pListBeStockRec.items).where(c->c.IdProductoBodega == BeTransReDet.IdProductoBodega  &&\r\n                            c.IdRecepcionDet == pIdRecepcionDet\r\n                            && c.IdUnidadMedida == BeTransReDet.IdUnidadMedida).toList();\r\n                }\r\n\r\n                if (stream(listaStock.items).count()==0){\r\n                    mu.msgbox(\"¡ERROR!, reporte al equipo de desarrollo\");\r\n                }\r\n\r\n                for( clsBeStock_rec BeStockRec : listaStock.items){\r\n\r\n                    BeStockRec.IsNew = true;\r\n\r\n                    BeStockRec.ProductoEstado = new  clsBeProducto_estado();\r\n\r\n                    if (IdEstadoSelect>0){\r\n\r\n                        BeStockRec.ProductoEstado.IdEstado = IdEstadoSelect;\r\n                        BeStockRec.IdProductoEstado = IdEstadoSelect;\r\n\r\n                        if (LProductoEstado.items.size()> 0){\r\n\r\n                            clsBeProducto_estado BeEstado = new clsBeProducto_estado();\r\n\r\n                            BeEstado = stream(LProductoEstado.items).where(c->c.IdEstado ==IdEstadoSelect).first();\r\n\r\n                            if (BeEstado.Danado){\r\n                                BeStockRecNuevaRec = BeStockRec;\r\n                                vCantNuevaRec = vCant;\r\n                                vFactorNuevaRec = Factor;\r\n                                execws(13); //m_proxy.Get_IdUbicMerma_By_IdBodega(gIdBodega)\r\n                            }else{\r\n                                BeStockRec.IdUbicacion = gl.gBeRecepcion.IdUbicacionRecepcion;//CInt(txtIdUbicacion.Text.Trim)\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    Continua_Guardando_Rec_Nueva(BeStockRec,Factor,vCant);\r\n                    if (gl.mode==1){\r\n                        pListTransRecDet.items.add(BeTransReDet);\r\n                    }\r\n                }\r\n\r\n                if (listaStockPalletsNuevos!=null){\r\n                    if (listaStockPalletsNuevos.items!=null){\r\n                        for (clsBeStock_rec PN :listaStockPalletsNuevos.items){\r\n                            pListBeStockRec.items.add(PN);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (listaStockPalletsNuevos!=null){\r\n                    if (listaStockPalletsNuevos.items!=null){\r\n                        for  (clsBeProducto_pallet PP :listaProdPalletsNuevos.items){\r\n                            pListBeProductoPallet.items.add(PP);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            BeTransReDet.MotivoDevolucion = new  clsBeMotivo_devolucion();\r\n\r\n            BeTransReDet.Atributo_Variante_1 = \"\";\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Continua:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Continua_Guardando_Rec_Nueva(clsBeStock_rec BeStockRec,double Factor,double vCant){\r\n\r\n        try{\r\n\r\n\r\n            BeStockRec.Presentacion = new clsBeProducto_Presentacion();\r\n\r\n            if (IdPreseSelect>0){\r\n\r\n                for ( clsBeProducto_Presentacion pres:BeProducto.Presentaciones.items){\r\n                    if (pres.IdPresentacion==IdPreseSelect){\r\n                        BeStockRec.Presentacion = pres;\r\n                    }\r\n                }\r\n\r\n                BeStockRec.IdPresentacion = IdPreseSelect;\r\n\r\n            }\r\n\r\n            if (!txtUmbasRec.getText().toString().isEmpty()){\r\n                BeStockRec.IdUnidadMedida = BeProducto.UnidadMedida.IdUnidadMedida;\r\n            }\r\n\r\n            BeStockRec.IdRecepcionEnc = gl.gBeRecepcion.IdRecepcionEnc;\r\n\r\n            if (!txtLoteRec.getText().toString().isEmpty()){\r\n                BeStockRec.Lote = txtLoteRec.getText().toString();\r\n            }\r\n\r\n            if (IdPreseSelect>0){\r\n\r\n                if (!(BeStockRec.Presentacion.EsPallet||chkPaletizar.isChecked()) && BeStockRec.Lic_plate.isEmpty()){\r\n                    Factor = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion == IdPreseSelect).select(c->c.Factor).first();\r\n                    BeStockRec.Cantidad += vCant * Factor;\r\n                }else if(chkPaletizar.isChecked()){\r\n                    BeStockRec.Cantidad += vCant * Factor;\r\n                }else if (BeStockRec.Presentacion.EsPallet&&BeStockRec.Presentacion.Genera_lp_auto){\r\n                    BeStockRec.Cantidad = 1 * Factor;\r\n                }else{\r\n                    BeStockRec.Cantidad = BeStockRec.Cantidad;\r\n                }\r\n\r\n            }else{\r\n                BeStockRec.Cantidad = vCant;\r\n                //#EJC20201217:Si es UMBA y el LicPlate no es vacío asignar.\r\n                if (!txtBarra.getText().toString().isEmpty()){\r\n                    BeStockRec.Lic_plate= txtBarra.getText().toString();\r\n                }\r\n            }\r\n\r\n            if (BeProducto.Control_vencimiento){\r\n                BeStockRec.Fecha_vence = du.convierteFecha(cmbVenceRec.getText().toString().trim());\r\n            }else{\r\n                BeStockRec.Fecha_vence = \"\";\r\n            }\r\n\r\n            BeStockRec.ProductoValidado = true;\r\n            BeStockRec.No_linea = pLineaOC;\r\n\r\n            //#CKFK 20201228 Agregué la funcionalidad de poder determinar si el pallet es o no estandar\r\n            BeStockRec.Pallet_No_Estandar = (chkPalletNoEstandar.isChecked()?true:false);\r\n\r\n            if (Escaneo_Pallet){\r\n                BeStockRec.Lic_plate = BeINavBarraPallet.Codigo_barra;\r\n                BeStockRec.Uds_lic_plate = BeINavBarraPallet.Cantidad_UMP;\r\n                BeStockRec.No_bulto = 0;\r\n                BeTransReDet.Lic_plate = BeINavBarraPallet.Codigo_barra;\r\n            }else{\r\n                if (BeTransReDet.Lic_plate!=null){\r\n                    if (BeStockRec!=null){\r\n                        BeTransReDet.Lic_plate = BeStockRec.Lic_plate;\r\n                    }else{\r\n                        BeTransReDet.Lic_plate = \"\";\r\n                    }\r\n                }else{\r\n                    BeTransReDet.Lic_plate = \"\";\r\n                }\r\n            }\r\n\r\n            if (BeStockRec.Presentacion.IdPresentacion > 0){\r\n\r\n                if (BeStockRec.Presentacion.EsPallet){\r\n\r\n                    if (Double.parseDouble(txtCantidadRec.getText().toString().replace(\",\",\"\"))==1){\r\n                        BeStockRec.Cantidad = Double.parseDouble(txtCantidadRec.getText().toString().replace(\",\",\"\"))*Factor;\r\n                    }else{\r\n\r\n                        if (BeStockRec.Presentacion.Genera_lp_auto){\r\n\r\n                            int vCantidadPallets =Integer.parseInt(txtCantidadRec.getText().toString().replace(\",\",\"\"));\r\n                            int vIndiceLista=0;\r\n                           vBeStockRec = new clsBeStock_rec();\r\n                           BeProdPallet  = new clsBeProducto_pallet();\r\n\r\n                            for (int x = 0; x <vCantidadPallets; x++) {\r\n\r\n                                vIndiceLista = listaStockPalletsNuevos.items.size()-1;\r\n\r\n                                if (x==1){\r\n                                    vBeStockRec = BeStockRec;\r\n                                    vBeStockRec.Cantidad = (1 * Factor);\r\n                                }else{\r\n                                    vBeStockRec = new  clsBeStock_rec();\r\n                                    vBeStockRec = listaStockPalletsNuevos.items.get(vIndiceLista);\r\n                                }\r\n\r\n                                vBeStockRec.Cantidad = (1 * Factor);\r\n\r\n                                if (!vBeStockRec.Lic_plate.isEmpty()){\r\n                                    Pallet_Correcto();\r\n                                }else{\r\n                                    execws(15);\r\n                                }\r\n\r\n                            }\r\n\r\n                        }else{\r\n                            mu.msgbox(\"La cantidad de pallets es > 1 y genera_lp_auto es Falso, debe recibir los pallets de forma unitaria (Cantidad = 1)\");\r\n                            return;\r\n                        }\r\n\r\n                    }\r\n\r\n                }else{\r\n                    BeStockRec.Cantidad = Double.parseDouble(txtCantidadRec.getText().toString().replace(\",\",\"\"))*Factor;\r\n\r\n                    if (BeStockRec.Presentacion.Imprime_barra){\r\n\r\n                        BeProdPallet = new clsBeProducto_pallet();\r\n\r\n                        BeProdPallet.IdPropietarioBodega = BeTransReDet.IdPropietarioBodega;\r\n                        BeProdPallet.IdProductoBodega = BeTransReDet.IdProductoBodega;\r\n                        BeProdPallet.IdPresentacion = BeStockRec.Presentacion.IdPresentacion;\r\n                        BeProdPallet.IdRecepcionDet = BeTransReDet.IdRecepcionDet;\r\n                        BeProdPallet.IdOperadorBodega = gl.OperadorBodega.IdOperadorBodega;\r\n                        BeProdPallet.Impreso = false;\r\n                        BeProdPallet.IdImpresora = 1;\r\n                        BeProdPallet.Activo = true;\r\n                        BeProdPallet.Fecha_ingreso = String.valueOf(du.getFechaActual());\r\n                        BeProdPallet.Codigo_Barra = BeStockRec.Lic_plate;\r\n                        BeProdPallet.Codigo_Producto = BeProducto.Codigo;\r\n                        BeProdPallet.Reimpresiones = 0;\r\n                        BeProdPallet.Cantidad = BeStockRec.Cantidad;\r\n                        BeProdPallet.Fecha_Vence = BeStockRec.Fecha_vence;\r\n                        BeProdPallet.Fec_agr =String.valueOf(du.getFechaActual());\r\n                        BeProdPallet.Fec_mod = String.valueOf(du.getFechaActual());\r\n                        BeProdPallet.Lote = BeStockRec.Lote;\r\n                        BeProdPallet.User_agr = gl.OperadorBodega.IdOperadorBodega+\"\";\r\n                        BeProdPallet.User_mod = gl.OperadorBodega.IdOperadorBodega+\"\";\r\n                        if (gl.mode==1){\r\n                            BeProdPallet.IsNew = true;\r\n                        }else{\r\n                            BeProdPallet.IsNew = false;\r\n                        }\r\n\r\n                        if (listaProdPalletsNuevos.items!=null){\r\n                            listaProdPalletsNuevos.items.add(BeProdPallet);\r\n                        }else{\r\n                            listaProdPalletsNuevos.items = new ArrayList<clsBeProducto_pallet>();\r\n                            listaProdPalletsNuevos.items.add(BeProdPallet);\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }else{\r\n                BeStockRec.Cantidad = Double.parseDouble(txtCantidadRec.getText().toString().replace(\",\",\"\"));\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Continua_Guardando_Rec_Nueva: \"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Terminar_Guardar_Detalle_Recepcion_Nueva(){\r\n\r\n        try{\r\n\r\n            listaStockPalletsNuevos.items.add(vBeStockRec);\r\n\r\n            if (BeStockRecNuevaRec.Presentacion.Imprime_barra){\r\n\r\n                BeProdPallet = new  clsBeProducto_pallet();\r\n\r\n                BeProdPallet.IdPropietarioBodega = BeTransReDet.IdPropietarioBodega;\r\n                BeProdPallet.IdProductoBodega = BeTransReDet.IdProductoBodega;\r\n                BeProdPallet.IdOperadorBodega = gl.OperadorBodega.IdOperadorBodega;\r\n                BeProdPallet.IdPresentacion = vBeStockRec.Presentacion.IdPresentacion;\r\n                BeProdPallet.IdRecepcionDet = vBeStockRec.IdRecepcionDet;\r\n                BeProdPallet.Impreso = false;\r\n                BeProdPallet.IdImpresora = 1;\r\n                BeProdPallet.Activo = true;\r\n                BeProdPallet.Fecha_ingreso = String.valueOf(du.getFechaActual());\r\n                BeProdPallet.Codigo_Barra = vBeStockRec.Lic_plate;\r\n                BeProdPallet.Codigo_Producto = BeProducto.Codigo;\r\n                BeProdPallet.Reimpresiones = 0;\r\n                BeProdPallet.Cantidad = vBeStockRec.Cantidad;\r\n                if (BeProducto.Control_vencimiento){\r\n                    BeProdPallet.Fecha_Vence = vBeStockRec.Fecha_vence;\r\n                }else{\r\n                    BeProdPallet.Fecha_Vence = \"\";\r\n                }\r\n                BeProdPallet.Fec_agr = String.valueOf(du.getFechaActual());\r\n                BeProdPallet.Fec_mod = String.valueOf(du.getFechaActual());\r\n                BeProdPallet.Lote = vBeStockRec.Lote;\r\n                BeProdPallet.User_agr = gl.OperadorBodega+\"\";\r\n                BeProdPallet.User_mod = gl.OperadorBodega.IdOperadorBodega+\"\";\r\n                if (gl.mode==1){\r\n                    BeProdPallet.IsNew = true;\r\n                }else{\r\n                    BeProdPallet.IsNew = false;\r\n                }\r\n\r\n                if (listaProdPalletsNuevos.items!=null){\r\n                    listaProdPalletsNuevos.items.add(BeProdPallet);\r\n                }else{\r\n                    listaProdPalletsNuevos.items = new ArrayList<clsBeProducto_pallet>();\r\n                    listaProdPalletsNuevos.items.add(BeProdPallet);\r\n                }\r\n\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Terminar_Guardar_Detalle_Recepcion_Nueva: \"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private boolean Pallet_Correcto(){\r\n\r\n        boolean PCorrecto=false;\r\n\r\n        try{\r\n\r\n            execws(14);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Pallet_Correcto:\"+e.getMessage());\r\n        }\r\n\r\n        return  PCorrecto;\r\n    }\r\n\r\n    private void Valida_Costo(){\r\n\r\n        try{\r\n\r\n            if (txtCostoReal.getText().toString().isEmpty()||txtCostoReal.getText().toString().equals(\"0\")||txtCostoReal.getText().toString().equals(\"0.0\")){\r\n\r\n                    if (IdPreseSelect>0){\r\n                        txtCostoReal.setText(Get_Costo_Presentacion()+\"\");\r\n                    }\r\n\r\n                    if (txtCostoReal.getText().toString().equals(\"0\")||txtCostoReal.getText().toString().equals(\"0.0\")){\r\n                        txtCostoReal.setText(txtCostoOC.getText().toString());\r\n                    }\r\n\r\n                }else if(Double.parseDouble(txtCostoReal.getText().toString())<=0){\r\n                    mu.msgbox(\"El costo debe ser mayor a 0\");\r\n                    return;\r\n                }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"Valida_Costo\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private double Get_Costo_Presentacion(){\r\n\r\n        double cost=0;\r\n\r\n        try{\r\n\r\n            if (BeProducto.Presentaciones!=null){\r\n\r\n                if (BeProducto.Presentaciones.items!=null){\r\n                    cost = stream(BeProducto.Presentaciones.items).where(c->c.IdPresentacion == IdPreseSelect).select(c->c.Costo).first();\r\n                }\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"GetCostoPresentacion\"+e.getMessage());\r\n        }\r\n\r\n        return cost;\r\n    }\r\n\r\n    private boolean Valida_Fecha_Vencimiento(){\r\n\r\n        boolean Valida_Fecha=false;\r\n\r\n        try{\r\n\r\n            String FechaVence=du.convierteFecha(cmbVenceRec.getText().toString().trim());\r\n\r\n            if (FechaVence.equals(String.valueOf(du.getFechaActual()))){\r\n               msgValidaFechaVence(\"La fecha de vencimiento del producto \"+BeProducto.Codigo+ \" es igual o menor a la fecha de hoy. ¿Desea ingresar un producto ya vencido?\");\r\n            }else{\r\n               Valida_Fecha=  true;\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"ValidaFechaVencimiento: \"+e.getMessage());\r\n        }\r\n\r\n        return Valida_Fecha;\r\n\r\n    }\r\n\r\n    private boolean Valida_Cantidad_Recibida(){\r\n        boolean valida=false;\r\n        double Cantidad=0;\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Validando cantidad\");\r\n\r\n            if (gl.TipoOpcion==2){\r\n                return true;\r\n            }\r\n\r\n            if (txtCantidadRec.getText().toString().isEmpty()){\r\n                Cantidad =0;\r\n            }else{\r\n                Cantidad = Double.parseDouble(txtCantidadRec.getText().toString());\r\n            }\r\n\r\n            if (gl.mode==2){\r\n                Cant_Pendiente =mu.round(Cant_Pendiente + Cant_Recibida_Anterior,gl.gCantDecCalculo);\r\n            }\r\n\r\n            if (Cant_Pendiente > Cantidad){\r\n                msgValidaCantidad(\"La cantidad \"+Cantidad+\" ingresada es correcta para el producto \"+BeProducto.Codigo);\r\n                return  true;\r\n            }else if(Cant_Pendiente < Cantidad){\r\n                 msgExcedeCantidad(\"Excede la cantidad solicitada. ¿Recibir de todas formas esta cantidad?\");\r\n                 return true;\r\n            }else if (BeProducto.Control_vencimiento){\r\n                valida_fecha_vencimiento();\r\n                return true;\r\n            }else{\r\n                DespuesDeValidarCantidad();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"ValidaCantidadRecibida\"+e.getMessage());\r\n        }\r\n\r\n        return valida;\r\n\r\n    }\r\n\r\n    private void msgValidaProductoPallet(String msg) {\r\n\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    Guardar_Pallet();\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    return;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"msgValidaProductoPallet\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgValidaFechaVence(String msg) {\r\n\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    DespuesDeValidarCantidad();\r\n                    //Continua_Llenando_Detalle_Recepcion_Nueva();\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    progress.cancel();\r\n                    cmbVenceRec.requestFocus();\r\n                    return;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"msgValidaFechaVence\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgExcedeCantidad(String msg) {\r\n\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    //DespuesDeValidarCantidad();\r\n                    valida_fecha_vencimiento();\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    return;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"msgExcedeCantidad\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgValidaCantidad(String msg) {\r\n\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(msg );\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    valida_fecha_vencimiento();\r\n                    //DespuesDeValidarCantidad();\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    progress.cancel();\r\n                    return;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"msgValidaCantidad\"+e.getMessage());\r\n\r\n        }\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region ScaneoBarra\r\n\r\n    //endregion\r\n\r\n    //region WebService\r\n\r\n    public class WebServiceHandler extends WebService {\r\n\r\n        public WebServiceHandler(PBase Parent,String Url) {\r\n            super(Parent,Url);\r\n        }\r\n\r\n        @Override\r\n        public void wsExecute(){\r\n\r\n            try{\r\n\r\n                switch (ws.callback) {\r\n\r\n                    case 1:\r\n                        callMethod(\"Get_Producto_By_IdProductoBodega\",\"IdProductoBodega\",BeOcDet.IdProductoBodega);\r\n                        break;\r\n                    case  2:\r\n                        callMethod(\"Get_Estados_By_IdPropietario_And_IdBodega\",\r\n                                \"pIdPropietario\",gl.IdPropietario,\r\n                                \"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 3:\r\n                        callMethod(\"Get_All_Presentaciones_By_IdProducto\",\"pIdProducto\",BeProducto.IdProducto,\"pActivo\",true);\r\n                        break;\r\n                    case 4:\r\n                        callMethod(\"Get_All_Codigos_Barra_By_IdProducto\",\"pIdProducto\",BeProducto.IdProducto);\r\n                        break;\r\n                    case 5:\r\n                        callMethod(\"Get_All_ProductoParametros_By_IdProducto_HH\",\"pIdProducto\",BeProducto.IdProducto,\r\n                                \"pActivo\",true);\r\n                        break;\r\n                    case 6:\r\n                        callMethod(\"Get_Nuevo_Correlativo_LicensePlate\",\"pIdEmpresa\",gl.IdEmpresa,\r\n                                \"pIdBodega\",gl.IdBodega,\"pIdPropietario\",BeProducto.Propietario.IdPropietario,\r\n                                \"pIdProducto\",BeProducto.IdProducto);\r\n                        break;\r\n                    case 7:\r\n                        callMethod(\"Get_Licenses_Plates_By_IdRecepcionEnc\",\"pIdRecepcionEnc\",gl.gIdRecepcionEnc);\r\n                        break;\r\n                    case 8:\r\n                        callMethod(\"Existe_LP_By_IdRecepcionEnc_And_IdRecepcionDet\",\"IdRecepcionEnc\",gl.gIdRecepcionEnc,\r\n                                \"LicPlate\",txtLicPlate.getText().toString(),\"IdRecepcionDet\",pIdRecepcionDet);\r\n                        break;\r\n                    case 9:\r\n                        callMethod(\"MaxIDStockSeRec\");\r\n                        break;\r\n                    case 10:\r\n                        callMethod(\"Get_All_Params_By_IdRecepcionEnc_And_IdRecepcion_Det_For_HH\",\r\n                                \"pIdRecepcionEnc\",gl.gIdRecepcionEnc,\"pIdRecepcionDet\",pIdRecepcionDet);\r\n                        break;\r\n                    case 11:\r\n                        callMethod(\"MaxIDStockRec\");\r\n                        break;\r\n                    case 12:\r\n                        callMethod(\"Get_BeTransReEnc_By_IdREcepcionEnc_For_HH\",\"pIdRecepcionEnc\",gl.gIdRecepcionEnc);\r\n                        break;\r\n                    case 13:\r\n                        callMethod(\"Get_IdUbicMerma_By_IdBodega\",\"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 14:\r\n                        callMethod(\"Existe_LP_By_IdRecepcionEnc_And_IdRecepcionDet\",\"IdRecepcionEnc\",gl.gIdRecepcionEnc,\r\n                                \"LicPlate\",vBeStockRec.Lic_plate,\"IdRecepcionDet\",pIdRecepcionDet);\r\n                        break;\r\n                    case 15:\r\n                        callMethod(\"Get_Nuevo_Correlativo_LicensePlate_S\",\"pIdEmpresa\",gl.IdEmpresa,\r\n                                \"pIdBodega\",gl.IdBodega,\"pIdPropietario\",BeProducto.Propietario.IdPropietario,\r\n                                \"pIdProducto\",BeProducto.IdProducto,\"UltimoPalletGenerado\",vBeStockRec.Lic_plate);\r\n                        break;\r\n                    case 16:\r\n                        progress.setMessage(\"Procesando recepción\");\r\n                        //Guardar_Recepcion_Nueva\r\n                        callMethod(\"Guardar_Recepcion\",\"pRecEnc\",gl.gBeRecepcion,\r\n                                \"pRecOrdenCompra\",gl.gBeRecepcion.OrdenCompraRec,\r\n                                \"pListStockRecSer\",pListBeStockSeRec.items,\r\n                                \"pListStockRec\",pListBeStockRec.items,\r\n                                \"pListProductoPallet\",listaProdPalletsNuevos.items,\r\n                                \"pIdEmpresa\",gl.IdEmpresa,\r\n                                \"pIdBodega\",gl.IdBodega,\r\n                                \"pIdUsuario\",gl.IdOperador);\r\n                        break;\r\n                    case 17 :\r\n                        //Guardar_Recepcion_Edita\r\n                        callMethod(\"GuardarRecepcionModif\",\"pRecEnc\",gl.gBeRecepcion,\r\n                                \"pRecOrdenCompra\",gl.gBeRecepcion.OrdenCompraRec,\r\n                                \"pListStockRecSer\",pListBeStockSeRec.items,\"pListStockRec\",pListBeStockRec.items,\r\n                                \"pListProductoPallet\",listaProdPalletsNuevos.items,\"pbeStockAnt\",gBeStockAnt,\r\n                                \"pIdEmpresa\",gl.IdEmpresa,\"pIdBodega\",gl.IdBodega,\"pIdUsuario\",gl.IdOperador);\r\n                        break;\r\n                    case 18:\r\n                        callMethod(\"Get_Detalle_OC_By_IdOrdeCompraDet\",\"oBeTrans_oc_det\",beTransOCDet);\r\n                        break;\r\n                    case 19:\r\n                        callMethod(\"Max_IdRecepcion_Det_By_IdRecepcionEnc\",\"pIdRecepcionEnc\",gl.gIdRecepcionEnc);\r\n                        break;\r\n                    case 20:\r\n                        callMethod(\"Get_IdUbicMerma_By_IdBodega\",\"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 21:\r\n                        callMethod(\"Finalizar_Recepcion_Parcial_Pallet_Proveedor\",\"pRecEnc\",gl.gBeRecepcion,\r\n                                \"pIdOrdenCompraEnc\",pIdOrdenCompraEnc,\r\n                                \"pIdRecepcionEnc\",gl.gIdRecepcionEnc,\r\n                                \"pIdEmpresa\", gl.IdEmpresa,\r\n                                \"pIdBodega\",gl.IdBodega,\r\n                                \"pIdUsuario\",gl.IdOperador,\r\n                                \"pBeStockRec\",vBeStockRecPallet,\r\n                                \"pBeRecDet\",BeTransReDet,\r\n                                \"pBeBarraPallet\",BeINavBarraPallet,\r\n                                \"pEsTransferencia\",EsTransferenciaInternaWMS);\r\n                        break;\r\n                    case 22:\r\n                        callMethod(\"Get_All_BeTrasReDet_By_IdOrdenCompraEnc\",\"pIdOrdenCompraEnc\",pIdOrdenCompraEnc);\r\n                        break;\r\n                    case 23:\r\n                        callMethod(\"Get_Stock_By_IdRecepcionEnc_And_IdRecpecionDet\",\"pIdRecepcionEnc\",gl.gIdRecepcionEnc,\"pIdRecepcionDet\",pIdRecepcionDet);\r\n                        break;\r\n                    case 24:\r\n                        callMethod(\"Existe_Lp\",\"pLic_Plate\",pLp);\r\n                        break;\r\n                }\r\n\r\n            }catch (Exception e){\r\n                mu.msgbox(e.getClass()+\"WebServiceHandler:\"+e.getMessage());\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void wsCallBack(Boolean throwing,String errmsg,int errlevel) {\r\n\r\n        try {\r\n            if (throwing) throw new Exception(errmsg);\r\n\r\n            switch (ws.callback) {\r\n                case 1:\r\n                    processBeProducto();\r\n                    break;\r\n                case 2:\r\n                    processListarProductoEstado();\r\n                    break;\r\n                case 3:\r\n                    processListPresentaciones();\r\n                    break;\r\n                case 4:\r\n                    processCodigosBarra();\r\n                    break;\r\n                case 5:\r\n                    processTieneParametrosPersonalizados();\r\n                    break;\r\n                case 6:\r\n                    processNuevoLP();\r\n                    break;\r\n                case 7:\r\n                    processLicensePallet();\r\n                    break;\r\n                case 8:\r\n                    processValidaLicPlate();\r\n                    break;\r\n                case 9:\r\n                    processMaxIdStockSeRec();\r\n                    break;\r\n                case 10:\r\n                    processListDetParametros();\r\n                    break;\r\n                case 11:\r\n                    processMaxIdStockRec();\r\n                    break;\r\n                case 12:\r\n                    processAuxRec();\r\n                    break;\r\n                case 13:\r\n                    processUbicacionMerma();\r\n                    break;\r\n                case 14:\r\n                    processvBeStockRecLicPlate();\r\n                    break;\r\n                case 15:\r\n                    processNuevoLPS();\r\n                    break;\r\n                case 16:\r\n                    processGuardarRecNueva();\r\n                    break;\r\n                case 17:\r\n                    processGuardarRecModif();\r\n                    break;\r\n                case 18:\r\n                    processActualizaCantidadRecibida();\r\n                    break;\r\n                case 19:\r\n                    processMaxIdRecepcionDet();\r\n                    break;\r\n                case 20:\r\n                    processGetIdUbicacionMerma();\r\n                    break;\r\n                case 21:\r\n                    beTransOCDet =new clsBeTrans_oc_det();\r\n                    beTransOCDet.IdOrdenCompraEnc = pIdOrdenCompraEnc;\r\n                    beTransOCDet.IdOrdenCompraDet = pIdOrdenCompraDet;\r\n                    execws(18);\r\n                    break;\r\n                case 22:\r\n                    processCantRecConOC();\r\n                    break;\r\n                case 23:\r\n                    processGetStock();\r\n                    break;\r\n                case 24:\r\n                    processExisteLp();\r\n                    break;\r\n\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \"wsCallBack: \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processBeProducto(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo valores de producto\");\r\n\r\n            BeProducto = xobj.getresult(clsBeProducto.class,\"Get_Producto_By_IdProductoBodega\");\r\n\r\n            Load();\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(\" processBeProducto: \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processListarProductoEstado(){\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Obteniendo estados de producto\");\r\n\r\n            LProductoEstado = xobj.getresult(clsBeProducto_estadoList.class,\"Get_Estados_By_IdPropietario_And_IdBodega\");\r\n\r\n            Listar_Producto_Estado();\r\n\r\n            execws(4);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processListarProductoEstado:\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processListPresentaciones(){\r\n\r\n        try{\r\n\r\n            BeProducto.Presentaciones = xobj.getresult(clsBeProducto_PresentacionList.class,\"Get_All_Presentaciones_By_IdProducto\");\r\n\r\n            Listar_Producto_Presentaciones();\r\n\r\n            execws(4);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processListPresentaciones:\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processCodigosBarra(){\r\n\r\n        try{\r\n\r\n            BeProducto.Codigos_Barra = xobj.getresult(clsBeProducto_codigos_barraList.class,\"Get_All_Codigos_Barra_By_IdProducto\");\r\n\r\n            Listar_Producto_Presentaciones();\r\n\r\n            if (gl.mode==1){\r\n                LlenaDatosFaltantes();\r\n            }else{\r\n                LlenaDatosFaltantes_Existente();\r\n            }\r\n\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            mu.msgbox(\"processCodigosBarra:s\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processTieneParametrosPersonalizados(){\r\n\r\n        try{\r\n\r\n            Pperzonalizados=false;\r\n            PCap_Manu=false;\r\n            PGenera_lp=false;\r\n            PTiene_Ctrl_Temp=false;\r\n            PTiene_Pres=false;\r\n\r\n            pListBEProductoParametro = xobj.getresult(clsBeProducto_parametrosList.class,\"Get_All_ProductoParametros_By_IdProducto_HH\");\r\n\r\n            if (pListBEProductoParametro!=null){\r\n                if (pListBEProductoParametro.items!=null){\r\n                    Pperzonalizados = true;\r\n                }\r\n            }\r\n\r\n            if (BeProducto.Fechamanufactura&&BeProducto.Materia_prima){\r\n                PCap_Manu=true;\r\n            }\r\n\r\n            if (BeProducto.Capturar_aniada){\r\n                PCap_Anada = true;\r\n            }\r\n\r\n            if (BeProducto.Genera_lp){\r\n                PGenera_lp=true;\r\n            }\r\n\r\n            if (BeProducto.Peso_recepcion){\r\n                PTiene_Ctrl_Peso = true;\r\n            }\r\n\r\n            if (BeProducto.Temperatura_recepcion){\r\n                PTiene_Ctrl_Temp = true;\r\n            }\r\n\r\n            if (BeProducto.Serializado){\r\n                PTiene_PorSeries=true;\r\n            }\r\n\r\n            if (stream(gl.gpListDetalleOC.items).where(c -> c.IdProductoBodega == pIdProductoBodega\r\n                    && c.IdOrdenCompraDet == pIdOrdenCompraDet).select(c -> c.IdPresentacion).first()>0){\r\n                if (BeProducto.Presentaciones!=null){\r\n                    if (BeProducto.Presentaciones.items!=null){\r\n                        PTiene_Pres=true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(Pperzonalizados||PCap_Manu||PCap_Anada||PGenera_lp||PTiene_Ctrl_Peso||PTiene_Ctrl_Temp||PTiene_PorSeries||PTiene_Pres){\r\n                Muestra_Propiedades_Producto();\r\n            }else{\r\n                Guardar_Recepcion_Nueva();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"ProcessTieneParametrosPersonalizados: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processNuevoLP(){\r\n\r\n        try {\r\n\r\n            pNumeroLP = xobj.getresult(String.class,\"Get_Nuevo_Correlativo_LicensePlate\");\r\n\r\n            if (gl.mode==1){\r\n                //#CKFK 20201229 Agregué esta condición de que si la barra tiene información se coloca eso como LP\r\n                if (!txtBarra.getText().toString().isEmpty()){\r\n                    txtLicPlate.setText(txtBarra.getText().toString().replace(\"$\",\"\"));\r\n                }else{\r\n                    txtLicPlate.setText(pNumeroLP);\r\n                }\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processNuevoLP: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processLicensePallet(){\r\n\r\n        try {\r\n\r\n            pListBeLicensePlate = xobj.getresult(clsBeLicensePlatesList.class,\"Get_Licenses_Plates_By_IdRecepcionEnc\");\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processLicensePallet: \"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processValidaLicPlate(){\r\n\r\n        try{\r\n\r\n            PallCorrecto  = xobj.getresult(Boolean.class,\"Existe_LP_By_IdRecepcionEnc_And_IdRecepcionDet\");\r\n\r\n            if (!PallCorrecto){\r\n                mu.msgbox(\"El License Plate ya existe, debe ingresar otro valor\");\r\n            }else{\r\n                ContinuaValidandoParametros();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processValidaLicPlate: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private int processMaxIdStockSeRec(){\r\n\r\n        int MaId=0;\r\n\r\n        try{\r\n\r\n            MaId = xobj.getresult(Integer.class,\"MaxIDStockSeRec\");\r\n\r\n            ObjNS.IdStockSeRec = MaId + 1;\r\n            ValidaParametrosDespuesSeRec();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processMaxIdStockSeRec: \"+e.getMessage());\r\n        }\r\n\r\n        return MaId;\r\n    }\r\n\r\n    private void processListDetParametros(){\r\n\r\n        try{\r\n\r\n            plistBeReDetParametros = xobj.getresult(clsBeTrans_re_det_parametrosList.class,\"Get_All_Params_By_IdRecepcionEnc_And_IdRecepcion_Det_For_HH\");\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processListDetParametros\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private int processMaxIdStockRec(){\r\n\r\n        int IdMax=0;\r\n        try {\r\n\r\n            IdMax = xobj.getresult(Integer.class,\"MaxIDStockRec\");\r\n\r\n            ObjS.IdStockRec = IdMax + 1;\r\n\r\n            SigueValidandoParametros();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processMaxIdStockRec: \"+e.getMessage());\r\n        }\r\n\r\n        return IdMax;\r\n\r\n    }\r\n\r\n    private void processAuxRec(){\r\n\r\n        try{\r\n\r\n            auxRec = xobj.getresult(clsBeTrans_re_enc.class,\"Get_BeTransReEnc_By_IdREcepcionEnc_For_HH\");\r\n\r\n            if (auxRec!=null){\r\n                gl.gBeRecepcion.IsNew = auxRec.IsNew;\r\n            }\r\n\r\n            ContinuaGuardandoRecepcion();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processAuxRec:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processUbicacionMerma(){\r\n\r\n        try{\r\n\r\n            BeStockRecNuevaRec.IdUbicacion = xobj.getresult(Integer.class,\"Get_IdUbicMerma_By_IdBodega\");\r\n\r\n            Continua_Guardando_Rec_Nueva(BeStockRecNuevaRec,vFactorNuevaRec,vCantNuevaRec);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processUbicacionMerma:\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processvBeStockRecLicPlate(){\r\n\r\n        try{\r\n\r\n            boolean EsCorrecto=false;\r\n\r\n            EsCorrecto  = xobj.getresult(Boolean.class,\"Existe_LP_By_IdRecepcionEnc_And_IdRecepcionDet\");\r\n\r\n            if (!EsCorrecto){\r\n                mu.msgbox(\"El License Plate ya existe, debe ingresar otro valor\");\r\n                execws(15);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processvBeStockRecLicPlate: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processNuevoLPS(){\r\n\r\n        try {\r\n\r\n            if (!txtBarra.getText().toString().isEmpty()){\r\n                vBeStockRec.Lic_plate = txtBarra.getText().toString();\r\n            }else {\r\n                vBeStockRec.Lic_plate = xobj.getresult(String.class, \"Get_Nuevo_Correlativo_LicensePlate_S\");\r\n            }\r\n\r\n            Terminar_Guardar_Detalle_Recepcion_Nueva();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processNuevoLPS: \"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processGuardarRecNueva(){\r\n\r\n        try{\r\n\r\n            String Resultado=\"\";\r\n\r\n            progress.setMessage(\"Finalizando proceso de guardar recepción\");\r\n\r\n            Resultado = xobj.getresult(String.class,\"Guardar_Recepcion\");\r\n\r\n            if (!Resultado.isEmpty()){\r\n                Imprime_Barra_Despues_Guardar();\r\n            }else{\r\n                progress.cancel();\r\n                mu.msgbox(\"No se pudo guardar la recepción\");\r\n                return;\r\n            }\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n        mu.msgbox(\"processGuardarRecNueva:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processGuardarRecModif(){\r\n\r\n        try{\r\n\r\n            String Resultado=\"\";\r\n\r\n            progress.setMessage(\"Finalizando proceso de guardar recepción\");\r\n\r\n            Resultado = xobj.getresult(String.class,\"GuardarRecepcionModif\");\r\n\r\n            if (!Resultado.isEmpty()){\r\n                Imprime_Barra_Despues_Guardar();\r\n            }else{\r\n                progress.cancel();\r\n                mu.msgbox(\"No se pudo guardar la recepción\");\r\n                return;\r\n            }\r\n\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            mu.msgbox(\"processGuardarRecModif:\"+e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processActualizaCantidadRecibida(){\r\n\r\n        try {\r\n\r\n            boolean GetDetalle = false;\r\n            int vIndex = -1;\r\n\r\n            progress.setMessage(\"Actualizando cantidad recibida\");\r\n\r\n            GetDetalle = xobj.getresult(Boolean.class, \"Get_Detalle_OC_By_IdOrdeCompraDet\");\r\n\r\n            List AuxList = stream(gl.gpListDetalleOC.items).select(c -> c.IdOrdenCompraDet).toList();\r\n\r\n            if (AuxList.size()>0){\r\n\r\n                vIndex = AuxList.indexOf(beTransOCDet.IdOrdenCompraDet);\r\n\r\n                gl.gpListDetalleOC.items.get(vIndex).Cantidad_recibida += BeTransReDet.cantidad_recibida;\r\n\r\n            }\r\n\r\n            gl.CantRec = beTransOCDet.Cantidad_recibida;\r\n\r\n            gl.Carga_Producto_x_Pallet=false;\r\n\r\n            progress.cancel();\r\n\r\n            doExit();\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            mu.msgbox(\"processActualizaCantidadRecibida\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private  void processMaxIdRecepcionDet(){\r\n\r\n        try{\r\n\r\n            pIdRecepcionDet = xobj.getresult(Integer.class,\"Max_IdRecepcion_Det_By_IdRecepcionEnc\")+1;\r\n\r\n            execws(2);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processMaxIdRecepcionDet\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    public void ExitForm(View view){\r\n        msgAskExit(\"Está seguro de salir\");\r\n    }\r\n\r\n    private void msgAskExit(String msg) {\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(\"¿\" + msg + \"?\");\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    doExit();\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    return;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void msgAskExisteLp(String msg) {\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(\"¿\" + msg + \"?\");\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    txtLoteRec.requestFocus();\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    txtBarra.setText(\"\");\r\n                    txtBarra.setSelectAllOnFocus(true);\r\n                    txtBarra.requestFocus();\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n//    private void msgAskImprimir(String msg) {\r\n//        try{\r\n//            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n//\r\n//            dialog.setTitle(R.string.app_name);\r\n//            dialog.setMessage(\"¿\" + msg + \"?\");\r\n//\r\n//            dialog.setCancelable(false);\r\n//\r\n//            dialog.setIcon(R.drawable.ic_quest);\r\n//\r\n//            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n//                public void onClick(DialogInterface dialog, int which) {\r\n//                }\r\n//            });\r\n//\r\n//            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n//                public void onClick(DialogInterface dialog, int which) {                }\r\n//            });\r\n//\r\n//            dialog.show();\r\n//\r\n//        }catch (Exception e){\r\n//            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n//        }\r\n//\r\n//    }\r\n\r\n    private void doExit(){\r\n        try{\r\n\r\n            //LimpiaValores();\r\n            super.finish();\r\n            gl.Carga_Producto_x_Pallet=false;\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void processGetIdUbicacionMerma(){\r\n\r\n        try{\r\n\r\n            vBeStockRecPallet.IdUbicacion = xobj.getresult(Integer.class,\"Get_IdUbicMerma_By_IdBodega\");\r\n\r\n            Continua_Llenando_Stock_Pallet_Proveedor();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processGetIdUbicacionMerma\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processCantRecConOC(){\r\n\r\n        try{\r\n\r\n            LRecepcionCantidad = xobj.getresult(clsBeTrans_re_detList.class,\"Get_All_BeTrasReDet_By_IdOrdenCompraEnc\");\r\n\r\n            if (LRecepcionCantidad!=null){\r\n                if (LRecepcionCantidad.items!=null){\r\n                    Cant_Recibida = stream(LRecepcionCantidad.items).where(c->c.IdProductoBodega == pIdProductoBodega &&\r\n                            c.IdPresentacion == vPresentacion &&\r\n                            c.No_Linea == pLineaOC).select(c->c.cantidad_recibida).first();\r\n                }\r\n            }\r\n\r\n            Cant_A_Recibir = gl.gselitem.Cantidad;\r\n\r\n            if(Cant_Recibida - Cant_Recibida<0){\r\n                Cant_Pendiente = 0;\r\n            }else{\r\n                Cant_Pendiente =mu.round( Cant_A_Recibir - Cant_Recibida,gl.gCantDecCalculo);\r\n            }\r\n\r\n            FinalizCargaProductos();\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processCantRecConOC\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processGetStock(){\r\n\r\n        try{\r\n\r\n            pListBeStockRec = xobj.getresult(clsBeStock_recList.class,\"Get_Stock_By_IdRecepcionEnc_And_IdRecpecionDet\");\r\n\r\n            execws(2);\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processGetStock:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void execws(int callbackvalue) {\r\n        ws.callback=callbackvalue;\r\n        ws.execute();\r\n    }\r\n\r\n    private void processExisteLp(){\r\n\r\n        try{\r\n\r\n            Existe_Lp = xobj.getresult(Boolean.class,\"Existe_Lp\");\r\n\r\n            if (Existe_Lp){\r\n                msgAskExisteLp(\"El Lp:\"+pLp+\" ya existe, desea agregarlo al producto:\"+BeProducto.Codigo);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processExisteLp:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        try{\r\n            msgAskExit(\"Está seguro de salir\");\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n    //endregion\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/dts/tom/Transacciones/Recepcion/frm_recepcion_datos.java	(revision a5622cca171a9b0fa8834e47aebef8f8b52dd59c)
+++ app/src/main/java/com/dts/tom/Transacciones/Recepcion/frm_recepcion_datos.java	(date 1611638369741)
@@ -9,7 +9,6 @@
 import android.graphics.Color;
 import android.graphics.Typeface;
 import android.os.Bundle;
-import android.os.Looper;
 import android.text.Editable;
 import android.text.InputFilter;
 import android.text.InputType;
@@ -2579,8 +2578,6 @@
                     +"Lote: "+BeINavBarraPallet.Lote +"\n"
                     +"¿El producto está completo y en buen estado?";
 
-
-
             msgValidaProductoPallet(vMensaje1);
 
         }catch (Exception e){
@@ -3109,6 +3106,8 @@
                             Continua_Llenando_Detalle_Recepcion_Nueva();
                         }*/
                 }
+            }else{
+                DespuesDeValidarCantidad();
             }
 
         }catch (Exception ex){
@@ -3513,39 +3512,11 @@
 
                 }
 
-                /*if (BeProducto.Control_vencimiento){
-
-                    if (cmbVenceRec.getText().toString().isEmpty()){
-                        mu.msgbox("Ingrese fecha de vencimiento para el producto "+BeProducto.Codigo);
-                        return;
-                    }else{
-                        BeTransReDet.Fecha_vence =du.convierteFecha(cmbVenceRec.getText().toString().trim());
-                        gl.gFechaVenceAnterior = cmbVenceRec.getText().toString().trim();
-
-                        String FechaVence=BeTransReDet.Fecha_vence;
-
-                        if (FechaVence.equals(String.valueOf(du.getFechaActual()))){
-                            msgValidaFechaVence("La fecha de vencimiento del producto "+BeProducto.Codigo+ " es igual o menor a la fecha de hoy. ¿Desea ingresar un producto ya vencido?");
-                        }else{
-                            Continua_Llenando_Detalle_Recepcion_Nueva();
-                        }
-
-                        //#CKFK 20200917 Puse esto en comentario porque la validación no se hacía correctamente
-                        //if (!Valida_Fecha_Vencimiento()){
-                        //    return;
-                        //}else{
-                        //    Continua_Llenando_Detalle_Recepcion_Nueva();
-                        //}
-                    }
-                }else{
-                    BeTransReDet.Fecha_vence = "";
-                    Continua_Llenando_Detalle_Recepcion_Nueva();
-                }*/
-
                 if (!BeProducto.Control_vencimiento){
                     BeTransReDet.Fecha_vence = "";
                 }
 
+                //Llamado 1
                 Continua_Llenando_Detalle_Recepcion_Nueva();
 
             }
@@ -3682,28 +3653,8 @@
                     BeTransReDet.Fecha_vence = "";
                 }
 
+                //Llamado 2
                 Continua_Llenando_Detalle_Recepcion_Nueva();
-
-                //#CKFK 20200917 Lo puse en comentario porque hice la validación de la fecha de vencimiento antes de comenzar a Guardar
-                /*if (BeProducto.Control_vencimiento){
-
-                    if (cmbVenceRec.getText().toString().isEmpty()){
-                        mu.msgbox("Ingrese fecha de vencimiento para el producto "+BeProducto.Codigo);
-                        return;
-                    }else{
-                        BeTransReDet.Fecha_vence =du.convierteFecha(cmbVenceRec.getText().toString().trim());
-                        gl.gFechaVenceAnterior = cmbVenceRec.getText().toString().trim();
-                        if (!Valida_Fecha_Vencimiento()){
-                            return;
-                        }else{
-                            Continua_Llenando_Detalle_Recepcion_Nueva();
-                        }
-                    }
-
-                }else{
-                    BeTransReDet.Fecha_vence = "";
-                    Continua_Llenando_Detalle_Recepcion_Nueva();
-                }*/
 
             }
 
@@ -3800,6 +3751,7 @@
 
                 if (stream(listaStock.items).count()==0){
                     mu.msgbox("¡ERROR!, reporte al equipo de desarrollo");
+                    return;
                 }
 
                 for( clsBeStock_rec BeStockRec : listaStock.items){
@@ -3823,7 +3775,10 @@
                                 BeStockRecNuevaRec = BeStockRec;
                                 vCantNuevaRec = vCant;
                                 vFactorNuevaRec = Factor;
-                                execws(13); //m_proxy.Get_IdUbicMerma_By_IdBodega(gIdBodega)
+                                BeStockRecNuevaRec.IdUbicacion =  BeEstado.IdUbicacionBodegaDefecto;
+                                BeStockRec.IdUbicacion =  BeEstado.IdUbicacionBodegaDefecto;
+                                /*execws(13); //m_proxy.Get_IdUbicMerma_By_IdBodega(gIdBodega)
+                                return;*/
                             }else{
                                 BeStockRec.IdUbicacion = gl.gBeRecepcion.IdUbicacionRecepcion;//CInt(txtIdUbicacion.Text.Trim)
                             }
Index: app/src/main/java/com/dts/tom/Transacciones/CambioUbicacion/frm_cambio_ubicacion_ciega.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.dts.tom.Transacciones.CambioUbicacion;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.DialogInterface;\r\nimport android.graphics.Color;\r\nimport android.graphics.Typeface;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.text.InputType;\r\nimport android.view.KeyEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\n\r\nimport com.dts.base.WebService;\r\nimport com.dts.base.XMLObject;\r\nimport com.dts.classes.Mantenimientos.Bodega.clsBeBodega_ubicacion;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_estado.clsBeProducto_estado;\r\nimport com.dts.classes.Mantenimientos.Producto.Producto_estado.clsBeProducto_estadoList;\r\nimport com.dts.classes.Mantenimientos.Producto.clsBeProducto;\r\nimport com.dts.classes.Mantenimientos.Producto.clsBeProductoList;\r\nimport com.dts.classes.Transacciones.CambioUbicacion.clsBeMotivo_ubicacion.clsBeMotivo_ubicacionList;\r\nimport com.dts.classes.Transacciones.Movimiento.Trans_movimientos.clsBeTrans_movimientos;\r\nimport com.dts.classes.Transacciones.Movimiento.USUbicStrucStage5.USUbicStrucStage5List;\r\nimport com.dts.classes.Transacciones.Stock.Stock.clsBeStock;\r\nimport com.dts.classes.Transacciones.Stock.Stock_res.clsBeVW_stock_res;\r\nimport com.dts.classes.Transacciones.Stock.Stock_res.clsBeVW_stock_resList;\r\nimport com.dts.tom.PBase;\r\nimport com.dts.tom.R;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\nimport static br.com.zbra.androidlinq.Linq.stream;\r\n\r\npublic class frm_cambio_ubicacion_ciega extends PBase {\r\n\r\n    private frm_cambio_ubicacion_ciega.WebServiceHandler ws;\r\n    private XMLObject xobj;\r\n    private ProgressDialog progress;\r\n\r\n    private EditText txtUbicOrigen, txtCodigoPrd, txtCantidad, txtUbicDestino,txtLicPlate, txtPosiciones, txtPeso;\r\n    private TextView lblUbicCompleta, lblDescProducto, lblLote, lblVence, lblEstadoDestino, lblCant,lblPesoEst,lblTituloForma,lblUbicCompDestino;\r\n    private Spinner cmbPresentacion, cmbLote, cmbVence, cmbEstadoOrigen, cmbEstadoDestino;\r\n    private Button btnGuardarCiega;\r\n\r\n    private clsBeMotivo_ubicacionList pListBeMotivoUbicacion = new clsBeMotivo_ubicacionList();\r\n\r\n    private clsBeProducto cvProd = new clsBeProducto();\r\n    private clsBeProductoList productoList = new clsBeProductoList();\r\n\r\n    private clsBeVW_stock_res vStockRes = new clsBeVW_stock_res();\r\n    private clsBeVW_stock_resList stockResList = new clsBeVW_stock_resList();\r\n    private clsBeVW_stock_resList lotesList = new clsBeVW_stock_resList();\r\n    private clsBeVW_stock_resList venceList = new clsBeVW_stock_resList();\r\n    private clsBeVW_stock_resList presentacionList = new clsBeVW_stock_resList();\r\n    private clsBeVW_stock_resList productoEstadoOrigenList = new clsBeVW_stock_resList();\r\n\r\n    /*private clsBeProducto producto_ubicacion = new clsBeProducto();\r\n    private ArrayList<clsBeProducto> productoArrayList = new ArrayList<clsBeProducto>();\r\n    private ArrayList<clsBeVW_stock_res> fechaVenceArrayList = new ArrayList<clsBeVW_stock_res>();\r\n    private ArrayList<clsBeVW_stock_res> loteArrayList = new ArrayList<clsBeVW_stock_res>();\r\n    private clsBeProducto_estado producto_estado_origen = new clsBeProducto_estado();\r\n    private ArrayList<clsBeProducto_estado> productoEstadoOrigenArrayList = new ArrayList<clsBeProducto_estado>();\r\n    private clsBeProducto_estado producto_estado_destino = new clsBeProducto_estado();\r\n    private ArrayList<clsBeProducto_estado> productoEstadoDestinoArrayList = new ArrayList<clsBeProducto_estado>();\r\n    private clsBeProducto_Presentacion presentacion = new clsBeProducto_Presentacion();\r\n    private ArrayList<clsBeProducto_Presentacion> presentacionArrayList = new ArrayList<clsBeProducto_Presentacion>();*/\r\n\r\n    private clsBeProducto_estadoList productoEstadoDestinoList = new clsBeProducto_estadoList();\r\n\r\n    private USUbicStrucStage5List lUbicSug = new USUbicStrucStage5List();\r\n\r\n    private ArrayList<String> cmbPresentacionList = new ArrayList<String>();\r\n    private ArrayList<String> cmbLoteList = new ArrayList<String>();\r\n    private ArrayList<String> cmbVenceList = new ArrayList<String>();\r\n    private ArrayList<String> cmbEstadoOrigenList = new ArrayList<String>();\r\n    private ArrayList<String> cmbEstadoDestinoList = new ArrayList<String>();\r\n\r\n    private String lote = \"\", fechaVence = \"\";\r\n\r\n    private String  fechaVenceU;\r\n\r\n    private int cvUbicOrigID;\r\n    private int cvProdID;\r\n    private int cvPresID;\r\n    private String cvLote;\r\n    private String cvVence;\r\n    private int cvEstOrigen;\r\n    private int cvEstDestino;\r\n    private int cvUbicDestID;\r\n    private int cvStockID;\r\n    private String cvAtrib;\r\n    private int cvPropID;\r\n    private int cvUMBID;\r\n    private double vFactorPres;\r\n    private boolean validarDatos = false;\r\n    private boolean datosCorrectos = false;\r\n    private boolean vProcesar =false;\r\n\r\n    private boolean Es_Explosion = false;\r\n    private int vIdStockNuevo = 0;\r\n    private int vIdMovimientoNuevo= 0;\r\n    private int vPosiciones=0;\r\n\r\n    private boolean Existe_Lp=false;\r\n\r\n    private boolean EsPalletNoEstandar=false;\r\n    private boolean TienePosiciones=false;\r\n\r\n    private boolean escaneoPallet;\r\n\r\n    private clsBeTrans_movimientos gMovimientoDet;\r\n    private clsBeBodega_ubicacion bodega_ubicacion_destino;\r\n    private clsBeBodega_ubicacion bodega_ubicacion_origen;\r\n    private clsBeProducto_estado gProdEstado;\r\n    private clsBeVW_stock_res cvStockItem;\r\n    private clsBeVW_stock_res BeStockPallet;\r\n    private clsBeStock pStock;\r\n\r\n    private clsBeProducto BeProductoUbicacion;\r\n    private int IdProductoUbicacion;\r\n    private String vNuevoPalletId;\r\n    private String pLicensePlate;\r\n\r\n    private double vCantidadAUbicar, vCantidadDisponible, vPesoAUbicar, vPesoDisponible;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        try {\r\n            super.onCreate(savedInstanceState);\r\n            setContentView(R.layout.activity_frm_cambio_ubicacion_ciega);\r\n\r\n            super.InitBase();\r\n\r\n            ws = new frm_cambio_ubicacion_ciega.WebServiceHandler(frm_cambio_ubicacion_ciega.this, gl.wsurl);\r\n            xobj = new XMLObject(ws);\r\n\r\n            txtUbicOrigen = (EditText) findViewById(R.id.txtUbicOrigen);\r\n            txtCodigoPrd = (EditText) findViewById(R.id.txtCodigoPrd);\r\n            txtCantidad = (EditText) findViewById(R.id.txtCantidad);\r\n            txtUbicDestino = (EditText) findViewById(R.id.txtUbicDestino);\r\n            txtLicPlate = (EditText)findViewById(R.id.txtLipPlate);\r\n            txtPeso = (EditText) findViewById(R.id.txtPeso);\r\n\r\n            lblUbicCompleta = (TextView) findViewById(R.id.lblUbicCompleta);\r\n            lblDescProducto = (TextView) findViewById(R.id.lblDescProducto);\r\n            lblLote = (TextView) findViewById(R.id.lblLote);\r\n            lblVence = (TextView) findViewById(R.id.lblVence);\r\n            lblEstadoDestino = (TextView) findViewById(R.id.lblEstadoDestino);\r\n            lblCant = (TextView) findViewById(R.id.lblCant);\r\n            lblPesoEst = (TextView) findViewById(R.id.lblPesoEst);\r\n            lblTituloForma = (TextView) findViewById(R.id.lblTituloForma);\r\n            lblUbicCompDestino = (TextView) findViewById(R.id.lblUbicCompDestino);\r\n\r\n            cmbPresentacion = (Spinner) findViewById(R.id.cmbPresentacion);\r\n            cmbLote = (Spinner) findViewById(R.id.cmbLote);\r\n            cmbVence = (Spinner) findViewById(R.id.cmbVence);\r\n            cmbEstadoOrigen = (Spinner) findViewById(R.id.cmbEstadoOrigen);\r\n            cmbEstadoDestino = (Spinner) findViewById(R.id.cmbEstadoDestino);\r\n\r\n            btnGuardarCiega = (Button) findViewById(R.id.btnGuardarCiega);\r\n\r\n            txtPosiciones = new EditText(this,null);\r\n            txtPosiciones.setInputType(InputType.TYPE_CLASS_NUMBER);\r\n\r\n            cmbEstadoDestino.setVisibility(gl.modo_cambio == 1 ? View.GONE : View.VISIBLE);\r\n            lblEstadoDestino.setVisibility(gl.modo_cambio == 1 ? View.GONE : View.VISIBLE);\r\n\r\n            lblTituloForma.setText(String.format(\"Cambio de %s\",(gl.modo_cambio==1?\"ubicación N.D.\":\"estado N.D\")));\r\n\r\n            ProgressDialog(\"Cargando forma\");\r\n\r\n            setHandlers();\r\n\r\n            Load();\r\n\r\n        } catch (Exception ex) {\r\n            addlog(new Object() {\r\n            }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n            msgbox(new Object() {\r\n            }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Load() {\r\n\r\n        try {\r\n            if(gl.modo_cambio==1){\r\n                execws(1);\r\n            }else{\r\n                txtUbicOrigen.requestFocus();\r\n                progress.cancel();\r\n            }\r\n        } catch (Exception ex) {\r\n            addlog(new Object() {\r\n            }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n            msgbox(new Object() {\r\n            }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void setHandlers() {\r\n\r\n        cmbPresentacion.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n                try {\r\n\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n\r\n                    if (spinlabel!=null){\r\n                        spinlabel.setTextColor(Color.BLACK);\r\n                        spinlabel.setPadding(5, 0, 0, 0);\r\n                        spinlabel.setTextSize(18);\r\n                        spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                        cvPresID = Integer.valueOf( cmbPresentacion.getSelectedItem().toString().split(\" - \")[0].toString());\r\n                        LlenaLotes();\r\n                    }\r\n\r\n                } catch (Exception ex) {\r\n                    addlog(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n                    msgbox(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parentView) {\r\n                return;\r\n            }\r\n\r\n        });\r\n\r\n        cmbLote.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n                try {\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n\r\n                    if (spinlabel!=null){\r\n                        spinlabel.setTextColor(Color.BLACK);\r\n                        spinlabel.setPadding(5, 0, 0, 0);\r\n                        spinlabel.setTextSize(18);\r\n                        spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                        lote = stockResList.items.get(position).Lote;\r\n                        LlenaFechaVence();\r\n                    }\r\n\r\n                } catch (Exception ex) {\r\n                    addlog(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n                    msgbox(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parentView) {\r\n                return;\r\n            }\r\n\r\n        });\r\n\r\n        cmbVence.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n                try {\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n\r\n                    if (spinlabel!=null){\r\n                        spinlabel.setTextColor(Color.BLACK);\r\n                        spinlabel.setPadding(5, 0, 0, 0);\r\n                        spinlabel.setTextSize(18);\r\n                        spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                        fechaVence = stockResList.items.get(position).getFecha_Vence();\r\n\r\n                        LlenaEstadoOrigen();\r\n\r\n                    }\r\n\r\n                } catch (Exception ex) {\r\n                    addlog(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n                    msgbox(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parentView) {\r\n                return;\r\n            }\r\n\r\n        });\r\n\r\n        cmbEstadoOrigen.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n                try {\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n\r\n                    if (spinlabel!=null){\r\n                        spinlabel.setTextColor(Color.BLACK);\r\n                        spinlabel.setPadding(5, 0, 0, 0);\r\n                        spinlabel.setTextSize(18);\r\n                        spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                        cvEstOrigen = productoEstadoOrigenList.items.get(position).getIdProductoEstado();\r\n                    }\r\n\r\n                } catch (Exception ex) {\r\n                    addlog(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n                    msgbox(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parentView) {\r\n                return;\r\n            }\r\n\r\n        });\r\n\r\n        cmbEstadoDestino.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {\r\n                try {\r\n                    TextView spinlabel = (TextView) parentView.getChildAt(0);\r\n\r\n                    if (spinlabel!=null){\r\n                        spinlabel.setTextColor(Color.BLACK);\r\n                        spinlabel.setPadding(5, 0, 0, 0);\r\n                        spinlabel.setTextSize(18);\r\n                        spinlabel.setTypeface(spinlabel.getTypeface(), Typeface.BOLD);\r\n\r\n                        cvEstDestino = productoEstadoDestinoList.items.get(position).IdEstado;\r\n                    }\r\n\r\n                } catch (Exception ex) {\r\n                    addlog(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n                    msgbox(new Object() {\r\n                    }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parentView) {\r\n                return;\r\n            }\r\n\r\n        });\r\n\r\n        txtCodigoPrd.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if ((event.getAction() == KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER)) {\r\n                    llenaDatosProducto();\r\n                }\r\n\r\n                return false;\r\n            }\r\n        });\r\n\r\n        txtLicPlate.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if ((event.getAction() == KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER)) {\r\n                     Procesa_Lp();\r\n                }\r\n\r\n                return false;\r\n            }\r\n        });\r\n\r\n        txtUbicOrigen.setOnKeyListener(new View.OnKeyListener() {\r\n\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (event.getAction() == KeyEvent.ACTION_DOWN) {\r\n                    switch (keyCode) {\r\n                        case KeyEvent.KEYCODE_ENTER:\r\n                            inicializaTarea(false);\r\n                            validaOrigen();\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        txtUbicOrigen.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View v, boolean hasFocus) {\r\n                if(!hasFocus) {\r\n                    if (txtUbicOrigen.getText().toString().equals(\"\") ||\r\n                            txtUbicOrigen.getText().toString().isEmpty() ||\r\n                            txtUbicOrigen.getText().toString()==null){\r\n\r\n                        if(validarDatos){\r\n                            lblUbicCompleta.setText(\"\");\r\n                            mu.msgbox(\"Debe ingresar la ubicación origen\");\r\n\r\n                            final Handler cbhandler = new Handler();\r\n                            cbhandler.postDelayed(new Runnable() {\r\n                                @Override\r\n                                public void run() {\r\n                                    txtUbicOrigen.requestFocus();\r\n                                }\r\n                            }, 500);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        txtUbicDestino.setOnKeyListener(new View.OnKeyListener() {\r\n\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (event.getAction() == KeyEvent.ACTION_DOWN) {\r\n                    switch (keyCode) {\r\n                        case KeyEvent.KEYCODE_ENTER:\r\n                            validaDestino();\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        txtUbicDestino.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View v, boolean hasFocus) {\r\n                if(!hasFocus) {\r\n                    if (txtUbicDestino.getText().toString().equals(\"\") ||\r\n                            txtUbicDestino.getText().toString().isEmpty() ||\r\n                            txtUbicDestino.getText().toString()==null){\r\n\r\n                        if (validarDatos){\r\n                            mu.msgbox(\"Debe ingresar la ubicación destino\");\r\n\r\n                            final Handler cbhandler = new Handler();\r\n                            cbhandler.postDelayed(new Runnable() {\r\n                                @Override\r\n                                public void run() {\r\n                                    txtUbicDestino.requestFocus();\r\n                                }\r\n                            }, 500);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        txtCantidad.setOnKeyListener(new View.OnKeyListener() {\r\n\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (event.getAction() == KeyEvent.ACTION_DOWN) {\r\n                    switch (keyCode) {\r\n                        case KeyEvent.KEYCODE_ENTER:\r\n\r\n                            try {\r\n\r\n                                String Cantwithformat =txtCantidad.getText().toString();\r\n                                Cantwithformat = Cantwithformat.replace(\",\",\"\");\r\n\r\n                                if(Double.valueOf(Cantwithformat)>0) {\r\n                                    txtPeso.requestFocus();\r\n                                }\r\n                            } catch (NumberFormatException e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        txtPeso.setOnKeyListener(new View.OnKeyListener() {\r\n\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (event.getAction() == KeyEvent.ACTION_DOWN) {\r\n                    switch (keyCode) {\r\n                        case KeyEvent.KEYCODE_ENTER:\r\n\r\n                            try {\r\n\r\n                                String Cantwithformat =txtPeso.getText().toString();\r\n                                Cantwithformat = Cantwithformat.replace(\",\",\"\");\r\n\r\n                                if(Double.valueOf(Cantwithformat)>0) {\r\n                                    txtUbicDestino.requestFocus();\r\n                                }\r\n                            } catch (NumberFormatException e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n\r\n    private void LlenaPresentaciones() {\r\n\r\n        String valor;\r\n\r\n        try {\r\n\r\n            cmbPresentacionList.clear();\r\n\r\n            List AuxList = stream(stockResList.items)\r\n                    .where(c -> c.IdProducto == cvProdID)\r\n                    .toList();\r\n\r\n            presentacionList.items = AuxList;\r\n\r\n            for (int i = 0; i < presentacionList.items.size(); i++) {\r\n\r\n                valor = presentacionList.items.get(i).getIdPresentacion() + \" - \" +\r\n                        presentacionList.items.get(i).getNombre_Presentacion().toString();\r\n\r\n                if (cmbPresentacionList.indexOf(valor)==-1){\r\n                    cmbPresentacionList.add(valor);\r\n                }\r\n\r\n            }\r\n\r\n            ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, cmbPresentacionList);\r\n            dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n            cmbPresentacion.setAdapter(dataAdapter);\r\n\r\n            if (cmbPresentacionList.size() > 0) {\r\n\r\n                if (escaneoPallet && productoList !=null ){\r\n                    int sel = cmbPresentacionList.indexOf(BeStockPallet.getIdPresentacion() + \" - \" +\r\n                                                          BeStockPallet.getNombre_Presentacion());\r\n                    cmbPresentacion.setSelection(sel);\r\n                    cmbPresentacion.setEnabled(false);\r\n                }else{\r\n                    cmbPresentacion.setSelection(0);\r\n                    if (cmbPresentacionList.size() == 1){\r\n                        cmbPresentacion.setEnabled(false);\r\n                    }else{\r\n                        cmbPresentacion.setEnabled(true);\r\n                    }\r\n                }\r\n\r\n                cvPresID =Integer.valueOf( cmbPresentacion.getSelectedItem().toString().split(\" - \")[0].toString());\r\n\r\n            }else{\r\n                LlenaLotes();\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n            addlog(new Object() {\r\n            }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n            msgbox(new Object() {\r\n            }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void LlenaLotes() {\r\n\r\n        String valor;\r\n\r\n        try {\r\n\r\n            cmbLoteList.clear();\r\n\r\n                cvLote = \"\";\r\n\r\n                cmbLote.setVisibility(BeProductoUbicacion.Control_lote ? View.VISIBLE : View.GONE);\r\n                lblLote.setVisibility(BeProductoUbicacion.Control_lote ? View.VISIBLE : View.GONE);\r\n\r\n                if (BeProductoUbicacion.Control_lote) {\r\n\r\n                    try {\r\n\r\n                        List AuxList;\r\n\r\n                        //if (escaneoPallet && productoList != null) {\r\n                        //Quité esta validación porque en stockResList ya está filtrado por LicensePlate\r\n\r\n                        AuxList = stream(stockResList.items)\r\n                                .where(c -> c.IdProducto == cvProdID)\r\n                                .where(c -> c.getIdPresentacion() == cvPresID)\r\n                                .toList();\r\n\r\n                        if (AuxList == null) {\r\n                            cvLote = \"\";\r\n                            LlenaFechaVence();\r\n                        } else {\r\n\r\n                            lotesList.items = AuxList;\r\n\r\n                            for (int i = 0; i < lotesList.items.size(); i++) {\r\n\r\n                                valor = lotesList.items.get(i).Lote;\r\n\r\n                                if (cmbLoteList.indexOf(valor)==-1){\r\n                                    cmbLoteList.add(valor);\r\n                                }\r\n                            }\r\n\r\n                            ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, cmbLoteList);\r\n                            dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                            cmbLote.setAdapter(dataAdapter);\r\n\r\n                            if (cmbLoteList.size() > 0) {\r\n                                cmbLote.setSelection(0);\r\n\r\n                                cvLote = cmbLote.getSelectedItem().toString();\r\n                            }\r\n                        }\r\n                    } catch (Exception ex) {\r\n                        cvLote = \"\";\r\n                        msgbox(\"Llena lote : \" + ex.getMessage());\r\n                        LlenaFechaVence();\r\n                    }\r\n\r\n                } else {\r\n                    LlenaFechaVence();\r\n                }\r\n\r\n        } catch (Exception ex) {\r\n            addlog(new Object() {\r\n            }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n            msgbox(new Object() {\r\n            }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void LlenaFechaVence() {\r\n\r\n        String valor;\r\n\r\n        try {\r\n\r\n            cmbVenceList.clear();\r\n\r\n            cvVence = \"01/01/1900\";\r\n\r\n            cmbVence.setVisibility(BeProductoUbicacion.Control_vencimiento ? View.VISIBLE : View.GONE);\r\n            lblVence.setVisibility(BeProductoUbicacion.Control_vencimiento ? View.VISIBLE : View.GONE);\r\n\r\n            if (BeProductoUbicacion.Control_vencimiento) {\r\n\r\n                try {\r\n\r\n                    Date currentTime = Calendar.getInstance().getTime();\r\n\r\n                    if (cmbLote.getAdapter()!=null && cmbLote.getAdapter().getCount()>0){\r\n                        cvLote = cmbLote.getSelectedItem().toString();\r\n                    }\r\n\r\n                    cvVence =app.strFecha(currentTime);\r\n\r\n                    List AuxList;\r\n\r\n                    if (BeProductoUbicacion.Control_lote) {\r\n                        //if (escaneoPallet && productoList != null) {\r\n                        //Quité esta validación porque en stockResList ya está filtrado por LicensePlate\r\n\r\n                        AuxList = stream(stockResList.items)\r\n                                .where(c -> c.IdProducto == cvProdID)\r\n                                .where(c -> c.getIdPresentacion() == cvPresID)\r\n                                .where(c -> c.getLote() == cvLote)\r\n                                .toList();\r\n\r\n                    } else {\r\n                        //if (escaneoPallet && productoList != null) {\r\n                        //Quité esta validación porque en stockResList ya está filtrado por LicensePlate\r\n\r\n                        AuxList = stream(stockResList.items)\r\n                                .where(c -> c.IdProducto == cvProdID)\r\n                                .where(c -> c.getIdPresentacion() == cvPresID)\r\n                                .toList();\r\n                    }\r\n\r\n                    if (AuxList == null) {\r\n                        cvVence = \"01/01/1900\";\r\n                        LlenaEstadoOrigen();\r\n                    } else {\r\n\r\n                        venceList.items = AuxList;\r\n\r\n                        for (int i = 0; i < venceList.items.size(); i++) {\r\n\r\n                            valor =app.strFecha(venceList.items.get(i).Fecha_Vence);\r\n\r\n                            if (cmbVenceList.indexOf(valor)==-1){\r\n                                cmbVenceList.add(valor);\r\n                            }\r\n                        }\r\n\r\n                        ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, cmbVenceList);\r\n                        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                        cmbVence.setAdapter(dataAdapter);\r\n\r\n                        if (cmbVenceList.size() > 0) {\r\n                            cmbVence.setSelection(0);\r\n                            cvVence = cmbVence.getSelectedItem().toString();\r\n                        }\r\n                    }\r\n                } catch (Exception ex) {\r\n                    cvVence = \"01/01/1900\";\r\n                    msgbox(\"Llena vence : \" + ex.getMessage());\r\n                    LlenaEstadoOrigen();\r\n                }\r\n\r\n\r\n            } else {\r\n               LlenaEstadoOrigen();\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n            addlog(new Object() {\r\n            }.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n            msgbox(new Object() {\r\n            }.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void LlenaEstadoOrigen() {\r\n\r\n        String valor;\r\n\r\n        try {\r\n\r\n            cmbEstadoOrigenList.clear();\r\n\r\n            List AuxList;\r\n\r\n            if (BeProductoUbicacion.Control_vencimiento && !cvVence.equals(\"01/01/1900\")) {\r\n\r\n                if (BeProductoUbicacion.Control_lote) {\r\n\r\n                    AuxList = stream(stockResList.items)\r\n                            .where(c -> c.IdProducto == cvProdID)\r\n                            .where(c -> c.getIdPresentacion() == cvPresID)\r\n                            .where(c -> c.getLote() == cvLote)\r\n                            .where(c -> (app.strFecha(c.Fecha_Vence).equals(cvVence)))\r\n                            .toList();\r\n\r\n                } else {\r\n\r\n                    AuxList = stream(stockResList.items)\r\n                            .where(c -> c.IdProducto == cvProdID)\r\n                            .where(c -> c.getIdPresentacion() == cvPresID)\r\n                            .where(c -> (app.strFecha(c.Fecha_Vence).equals(cvVence)))\r\n                            .toList();\r\n                }\r\n\r\n            }else{\r\n\r\n                if (BeProductoUbicacion.Control_lote) {\r\n\r\n                    AuxList = stream(stockResList.items)\r\n                            .where(c -> c.IdProducto == cvProdID)\r\n                            .where(c -> c.getIdPresentacion() == cvPresID)\r\n                            .where(c -> c.getLote() == cvLote)\r\n                            .toList();\r\n\r\n                } else {\r\n\r\n                    AuxList = stream(stockResList.items)\r\n                            .where(c -> c.IdProducto == cvProdID)\r\n                            .where(c -> c.getIdPresentacion() == cvPresID)\r\n                            .toList();\r\n                }\r\n\r\n            }\r\n\r\n            if (AuxList == null) {\r\n                cvEstOrigen = 0;\r\n                muestraCantidad();\r\n            } else {\r\n\r\n                productoEstadoOrigenList.items = AuxList;\r\n\r\n                for (int i = 0; i < productoEstadoOrigenList.items.size(); i++) {\r\n\r\n                    valor = productoEstadoOrigenList.items.get(i).getIdProductoEstado() + \" - \" +\r\n                            productoEstadoOrigenList.items.get(i).getNomEstado();\r\n\r\n                    if (cmbEstadoOrigenList.indexOf(valor)==-1){\r\n                        cmbEstadoOrigenList.add(valor);\r\n                    }\r\n                }\r\n\r\n                ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, cmbEstadoOrigenList);\r\n                dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                cmbEstadoOrigen.setAdapter(dataAdapter);\r\n\r\n                if (cmbEstadoOrigenList.size() > 0) {\r\n\r\n                    cmbEstadoOrigen.setSelection(0);\r\n                    cvEstOrigen = Integer.valueOf(cmbEstadoOrigen.getSelectedItem().toString().split(\" - \")[0].toString());\r\n                    muestraCantidad();\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n            cvEstOrigen = 0;\r\n            muestraCantidad();\r\n\r\n            addlog(new Object() {}.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void LlenaEstadoDestino(int idPropietario) {\r\n        try {\r\n            cmbEstadoDestinoList.clear();\r\n\r\n            for (int i = 0; i < productoEstadoDestinoList.items.size(); i++) {\r\n                cmbEstadoDestinoList.add(productoEstadoDestinoList.items.get(i).Nombre);\r\n            }\r\n\r\n            ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, cmbEstadoDestinoList);\r\n            dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n            cmbEstadoDestino.setAdapter(dataAdapter);\r\n\r\n            if (cmbEstadoDestinoList.size() > 0) cmbEstadoDestino.setSelection(0);\r\n\r\n            if (escaneoPallet && productoList != null) {\r\n                //LLama este procedimiento del WS Get_Productos_By_IdUbicacion_And_LicPlate\r\n                execws(6);\r\n            } else {\r\n                //LLama este procedimiento del WS Get_Productos_By_IdUbicacion\r\n                execws(7);\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            mu.msgbox(e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void Procesa_Lp() {\r\n        try {\r\n\r\n            progress.setMessage(\"Cargando datos del producto\");\r\n            progress.show();\r\n\r\n            String pbarra;\r\n\r\n            pbarra = txtCodigoPrd.getText().toString();\r\n\r\n            cvLote = \"\";\r\n            cvPresID = 0;\r\n            cvEstOrigen = 0;\r\n            cvProdID = 0;\r\n            cvVence = \"01/01/1900\";\r\n\r\n            String vStarWithParameter = \"$\";\r\n\r\n            //Comentario: La barra de pallet puede comenzar con $ y no con (01)\r\n            if (txtLicPlate.getText().toString().startsWith(\"$\") ||\r\n                    txtLicPlate.getText().toString().startsWith(\"(01)\") ||\r\n                    txtLicPlate.getText().toString().startsWith(vStarWithParameter)) {\r\n\r\n                //Es una barra de pallet válida por tamaño\r\n                int vLengthBarra = txtLicPlate.getText().toString().length();\r\n\r\n                // if (vLengthBarra >= 16) {\r\n\r\n                escaneoPallet = true;\r\n\r\n                pLicensePlate = txtLicPlate.getText().toString().replace(\"$\", \"\");\r\n\r\n                //Llama al método del WS Get_Stock_By_Lic_Plate\r\n\r\n                execws(18);\r\n\r\n                progress.cancel();\r\n\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n            progress.cancel();\r\n            msgbox(\"Error \" + ex.getMessage());\r\n        }\r\n        progress.cancel();\r\n    }\r\n\r\n    private void llenaDatosProducto() {\r\n        try {\r\n\r\n            progress.setMessage(\"Cargando datos del producto\");\r\n            progress.show();\r\n\r\n            String pbarra;\r\n\r\n            pbarra = txtCodigoPrd.getText().toString();\r\n\r\n            cvLote = \"\";\r\n            cvPresID = 0;\r\n            cvEstOrigen = 0;\r\n            cvProdID = 0;\r\n            cvVence = \"01/01/1900\";\r\n\r\n            String vStarWithParameter = \"$\";\r\n\r\n            //Comentario: La barra de pallet puede comenzar con $ y no con (01)\r\n            if (txtLicPlate.getText().toString().startsWith(\"$\") ||\r\n                    txtLicPlate.getText().toString().startsWith(\"(01)\") ||\r\n                    txtLicPlate.getText().toString().startsWith(vStarWithParameter)) {\r\n\r\n                //Es una barra de pallet válida por tamaño\r\n                int vLengthBarra = txtLicPlate.getText().toString().length();\r\n\r\n               // if (vLengthBarra >= 16) {\r\n\r\n                    escaneoPallet = true;\r\n\r\n                    pLicensePlate = txtLicPlate.getText().toString().replace(\"$\", \"\");\r\n\r\n                    //Llama al método del WS Get_Stock_By_Lic_Plate\r\n\r\n                    execws(17);\r\n\r\n                //}\r\n\r\n            } else {\r\n                escaneoPallet = false;\r\n\r\n                //Llama al método del WS Get_BeProducto_By_Codigo_For_HH\r\n                execws(3);\r\n            }\r\n\r\n        } catch (Exception ex) {\r\n            progress.cancel();\r\n            msgbox(\"Error \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void muestraCantidad(){\r\n\r\n        List AuxList;\r\n        Date currentTime = Calendar.getInstance().getTime();\r\n\r\n        Calendar calendar = Calendar.getInstance();\r\n        calendar.setTime(currentTime);\r\n        calendar.add(Calendar.YEAR, 1);\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo la cantidad disponible del producto\");\r\n            progress.show();\r\n\r\n            if (escaneoPallet && productoList != null) {\r\n                if(cmbVence.getAdapter() != null){\r\n                    cvVence = cmbVence.getSelectedItem().toString();\r\n                    if (cmbLote.getAdapter().getCount() == 1) {\r\n                        cmbVence.setEnabled(false);\r\n                    }\r\n                } else{\r\n                    cvVence = \"01/01/1900\";\r\n                }\r\n            }else {\r\n                if(cmbVence.getAdapter() != null){\r\n                    cvVence = cmbVence.getSelectedItem().toString();\r\n                    cmbVence.setEnabled(true);\r\n                }  else{\r\n                    cvVence = \"01/01/1900\";\r\n                }\r\n            }\r\n\r\n        }catch(Exception ex){\r\n            cvVence = app.strFecha(calendar.getTime());\r\n        }\r\n\r\n        try {\r\n            if (escaneoPallet & productoList != null) {\r\n                if(cmbEstadoOrigen.getAdapter() != null){\r\n                    cvEstOrigen = BeStockPallet.IdProductoEstado;\r\n                    if (cmbEstadoOrigen.getAdapter().getCount() == 1) {\r\n                        cmbEstadoOrigen.setEnabled(false);\r\n                    }\r\n                }else{\r\n                    cvEstOrigen =0;\r\n                }\r\n\r\n            }else {\r\n\r\n                if(cmbEstadoOrigen.getAdapter() != null){\r\n\r\n                    if (!cmbEstadoOrigen.getSelectedItem().toString().isEmpty()){\r\n                        cvEstOrigen = Integer.valueOf(cmbEstadoOrigen.getSelectedItem().toString().split(\" - \")[0]);\r\n                    }else {\r\n                        cvEstOrigen =0;\r\n                    }\r\n\r\n                    cmbEstadoOrigen.setEnabled(true);\r\n                }else{\r\n                    cvEstOrigen =0;\r\n                }\r\n\r\n            }\r\n        }catch(Exception ex){\r\n            cvEstOrigen =0;\r\n        }\r\n\r\n        vCantidadAUbicar =0;\r\n        vCantidadDisponible =0;\r\n        lblCant.setText(\"Max : \" + mu.frmdecimal(vCantidadDisponible, 6));\r\n\r\n        if (gl.gCProdAnterior.equals(txtCodigoPrd.getText())  && gl.gCUbicAnterior.equals(txtUbicOrigen.getText().toString()))\r\n        {\r\n            try{\r\n                int IndexAux;\r\n\r\n                if (gl.gCEstadoAnterior != -1 && cmbEstadoOrigen.getAdapter()!=null  && cmbEstadoOrigen.getAdapter().getCount()>0) {\r\n                    IndexAux = cmbEstadoOrigenList.indexOf(gl.gCEstadoAnterior+ \" - \" + gl.gCNomEstadoAnterior);\r\n                    cmbEstadoOrigen.setSelection(IndexAux);\r\n                }\r\n\r\n                if (gl.gCFechaAnterior.equals(\"01/01/1900\") && cmbVence.getAdapter()!=null  && cmbVence.getAdapter().getCount()>0) {\r\n                    IndexAux = cmbVenceList.indexOf(gl.gCFechaAnterior);\r\n                    cmbVence.setSelection(IndexAux);\r\n                }\r\n\r\n                if (!gl.gCLoteAnterior.isEmpty() && cmbLote.getAdapter()!=null  && cmbLote.getAdapter().getCount()>0) {\r\n                    IndexAux = cmbLoteList.indexOf(gl.gCLoteAnterior);\r\n                    cmbLote.setSelection(IndexAux);\r\n                }\r\n\r\n                if (gl.gCPresAnterior != -1 && cmbPresentacion.getAdapter()!=null && cmbPresentacion.getAdapter().getCount()>0) {\r\n                    IndexAux = cmbPresentacionList.indexOf( gl.gCPresAnterior + \" - \" + gl.gCNomPresAnterior);\r\n                    cmbPresentacion.setSelection(IndexAux);\r\n                }\r\n\r\n            }catch(Exception ex){\r\n                addlog(new Object() {}.getClass().getEnclosingMethod().getName(), ex.getMessage(), \"\");\r\n                msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n            }\r\n        }\r\n\r\n        try{\r\n\r\n            //#CKFK 20200414 quité la condiciones de si se había escaneado un pallet porque el license plate se filtra al inicio\r\n            //cuando se obtiene el stockResList\r\n            AuxList = stream(stockResList.items)\r\n                    .where(c -> c.IdProducto == cvProdID)\r\n                    .where(c -> c.IdPresentacion == cvPresID)\r\n                    .where(c -> c.Lote.equals(cvLote))\r\n                    .where(c -> c.Atributo_variante_1 == (cvAtrib == null ? \"\" : cvAtrib))\r\n                    .where(c -> (cvEstOrigen > 0 ? c.IdProductoEstado == cvEstOrigen : c.IdProductoEstado >= 0))\r\n                    .where(c -> (BeProductoUbicacion.Control_vencimiento?app.strFecha(c.Fecha_Vence).equals(cvVence):1==1))\r\n                    .toList();\r\n\r\n            if (AuxList == null) {\r\n                return;\r\n            }\r\n\r\n        }catch(Exception ex){\r\n            msgbox(\"Llena cant : \" + ex.getMessage()) ;\r\n            return;\r\n        }\r\n\r\n        try{\r\n\r\n            clsBeVW_stock_resList tmpStockResList = new clsBeVW_stock_resList();\r\n\r\n            tmpStockResList.items = AuxList;\r\n\r\n            if (tmpStockResList.items.size() >0){\r\n                cvStockID = tmpStockResList.items.get(0).getIdStock();\r\n                vCantidadAUbicar =tmpStockResList.items.get(0).getCantidadUmBas() - tmpStockResList.items.get(0).CantidadReservadaUMBas;\r\n                vFactorPres = (tmpStockResList.items.get(0).getFactor()==0?1:tmpStockResList.items.get(0).getFactor());\r\n                vPesoAUbicar = tmpStockResList.items.get(0).getPeso();\r\n            }else{\r\n                vCantidadAUbicar = 0;\r\n                cvStockID =0;\r\n            }\r\n\r\n            if( escaneoPallet && productoList != null) {\r\n\r\n                if(BeStockPallet.Factor >0)\r\n                {\r\n                    vCantidadAUbicar = (vCantidadAUbicar / BeStockPallet.Factor);\r\n                }\r\n            }else if (cvPresID != 0) {\r\n                if( vFactorPres >0){\r\n                    vCantidadAUbicar = (vCantidadAUbicar / vFactorPres);\r\n                }\r\n            }\r\n\r\n            vCantidadDisponible =vCantidadAUbicar;\r\n\r\n            if (vCantidadDisponible==0){\r\n                msgbox(\"No hay existencias disponibles de este producto en esta ubicación o las existentes están reservadas\");\r\n                inicializaTarea(false);\r\n                return;\r\n            }else{\r\n                lblCant.setText(mu.frmdecimal(vCantidadDisponible, gl.gCantDecDespliegue));\r\n                txtCantidad.setText(mu.frmdecimal(vCantidadAUbicar, gl.gCantDecDespliegue));\r\n                txtPeso.setText(mu.frmdecimal(vPesoAUbicar, gl.gCantDecDespliegue));\r\n                txtCantidad.selectAll();\r\n            }\r\n\r\n            txtUbicDestino.setEnabled(true);\r\n            txtCantidad.setEnabled(true);\r\n            txtPeso.setEnabled(true);\r\n\r\n            txtCantidad.requestFocus();\r\n\r\n            fechaVenceU = app.strFechaXMLCombo(cvVence);\r\n            execws(15);\r\n\r\n        }catch(Exception ex){\r\n            msgbox(\"Llena cantidad \" + ex.getMessage());\r\n        }finally {\r\n            progress.cancel();\r\n        }\r\n\r\n    }\r\n\r\n    public void ProgressDialog(String mensaje){\r\n        progress=new ProgressDialog(this);\r\n        progress.setMessage(mensaje);\r\n        progress.setProgressStyle(ProgressDialog.STYLE_SPINNER);\r\n        progress.setIndeterminate(true);\r\n        progress.setProgress(0);\r\n        progress.show();\r\n    }\r\n\r\n    private void execws(int callbackvalue) {\r\n        ws.callback=callbackvalue;\r\n        ws.execute();\r\n    }\r\n\r\n    @Override\r\n    public void wsCallBack(Boolean throwing,String errmsg,int errlevel) {\r\n        try {\r\n            if (throwing) throw new Exception(errmsg);\r\n\r\n            switch (ws.callback) {\r\n                case 1:\r\n                    processUbicRecepcion();\r\n                    break;\r\n                case 2:\r\n                    processMotivosUbiHH();\r\n                    break;\r\n                case 3:\r\n                    processProducto();\r\n                    break;\r\n                case 4:\r\n                    processProdEstado();\r\n                    break;\r\n                case 5:\r\n                    processStockLP();\r\n                    break;\r\n                case 6:\r\n                    processProductoUbicLP();\r\n                    break;\r\n                case 7:\r\n                    processProductoUbic();\r\n                    break;\r\n                case 8:\r\n                    processNuevoCorrelativoLP();\r\n                    break;\r\n                case 9:\r\n                    processIdNuevoPallet();\r\n                    break;\r\n                case 10:\r\n                    processEstadosProp();\r\n                    break;\r\n                case 11:\r\n                    processUbicOrigen();\r\n                    break;\r\n                case 12:\r\n                    processUbicDestino();\r\n                    break;\r\n                case 13:\r\n                    processCambio();\r\n                    break;\r\n                case 14:\r\n                    processCambioUbicEstHH();\r\n                    break;\r\n                case 15:\r\n                    processUbicacionDestSugerida();\r\n                    break;\r\n                case 16:\r\n                    processUbicDestinoSug();\r\n                    break;\r\n                case 17:\r\n                    processStockLP_AndCodigo();\r\n                    break;\r\n                case 18:\r\n                    processExisteLp();\r\n                    break;\r\n                case 19:\r\n                    processPalletNoEstandar();\r\n                    break;\r\n                case 20:\r\n                    processTienePosiciones();\r\n                    break;\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n\r\n    public class WebServiceHandler extends WebService {\r\n\r\n        public WebServiceHandler(PBase Parent,String Url) {\r\n            super(Parent,Url);\r\n        }\r\n\r\n        @Override\r\n        public void wsExecute(){\r\n            try {\r\n                switch (ws.callback) {\r\n                    case 1://Obtiene la ubicacion por defecto de la recepción para el cambio de ubicacion o estado ciego\r\n                        callMethod(\"Get_IdUbic_Ciega_Recepcion_By_IdBodega\",\"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 2://Obtiene los motivos de ubicación\r\n                        callMethod(\"Get_Motivos_Ubicacion_For_HH\");\r\n                        break;\r\n                    case 3://Obtiene el producto\r\n                        callMethod(\"Get_BeProducto_By_Codigo_For_HH\",\"pCodigo\",txtCodigoPrd.getText().toString(),\r\n                                \"IdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 4://Obtiene el estado del producto\r\n                        callMethod(\"Get_Single_By_IdEstado\",\"pIdEstado\",gl.tareadet.IdEstadoDestino);\r\n                        break;\r\n                    case 5://Obtiene el producto que coincide con el License Plate ingresado en una bodega\r\n                        callMethod(\"Get_Stock_By_Lic_Plate\",\"pLicensePlate\",pLicensePlate,\r\n                                \"pIdBodega\", gl.IdBodega);\r\n                        break;\r\n                    case 6://Obtiene el stock de un producto en una Ubicacion con un License Plate\r\n                        callMethod(\"Get_Productos_By_IdUbicacion_And_LicPlate\",\r\n                                \"pIdUbicacion\", txtUbicOrigen.getText().toString(),\r\n                                \"pIdProductoBodega\",BeProductoUbicacion.IdProductoBodega,\r\n                                \"pLicPlate\",BeStockPallet.Lic_plate);\r\n\r\n                        break;\r\n                    case 7://Obtiene el stock de un producto en una ubicacion\r\n                        callMethod(\"Get_Productos_By_IdUbicacion\",\r\n                                \"pIdUbicacion\", txtUbicOrigen.getText().toString(),\r\n                                \"pIdProductoBodega\",BeProductoUbicacion.IdProductoBodega);\r\n                        break;\r\n                    case 8://Obtiene el nuevo correlativo de un License Plate\r\n                        callMethod(\"Get_Nuevo_Correlativo_LicensePlate\",\r\n                                \"pIdEmpresa\", gl.IdEmpresa,\r\n                                \"pIdBodega\",gl.IdBodega,\r\n                                \"pIdPropietario\",BeStockPallet.IdPropietario,\r\n                                \"pIdProducto\",BeStockPallet.IdProducto);\r\n\r\n                        break;\r\n                    case 9://Actualiza la tabla trans_movimientos\r\n                        callMethod(\"Set_Nuevo_Pallet_Id\",\r\n                                \"pIdBodega\",gl.IdBodega,\r\n                                \"pIdUsuario\",gl.OperadorBodega.getIdOperador(),\r\n                                \"pLicPlateAnt\",BeStockPallet.getLic_plate(),\r\n                                \"pLicPlateNuevo\", vNuevoPalletId,\r\n                                \"pIdStockNuevo\", vIdStockNuevo,\r\n                                \"pIdMovimientoNuevo\",vIdMovimientoNuevo);\r\n                        break;\r\n                    case 10://Obtiene los estados por propietario\r\n                        callMethod(\"Get_Estados_By_IdPropietario\",\r\n                                \"pIdPropietario\",BeProductoUbicacion.getIdPropietario());\r\n                        break;\r\n                    case 11://Valida la ubicación origen\r\n                        callMethod(\"Get_Ubicacion_By_Codigo_Barra_And_IdBodega\",\"pBarra\",txtUbicOrigen.getText().toString(),\r\n                                \"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 12://Valida la ubicación destino\r\n                        callMethod(\"Get_Ubicacion_By_Codigo_Barra_And_IdBodega\",\"pBarra\",txtUbicDestino.getText().toString(),\r\n                                \"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 13:\r\n                        callMethod(\"Actualizar_Trans_Ubic_HH_Det\",\"oBeTrans_ubic_hh_det\", gl.tareadet,\r\n                                \"pMovimiento\",gMovimientoDet);\r\n                        break;\r\n                    case 14:\r\n                        //#CKFK 20201229 Agregué campo Pallet_No_Estandar en la vista de stock_res\r\n                        callMethod(\"Aplica_Cambio_Estado_Ubic_HH\",\r\n                                \"pMovimiento\",gMovimientoDet,\r\n                                \"pStockRes\",vStockRes,\r\n                                \"pIdStockNuevo\",vIdStockNuevo,\r\n                                \"pIdMovimientoNuevo\",vIdMovimientoNuevo,\r\n                                \"pPosiciones\",vPosiciones);\r\n                        break;\r\n                    case 15:\r\n                        callMethod(\"ml_get_ubicacion_sugerida\",\"pIdProducto\",cvProdID,\r\n                                \"pIdBodega\",gl.IdBodega,\r\n                                \"pIdProductoBodega\",cvProd.IdProductoBodega,\r\n                                \"pLote\",cvLote,\r\n                                \"pFechaVence\",fechaVenceU,\r\n                                \"pIdProductoEstado\",cvEstOrigen,\r\n                                \"pIdUmBas\",cvUMBID,\r\n                                \"pIdPresentacion\",cvPresID);\r\n                        break;\r\n                    case 16://Obtiene descripción de la ubicación destino sugerida\r\n                        callMethod(\"Get_Ubicacion_By_Codigo_Barra_And_IdBodega\",\"pBarra\",txtUbicDestino.getText().toString(),\r\n                                \"pIdBodega\",gl.IdBodega);\r\n                        break;\r\n                    case 17://Obtiene el producto que coincide con el License Plate ingresado en una bodega\r\n                        callMethod(\"Get_Stock_By_Lic_Plate_And_Codigo\",\"pLicensePlate\",pLicensePlate,\"pCodigo\",txtCodigoPrd.getText().toString(),\r\n                                \"pIdBodega\", gl.IdBodega);\r\n                        break;\r\n                    case 18:\r\n                        callMethod(\"Existe_Lp\",\"pLic_Plate\",pLicensePlate);\r\n                        break;\r\n                    case 19:\r\n                        callMethod(\"Es_Pallet_No_Estandar\",\"pStock\",pStock);\r\n                        break;\r\n                    case 20:\r\n                        callMethod(\"Tiene_Posiciones\",\"pStock\",pStock);\r\n                        break;\r\n                }\r\n\r\n            } catch (Exception e) {\r\n                error=e.getMessage();errorflag =true;msgbox(error);\r\n                btnGuardarCiega.setVisibility(View.VISIBLE);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void processMotivosUbiHH(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo Motivos de ubicación en HH\");\r\n\r\n            pListBeMotivoUbicacion = xobj.getresult(clsBeMotivo_ubicacionList.class,\"Get_Motivos_Ubicacion_For_HH\");\r\n\r\n        } catch (Exception e) {\r\n            msgbox(new Object() {\r\n            }.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processUbicRecepcion(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo la ubicación por defecto de la recepción\");\r\n            progress.show();\r\n\r\n            cvUbicOrigID = (Integer) xobj.getSingle(\"Get_IdUbic_Ciega_Recepcion_By_IdBodegaResult\",int.class);\r\n\r\n            if (cvUbicOrigID > 0){\r\n                txtUbicOrigen.setText(String.valueOf(cvUbicOrigID));\r\n                validaOrigen();\r\n            }else{\r\n                txtUbicOrigen.setText(\"\");\r\n                progress.cancel();\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processProdEstado(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo el estado del producto\");\r\n            progress.show();\r\n\r\n            gProdEstado = xobj.getresult(clsBeProducto_estado.class,\"Get_Single_By_IdEstado\");\r\n\r\n            if (gProdEstado != null){\r\n                txtUbicDestino.setText(gProdEstado.Nombre);\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processUbicOrigen(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Validando ubicación\");\r\n            progress.show();\r\n\r\n            bodega_ubicacion_origen = xobj.getresult(clsBeBodega_ubicacion.class,\"Get_Ubicacion_By_Codigo_Barra_And_IdBodega\");\r\n\r\n            if (bodega_ubicacion_origen == null)\r\n            {\r\n                txtUbicOrigen.selectAll();\r\n                txtUbicOrigen.requestFocus();\r\n                throw new Exception(\"Ubicación no válida\");\r\n            }else{\r\n                cvUbicOrigID=bodega_ubicacion_origen.getIdUbicacion();\r\n                lblUbicCompleta.setText(bodega_ubicacion_origen.getDescripcion());\r\n            }\r\n\r\n            if (validarDatos){\r\n\r\n                datosCorrectos=true;\r\n\r\n                if (cvUbicOrigID == 0) {\r\n                    msgbox(\"Ubicación origen no válida\");\r\n                    txtUbicOrigen.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if (cvProdID == 0) {\r\n                    msgbox(\"Producto no válido\");\r\n                    txtCodigoPrd.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if (vCantidadDisponible == 0) {\r\n                    msgbox(\"Cantidad disponible es 0, no se puede realizar el movimiento\");\r\n                    txtCodigoPrd.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if (gl.modo_cambio==2) {\r\n                    if (cvEstDestino == 0){\r\n                        msgbox(\"Estado destino incorrecto\");\r\n                        cmbEstadoDestino.requestFocus();\r\n                        datosCorrectos = false;\r\n                    }\r\n                }\r\n\r\n                vCantidadAUbicar = Double.parseDouble(txtCantidad.getText().toString().replace(\",\",\"\"));\r\n                vCantidadDisponible = Double.parseDouble(lblCant.getText().toString().replace(\",\",\"\"));\r\n\r\n                if (vCantidadAUbicar<0) {\r\n                    mu.msgbox(\"La cantidad no puede ser negativa\");\r\n                    txtCantidad.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if (vCantidadAUbicar==0) {\r\n                    msgbox(\"La cantidad debe ser mayor que 0\");\r\n                    txtCantidad.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if (vCantidadAUbicar> vCantidadDisponible) {\r\n                    msgbox(\"Cantidad incorrecta\") ;\r\n                    txtCantidad.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if ((cvUbicOrigID == cvUbicDestID) && (gl.modo_cambio ==1)){\r\n                    msgbox(\"La ubicación de destino coincide con la de origen\");\r\n                    txtUbicDestino.requestFocus();\r\n                    datosCorrectos = false;\r\n                }\r\n\r\n                if (!datosCorrectos) return;\r\n\r\n                progress.cancel();\r\n                msgAskAplicar((gl.modo_cambio ==1? \"Mover producto a ubicación: \" + bodega_ubicacion_destino.Descripcion: \"Aplicar cambio de estado?\"));\r\n\r\n            }else{\r\n                progress.cancel();\r\n                txtLicPlate.requestFocus();\r\n                txtLicPlate.selectAll();\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n    }\r\n\r\n    private void processUbicDestino(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Validando ubicación\");\r\n            progress.show();\r\n\r\n            bodega_ubicacion_destino = xobj.getresult(clsBeBodega_ubicacion.class,\"Get_Ubicacion_By_Codigo_Barra_And_IdBodega\");\r\n\r\n            if (bodega_ubicacion_destino == null){\r\n                vProcesar = false;\r\n                txtUbicDestino.selectAll();\r\n                txtUbicDestino.requestFocus();\r\n                throw new Exception(\"Ubicación destino incorrecta\");\r\n            }else{\r\n                cvUbicDestID=bodega_ubicacion_destino.getIdUbicacion();\r\n                lblUbicCompDestino.setText(bodega_ubicacion_destino.getDescripcion());\r\n\r\n                if(gl.modo_cambio==2 && !vProcesar){\r\n                    progress.cancel();\r\n                    cmbEstadoDestino.requestFocus();\r\n                }else{\r\n                    datosOk();\r\n                }\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processUbicDestinoSug(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo descripción de la ubicación destino sugerida\");\r\n            progress.show();\r\n\r\n            bodega_ubicacion_destino = xobj.getresult(clsBeBodega_ubicacion.class,\"Get_Ubicacion_By_Codigo_Barra_And_IdBodega\");\r\n\r\n            if (bodega_ubicacion_destino == null){\r\n                throw new Exception(\"Ubicación destino sugerida incorrecta\");\r\n            }else{\r\n                cvUbicDestID=bodega_ubicacion_destino.getIdUbicacion();\r\n                lblUbicCompDestino.setText(bodega_ubicacion_destino.getDescripcion());\r\n            }\r\n\r\n            txtCantidad.requestFocus();\r\n            progress.cancel();\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processProducto(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Cargando datos del producto\");\r\n            progress.show();\r\n\r\n            BeProductoUbicacion = xobj.getresult(clsBeProducto.class,\"Get_BeProducto_By_Codigo_For_HH\");\r\n\r\n            if (BeProductoUbicacion != null){\r\n                IdProductoUbicacion=BeProductoUbicacion.getIdProducto();\r\n\r\n                lblDescProducto.setTextColor(Color.BLUE);\r\n                cvProd = BeProductoUbicacion;\r\n                cvProdID = BeProductoUbicacion.IdProducto;\r\n                lblDescProducto.setText (BeProductoUbicacion.Nombre);\r\n                cvPropID = BeProductoUbicacion.IdPropietario;\r\n                cvUMBID = BeProductoUbicacion.IdUnidadMedidaBasica;\r\n\r\n                //Llama al método del WS Get_Estados_By_IdPropietario\r\n                execws(10);\r\n\r\n            }else{\r\n                inicializaTareaSinUbic();\r\n                lblDescProducto.setTextColor(Color.RED);\r\n                cvProdID = 0;\r\n                lblDescProducto.setText (\"Código no válido\");\r\n                throw new Exception(\"Producto no existe\");\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processStockLP(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Validando ubicación\");\r\n            progress.show();\r\n\r\n            productoList = xobj.getresult(clsBeProductoList.class,\"Get_Stock_By_Lic_Plate\");\r\n\r\n            if (escaneoPallet && productoList == null) {\r\n                lblDescProducto.setTextColor(Color.RED);\r\n                cvProdID = 0;\r\n                lblDescProducto.setText (\"Código de LP no válido\");\r\n                progress.cancel();\r\n            }else{\r\n\r\n                if (escaneoPallet && productoList != null){\r\n\r\n                    List AuxList = stream(productoList.items)\r\n                            .where(c->c.Stock.IdUbicacion==cvUbicOrigID)\r\n                            .toList();\r\n\r\n                    if (AuxList.size() == 0){\r\n                        msgbox(\"El pallet no se encuentra en la ubicación: \" + cvUbicOrigID);\r\n                        lblDescProducto.setTextColor(Color.RED);\r\n                        cvProdID = 0;\r\n                        lblDescProducto.setText (\"LP N.E.E.U\");\r\n                        progress.cancel();\r\n                    }else{\r\n\r\n                        productoList = new clsBeProductoList();\r\n                        productoList.items = AuxList;\r\n\r\n                        BeProductoUbicacion = productoList.items.get(0);\r\n                        BeStockPallet = productoList.items.get(0).Stock;\r\n\r\n                        lblDescProducto.setTextColor(Color.BLUE);\r\n                        lblDescProducto.setText(BeProductoUbicacion.getNombre());\r\n\r\n                        cvProd = BeProductoUbicacion;\r\n                        cvProdID = BeProductoUbicacion.getIdProducto();\r\n                        cvPropID = BeProductoUbicacion.getIdPropietario();\r\n                        cvUMBID = BeProductoUbicacion.getIdUnidadMedidaBasica();\r\n\r\n                        cvLote = BeStockPallet.Lote;\r\n                        cvPresID = BeStockPallet.IdPresentacion;\r\n                        cvEstOrigen = BeStockPallet.IdProductoEstado;\r\n                        cvVence = app.strFecha(BeStockPallet.Fecha_Vence);\r\n\r\n                        //Llama al método del WS Get_Estados_By_IdPropietario\r\n                        execws(10);\r\n                    }\r\n                }else{\r\n                    //Llama a este método del WS Get_BeProducto_By_Codigo_For_HH\r\n                    execws(3);\r\n                }\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processProductoUbicLP(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Cargando stock de producto con License Plate\");\r\n            progress.show();\r\n\r\n            stockResList = xobj.getresult(clsBeVW_stock_resList.class,\"Get_Productos_By_IdUbicacion_And_LicPlate\");\r\n\r\n            if (stockResList != null){\r\n                LlenaPresentaciones();\r\n            }else{\r\n                msgbox(\"No hay existencias disponibles de este producto en esta ubicación o las existentes están reservadas\");\r\n                inicializaTarea(false);\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processProductoUbic(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Cargando producto en esta ubicación\");\r\n            progress.show();\r\n\r\n            stockResList = xobj.getresult(clsBeVW_stock_resList.class,\"Get_Productos_By_IdUbicacion\");\r\n\r\n            if (stockResList != null){\r\n                LlenaPresentaciones();\r\n            }else{\r\n                msgbox(\"El producto no existe en la ubicación origen\");\r\n                txtCodigoPrd.requestFocus();\r\n                txtCodigoPrd.selectAll();\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processNuevoCorrelativoLP(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Obteniendo nuevo correlativo de License Plate\");\r\n            progress.show();\r\n\r\n            vNuevoPalletId = (String) xobj.getSingle(\"Get_Nuevo_Correlativo_LicensePlateResult\",String.class);\r\n\r\n            if (!vNuevoPalletId.isEmpty()){\r\n                //Set_Nuevo_Pallet_Id\r\n                execws(9);\r\n            }else{\r\n                msgbox(\"Ocurrió un error obteniendo el nuevo correlativo License Plate\");\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private void processIdNuevoPallet(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Colocando nuevo pallet\");\r\n            progress.show();\r\n\r\n            boolean result = (Boolean) xobj.getSingle(\"Set_Nuevo_Pallet_IdResult\",boolean.class);\r\n\r\n            progress.cancel();\r\n\r\n            if (result){\r\n                msgAskImpresoraLista(\"¿La impresora está lista y conectada?\");\r\n            }else{\r\n                progress.cancel();\r\n                msgbox(\"Ocurrió un error creando el Id del nuevo pallet\");\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processEstadosProp(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Validando ubicación\");\r\n            progress.show();\r\n\r\n            productoEstadoDestinoList = xobj.getresult(clsBeProducto_estadoList.class,\"Get_Estados_By_IdPropietario\");\r\n\r\n            if (productoEstadoDestinoList != null){\r\n                LlenaEstadoDestino(cvPropID);\r\n            }else{\r\n\r\n                if (escaneoPallet && productoList != null) {\r\n                    //LLama este procedimiento del WS Get_Productos_By_IdUbicacion_And_LicPlate\r\n                    execws(6);\r\n                }else{\r\n                    //LLama este procedimiento del WS Get_Productos_By_IdUbicacion\r\n                    execws(7);\r\n                }\r\n\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processCambio(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Procesando cambio de ubicación\");\r\n            progress.show();\r\n\r\n            boolean actualizar = (Boolean) xobj.getSingle(\"Actualizar_Trans_Ubic_HH_DetResult\",boolean.class);\r\n\r\n            if (actualizar){\r\n                msgAskExit(String.format(\"Cambio de %s aplicado\",(gl.modo_cambio==1?\"ubicación\":\"estado\")));\r\n            }else{\r\n                msgbox(\"Ocurrió un error al procesar el cambio de ubicación\");\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n        progress.cancel();\r\n\r\n    }\r\n\r\n    private void processCambioUbicEstHH(){\r\n        try{\r\n\r\n            boolean resultado = false;\r\n\r\n            progress.setMessage(\"Procesando cambio\");\r\n            progress.show();\r\n\r\n            resultado = (Boolean) xobj.getSingle(\"Aplica_Cambio_Estado_Ubic_HHResult\",boolean.class);\r\n            vIdStockNuevo = (Integer) xobj.getSingle(\"pIdStockNuevo\",int.class);\r\n            vIdMovimientoNuevo= (Integer) xobj.getSingle(\"pIdMovimientoNuevo\",int.class);\r\n\r\n            if( resultado){\r\n\r\n                txtCodigoPrd.setText(gl.gCProdAnterior);\r\n                txtUbicOrigen.setText(gl.gCUbicAnterior);\r\n\r\n                if (cmbEstadoOrigen.getAdapter()!=null  && cmbEstadoOrigen.getAdapter().getCount()>0){\r\n                    gl.gCEstadoAnterior = Integer.valueOf( cmbEstadoOrigen.getSelectedItem().toString().split(\" - \")[0]);\r\n                    gl.gCNomEstadoAnterior = cmbEstadoOrigen.getSelectedItem().toString().split(\" - \")[1];\r\n                }else{\r\n                    gl.gCEstadoAnterior = -1;\r\n                    gl.gCNomEstadoAnterior = \"\";\r\n                }\r\n\r\n                if (cmbVence.getAdapter()!=null && cmbVence.getAdapter().getCount()>0){\r\n                    gl.gCFechaAnterior = cmbVence.getSelectedItem().toString();\r\n                }else{\r\n                    gl.gCFechaAnterior=\"01/01/1900\";\r\n                }\r\n\r\n                if (cmbLote.getAdapter()!=null  && cmbLote.getAdapter().getCount()>0){\r\n                    gl.gCLoteAnterior = cmbLote.getSelectedItem().toString();\r\n                }else{\r\n                    gl.gCLoteAnterior = \"\";\r\n                }\r\n\r\n                if (cmbPresentacion.getAdapter()!=null && cmbPresentacion.getAdapter().getCount()>0){\r\n                    gl.gCPresAnterior = Integer.valueOf( cmbPresentacion.getSelectedItem().toString().split(\" - \")[0].toString());\r\n                    if (cmbPresentacion.getSelectedItem().toString().split(\" - \").length>1){\r\n                        gl.gCNomPresAnterior = cmbPresentacion.getSelectedItem().toString().split(\" - \")[1];\r\n                    }\r\n                }else{\r\n                    gl.gCPresAnterior = -1;\r\n                    gl.gCNomPresAnterior = \"\";\r\n                }\r\n\r\n                inicializaTarea(true);\r\n\r\n                progress.cancel();\r\n                msgAsk(gl.modo_cambio ==1 ? \"Cambio de ubicación aplicado\": \"Cambio de estado aplicado\");\r\n\r\n            }\r\n\r\n        }catch (Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processUbicacionDestSugerida(){\r\n        try{\r\n\r\n            progress.setMessage(\"Procesando ubidacion destino sugerida\");\r\n            progress.show();\r\n\r\n            lUbicSug = xobj.getresult(USUbicStrucStage5List.class,\"ml_get_ubicacion_sugerida\");\r\n\r\n            if (lUbicSug != null){\r\n                if(lUbicSug.items.size()>0){\r\n\r\n                    txtUbicDestino.setText(String.valueOf(lUbicSug.items.get(0).lUbicacionesVacias.items.get(0).IdUbicacion));\r\n                    validaDestinoSug();\r\n\r\n                }\r\n\r\n            }else{\r\n                toast(\"No existen ubicaciones sugeridas\");\r\n                progress.cancel();\r\n            }\r\n\r\n        }catch (Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processStockLP_AndCodigo(){\r\n\r\n        try {\r\n\r\n            progress.setMessage(\"Validando ubicación\");\r\n            progress.show();\r\n\r\n            productoList = xobj.getresult(clsBeProductoList.class,\"Get_Stock_By_Lic_Plate_And_Codigo\");\r\n\r\n            if (escaneoPallet && productoList == null) {\r\n                lblDescProducto.setTextColor(Color.RED);\r\n                cvProdID = 0;\r\n                lblDescProducto.setText (\"Código de LP no válido\");\r\n                progress.cancel();\r\n            }else{\r\n\r\n                if (escaneoPallet && productoList != null){\r\n\r\n                    List AuxList = stream(productoList.items)\r\n                            .where(c->c.Stock.IdUbicacion==cvUbicOrigID)\r\n                            .toList();\r\n\r\n                    if (AuxList.size() == 0){\r\n                        msgbox(\"El pallet no se encuentra en la ubicación: \" + cvUbicOrigID);\r\n                        lblDescProducto.setTextColor(Color.RED);\r\n                        cvProdID = 0;\r\n                        lblDescProducto.setText (\"LP N.E.E.U\");\r\n                        progress.cancel();\r\n                    }else{\r\n\r\n                        productoList = new clsBeProductoList();\r\n                        productoList.items = AuxList;\r\n\r\n                        BeProductoUbicacion = productoList.items.get(0);\r\n                        BeStockPallet = productoList.items.get(0).Stock;\r\n\r\n                        lblDescProducto.setTextColor(Color.BLUE);\r\n                        lblDescProducto.setText(BeProductoUbicacion.getNombre());\r\n\r\n                        cvProd = BeProductoUbicacion;\r\n                        cvProdID = BeProductoUbicacion.getIdProducto();\r\n                        cvPropID = BeProductoUbicacion.getIdPropietario();\r\n                        cvUMBID = BeProductoUbicacion.getIdUnidadMedidaBasica();\r\n\r\n                        cvLote = BeStockPallet.Lote;\r\n                        cvPresID = BeStockPallet.IdPresentacion;\r\n                        cvEstOrigen = BeStockPallet.IdProductoEstado;\r\n                        cvVence = app.strFecha(BeStockPallet.Fecha_Vence);\r\n\r\n                        //Llama al método del WS Get_Estados_By_IdPropietario\r\n                        execws(10);\r\n                    }\r\n                }else{\r\n                    //Llama a este método del WS Get_BeProducto_By_Codigo_For_HH\r\n                    execws(3);\r\n                }\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            progress.cancel();\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    private void processExisteLp(){\r\n\r\n        try{\r\n\r\n            Existe_Lp = xobj.getresult(Boolean.class,\"Existe_Lp\");\r\n\r\n            if (Existe_Lp){\r\n                progress.cancel();\r\n                txtCodigoPrd.requestFocus();\r\n            }else{\r\n                progress.cancel();\r\n                mu.msgbox(\"Lp no existe\");\r\n                txtLicPlate.selectAll();\r\n                txtLicPlate.requestFocus();\r\n            }\r\n\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processExisteLp:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processPalletNoEstandar(){\r\n\r\n        try{\r\n\r\n            EsPalletNoEstandar = xobj.getresult(Boolean.class,\"Es_Pallet_No_Estandar\");\r\n\r\n            if (EsPalletNoEstandar){\r\n                execws(20);\r\n            }else{\r\n                validaDestino();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processPalletNoEstandar:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void processTienePosiciones(){\r\n\r\n        try{\r\n\r\n            TienePosiciones = xobj.getresult(Boolean.class,\"Tiene_Posiciones\");\r\n\r\n            if (!TienePosiciones){\r\n                msgAskIngresePosiciones();\r\n            }else{\r\n                validaDestino();\r\n            }\r\n\r\n        }catch (Exception e){\r\n            mu.msgbox(\"processPalletNoEstandar:\"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgAskIngresePosiciones() {\r\n\r\n        try{\r\n\r\n            final AlertDialog.Builder alert = new AlertDialog.Builder(this);\r\n\r\n            alert.setTitle(\"Ingrese número de posiciones\");\r\n\r\n            vPosiciones = 0;\r\n\r\n            final LinearLayout layout   = new LinearLayout(this);\r\n            layout.setOrientation(LinearLayout.VERTICAL);\r\n\r\n            if(txtPosiciones.getParent()!= null){\r\n                ((ViewGroup) txtPosiciones.getParent()).removeView(txtPosiciones);\r\n            }\r\n\r\n            txtPosiciones.setText(\"\");\r\n            txtPosiciones.requestFocus();\r\n\r\n            layout.addView(txtPosiciones);\r\n\r\n            alert.setView(layout);\r\n\r\n            showkeyb();\r\n            alert.setCancelable(false);\r\n            alert.create();\r\n\r\n            alert.setPositiveButton(\"Aceptar\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int whichButton) {\r\n                    layout.removeAllViews();\r\n\r\n                    vPosiciones=Integer.valueOf(txtPosiciones.getText().toString());\r\n\r\n                    if (vPosiciones==0){\r\n                        layout.removeAllViews();\r\n                        msgAskIngresePosiciones();\r\n                    }else{\r\n                        validaDestino();\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            alert.setNegativeButton(\"Cancelar\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int whichButton) {\r\n                    layout.removeAllViews();\r\n                }\r\n            });\r\n\r\n            alert.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void inicializaTarea(boolean finalizar){\r\n        try{\r\n\r\n            progress.setMessage(\"Inicializando tarea\");\r\n            progress.show();\r\n\r\n            cvUbicOrigID = 0;\r\n            txtCodigoPrd.setText(\"\");\r\n            txtLicPlate.setText(\"\");\r\n            lblDescProducto.setText(\"\");\r\n            cmbPresentacion.setAdapter(null);\r\n            cmbLote.setAdapter(null);\r\n            cmbVence.setAdapter(null);\r\n            cmbEstadoOrigen.setAdapter(null);\r\n            cmbEstadoDestino.setAdapter(null);\r\n\r\n            cvProdID = 0;\r\n            cvPresID = 0;\r\n            cvLote  = \"\";\r\n            cvVence = \"\";\r\n            cvUbicDestID = 0;\r\n            cvUbicOrigID = 0;\r\n            cvEstDestino = 0;\r\n            cvEstOrigen = 0;\r\n            vCantidadAUbicar = 0;\r\n            vCantidadDisponible = 0;\r\n\r\n            lblUbicCompleta.setText(\"\");\r\n\r\n            lblCant.setText(\"\");\r\n            txtUbicDestino.setText(\"\");\r\n            lblUbicCompDestino.setText(\"\");\r\n            txtCantidad.setText(\"\");\r\n            txtPeso.setText(\"\");\r\n            txtCodigoPrd.setText(\"\");\r\n\r\n            cmbPresentacion.setEnabled(false);\r\n            cmbLote.setEnabled(true);\r\n            cmbVence.setEnabled(true);\r\n            cmbEstadoDestino.setEnabled(true);\r\n\r\n            txtUbicDestino.setEnabled(true);\r\n            txtCantidad.setEnabled(true);\r\n            txtPeso.setEnabled(true);\r\n            txtCodigoPrd.setEnabled(true);\r\n            txtLicPlate.setEnabled(true);\r\n\r\n            validarDatos = false;\r\n            vProcesar = false;\r\n\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n\r\n            if(gl.modo_cambio==1 && finalizar){\r\n                execws(1);\r\n            }else{\r\n                txtUbicOrigen.requestFocus();\r\n            }\r\n\r\n        }catch (Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void inicializaTareaSinUbic(){\r\n        try{\r\n            progress.setMessage(\"Inicializando tarea\");\r\n            progress.show();\r\n\r\n            txtCodigoPrd.setText(\"\");\r\n            txtLicPlate.setText(\"\");\r\n            lblDescProducto.setText(\"\");\r\n            cmbPresentacion.setAdapter(null);\r\n            cmbLote.setAdapter(null);\r\n            cmbVence.setAdapter(null);\r\n            cmbEstadoOrigen.setAdapter(null);\r\n            cmbEstadoDestino.setAdapter(null);\r\n\r\n            cvProdID = 0;\r\n            cvPresID = 0;\r\n            cvLote  = \"\";\r\n            cvVence = \"\";\r\n            cvUbicDestID = 0;\r\n            cvUbicOrigID = 0;\r\n            cvEstDestino = 0;\r\n            cvEstOrigen = 0;\r\n            vCantidadAUbicar = 0;\r\n            vCantidadDisponible = 0;\r\n\r\n            lblCant.setText(\"\");\r\n            txtUbicDestino.setText(\"\");\r\n            txtCantidad.setText(\"\");\r\n            txtPeso.setText(\"\");\r\n            txtCodigoPrd.setText(\"\");\r\n\r\n            cmbPresentacion.setEnabled(false);\r\n            cmbLote.setEnabled(true);\r\n            cmbVence.setEnabled(true);\r\n            cmbEstadoDestino.setEnabled(true);\r\n\r\n            txtUbicDestino.setEnabled(true);\r\n            txtCantidad.setEnabled(true);\r\n            txtPeso.setEnabled(true);\r\n            txtCodigoPrd.setEnabled(true);\r\n            txtLicPlate.setEnabled(true);\r\n\r\n            validarDatos = false;\r\n            vProcesar = false;\r\n\r\n            txtUbicOrigen.requestFocus();\r\n\r\n        }catch (Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            msgbox(new Object() {}.getClass().getEnclosingMethod().getName() + \" . \" + ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgAskExit(String msg) {\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.cambioubic);\r\n\r\n            dialog.setNeutralButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    frm_cambio_ubicacion_ciega.super.finish();\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void msgAskExplosionar(String msg){\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.cambioubic);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    Es_Explosion = true;\r\n                    msgAskImprimirEtiqueta(\"Imprimir etiqueta\");\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which)\r\n                {\r\n                    Es_Explosion = false;\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n    }\r\n\r\n    private void msgAskImprimirEtiqueta(String msg){\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.cambioubic);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    //Get_Nuevo_Correlativo_LicensePlate\r\n                     execws(8);\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which){}\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n    }\r\n\r\n    private void msgAskImpresoraLista(String msg){\r\n        try{\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage( msg);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setIcon(R.drawable.cambioubic);\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    //Imprime la etiqueta\r\n                    /*\r\n                  ZPLString As String = String.Format( _\r\n                                                    \"^XA \" & _\r\n                                                    \"^MMT \" & _\r\n                                                    \"^PW700 \" & _\r\n                                                    \"^LL0406 \" & _\r\n                                                    \"^LS0 \" & _\r\n                                                    \"^FT171,61^A0I,25,14^FH\\^FD{0}^FS \" & _\r\n                                                    \"^FT550,61^A0I,25,14^FH\\^FD{1}^FS \" & _\r\n                                                    \"^FT670,306^A0I,25,14^FH\\^FD{2}^FS \" & _\r\n                                                    \"^FT292,61^A0I,25,24^FH\\^FDBodega:^FS \" & _\r\n                                                    \"^FT670,61^A0I,25,24^FH\\^FDEmpresa:^FS \" & _\r\n                                                    \"^FT670,367^A0I,25,24^FH\\^FDTOMIMS, WMS.  Product Barcode^FS \" & _\r\n                                                    \"^FO2,340^GB670,0,14^FS \" & _\r\n                                                    \"^BY3,3,160^FT670,131^BCI,,Y,N \" & _\r\n                                                    \"^FD{3}^FS \" & _\r\n                                                    \"^PQ1,0,1,Y \" & _\r\n                                                    \"^XZ\", gCodigoBodega, _\r\n                                                    gNomEmpresa, _\r\n                                                    BeStockPallet.Codigo_Producto + \" - \" + BeStockPallet.Nombre_Producto, _\r\n                                                            ((vNuevoPalletId <> \"\", \"$\" + vNuevoPalletId, BeStockPallet.Codigo_Producto))\r\n\r\n                                            frmPrintBarraPallet As New frmPrint\r\n                                            frmPrintBarraPallet.ZplToPrint = ZPLString\r\n                                            frmPrintBarraPallet.ShowDialog()\r\n         */\r\n                }\r\n            });\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which){}\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void validaOrigen(){\r\n\r\n        try{\r\n\r\n            if (txtUbicOrigen.getText().toString() !=\"\"){\r\n\r\n                bodega_ubicacion_origen = new clsBeBodega_ubicacion();\r\n\r\n                //Llama al método del WS Get_Ubicacion_By_Codigo_Barra_And_IdBodega para validar ubicacion origen\r\n                execws(11);\r\n\r\n            }else{\r\n                lblUbicCompleta.setText(\"\");\r\n            }\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            mu.msgbox( e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void validaDestino(){\r\n\r\n        try{\r\n\r\n            if (txtUbicDestino.getText().toString() !=\"\"){\r\n\r\n                bodega_ubicacion_destino = new clsBeBodega_ubicacion();\r\n\r\n                //Llama al método del WS Get_Ubicacion_By_Codigo_Barra_And_IdBodega para validar ubicacion destino\r\n                execws(12);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            mu.msgbox( e.getMessage());\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n    }\r\n\r\n    private void validaDestinoSug(){\r\n\r\n        try{\r\n\r\n            if (txtUbicDestino.getText().toString() !=\"\"){\r\n\r\n                bodega_ubicacion_destino = new clsBeBodega_ubicacion();\r\n\r\n                //Llama al método del WS Get_Ubicacion_By_Codigo_Barra_And_IdBodega para validar ubicacion destino sugerida\r\n                execws(16);\r\n            }\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            mu.msgbox( e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void datosOk(){\r\n\r\n        try{\r\n\r\n            boolean continua=true;\r\n            validarDatos = true;\r\n\r\n            execws(11);\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            mu.msgbox( e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void msgAsk(String msg) {\r\n\r\n        try{\r\n\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(msg);\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setNeutralButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n\r\n                    if( escaneoPallet && productoList != null){\r\n                        if( BeStockPallet.CantidadPresentacion != vCantidadAUbicar){\r\n                            msgAskExplosionar(\"La ubicación parcial de pallet requiere explosionar el material, ¿generar nuevo palletId y continuar?\");\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void msgAskAplicar(String msg) {\r\n\r\n        try{\r\n\r\n            AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n\r\n            dialog.setCancelable(false);\r\n\r\n            dialog.setTitle(R.string.app_name);\r\n            dialog.setMessage(\"¿\" + msg + \"?\");\r\n            dialog.setIcon(R.drawable.ic_quest);\r\n\r\n            dialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which)\r\n                {btnGuardarCiega.setVisibility(View.VISIBLE); }\r\n            });\r\n\r\n            dialog.setPositiveButton(\"Si\", new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    //Llamar método para aplicar el cambio de estado\r\n                    aplicarCambio();\r\n\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n    }\r\n\r\n    private void aplicarCambio() {\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Aplicando el cambio\");\r\n            progress.show();\r\n\r\n            if (!Crear_Movimiento_Ubicacion_ND(gl.modo_cambio == 1? false: true)){\r\n                return;\r\n            }\r\n\r\n            vStockRes.IdProductoBodega = cvProd.IdProductoBodega;\r\n            vStockRes.IdUbicacion = cvUbicOrigID;\r\n\r\n            if( BeProductoUbicacion.Control_lote){\r\n                vStockRes.Lote = cmbLote.getSelectedItem().toString();\r\n            }else{\r\n                vStockRes.Lote = \"\";\r\n            }\r\n\r\n            if( BeProductoUbicacion.Control_vencimiento){\r\n                vStockRes.Fecha_Vence = app.strFechaXMLCombo(cmbVence.getSelectedItem().toString());\r\n            }else{\r\n                vStockRes.Fecha_Vence = \"01/01/1900\";\r\n            }\r\n\r\n            vStockRes.CantidadUmBas = vCantidadAUbicar;\r\n            vStockRes.Peso = cvStockItem.Peso;\r\n            vStockRes.IdPresentacion =cvPresID;\r\n            vStockRes.IdProductoEstado = cvEstOrigen;\r\n            vStockRes.Fecha_ingreso = app.strFechaXML(du.getFechaActual());\r\n            vStockRes.ValorFecha = app.strFechaXML(du.getFechaActual());\r\n            vStockRes.Pallet_No_Estandar=EsPalletNoEstandar;\r\n\r\n            if( escaneoPallet && productoList != null){\r\n\r\n                vStockRes.Lic_plate = BeStockPallet.Lic_plate;\r\n\r\n                if( BeStockPallet.Factor > 0){\r\n                    vStockRes.CantidadUmBas = vCantidadAUbicar * BeStockPallet.Factor;\r\n                }\r\n\r\n            }else if ( cvPresID != 0){\r\n                vStockRes.CantidadUmBas = vCantidadAUbicar * vFactorPres;\r\n            }\r\n\r\n            //Aplica_Cambio_Estado_Ubic_HH(gMovimientoDet, vStockRes, vIdStockNuevo, vIdMovimientoNuevo);\r\n            execws(14);\r\n\r\n        }catch (Exception e){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            mu.msgbox( e.getMessage());\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n        }\r\n    }\r\n\r\n    public void AplicarCambio(View view){\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Aplicando cambio de ubicacion\");\r\n            progress.show();\r\n\r\n            btnGuardarCiega.setVisibility(View.INVISIBLE);\r\n\r\n            vProcesar = true;\r\n\r\n            pStock = new clsBeStock();\r\n            pStock.IdUbicacion = cvUbicOrigID;\r\n            pStock.IdProductoBodega = BeProductoUbicacion.getIdProductoBodega();\r\n            pStock.IdProductoEstado = cvEstOrigen;\r\n            pStock.IdPresentacion = cvPresID;\r\n            pStock.IdUnidadMedida = BeProductoUbicacion.IdUnidadMedidaBasica;\r\n            pStock.Fecha_vence = du.convierteFechaDiagonal(cvVence);\r\n            pStock.Lote = cvLote;\r\n\r\n            execws(19);\r\n\r\n        }catch (Exception e){\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),e.getMessage(),\"\");\r\n            mu.msgbox( e.getMessage());\r\n        }finally {\r\n            progress.cancel();\r\n        }\r\n    }\r\n\r\n    private boolean Crear_Movimiento_Ubicacion_ND(boolean EsCambioEstado) {\r\n\r\n        try{\r\n\r\n            progress.setMessage(\"Creando el movimiento\");\r\n\r\n            // The preferred idiom for iterating over collections and arrays\r\n            for (clsBeVW_stock_res st : stockResList.items) {\r\n\r\n                if(escaneoPallet &&  productoList != null ) {\r\n                    if (st.IdStock == cvStockID && st.Lic_plate.equals(BeStockPallet.Lic_plate)) {\r\n                        cvStockItem = st;\r\n                        break;}\r\n                }else{\r\n                    if(BeProductoUbicacion.Control_lote && BeProductoUbicacion.Control_vencimiento ) {\r\n                        if (st.IdStock == cvStockID && st.Lote.equals(cvLote) && app.strFecha(st.Fecha_Vence).equals(cvVence) &&\r\n                                st.IdPresentacion == cvPresID && st.IdProductoEstado == cvEstOrigen && st.IdUnidadMedida == cvUMBID) {\r\n                            cvStockItem = st;\r\n                            break;\r\n                        }\r\n                    }else if( !BeProductoUbicacion.Control_lote && BeProductoUbicacion.Control_vencimiento ) {\r\n                        if (st.IdStock == cvStockID && app.strFecha(st.Fecha_Vence).equals(cvVence) &&\r\n                                st.IdPresentacion == cvPresID && st.IdProductoEstado == cvEstOrigen) {\r\n                            cvStockItem = st;\r\n                            break;\r\n                        }\r\n                    }else if(BeProductoUbicacion.Control_lote &&  !BeProductoUbicacion.Control_vencimiento ) {\r\n                        if (st.IdStock == cvStockID && st.Lote.equals(cvLote) && st.IdPresentacion == cvPresID &&\r\n                                st.IdProductoEstado == cvEstOrigen && st.IdUnidadMedida == cvUMBID) {\r\n                            cvStockItem = st;\r\n                            break;\r\n                        }\r\n                    }else if(st.IdStock == cvStockID && st.IdPresentacion == cvPresID &&\r\n                            st.IdProductoEstado == cvEstOrigen && st.IdUnidadMedida == cvUMBID ){\r\n                        cvStockItem = st;\r\n                        break;}\r\n                }\r\n            }\r\n\r\n        }catch(Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            mu.msgbox( ex.getMessage());\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n            return false;\r\n        }\r\n\r\n        try{\r\n\r\n            gMovimientoDet = new clsBeTrans_movimientos();\r\n\r\n            gMovimientoDet.IdMovimiento = 0;\r\n            gMovimientoDet.IdEmpresa = gl.IdEmpresa;\r\n            gMovimientoDet.IdBodegaOrigen = gl.IdBodega;\r\n            gMovimientoDet.IdTransaccion = 1;\r\n            gMovimientoDet.IdPropietarioBodega = cvPropID;\r\n            gMovimientoDet.IdProductoBodega = cvProd.IdProductoBodega;\r\n            gMovimientoDet.IdUbicacionOrigen = cvUbicOrigID;\r\n            gMovimientoDet.IdUbicacionDestino = cvUbicDestID;\r\n\r\n            if(cmbPresentacion.getAdapter()!=null  && cmbPresentacion.getAdapter().getCount()>0){\r\n                gMovimientoDet.IdPresentacion = (Integer.valueOf( cmbPresentacion.getSelectedItem().toString().split(\" - \")[0].toString()) == -1? 0: Integer.valueOf( cmbPresentacion.getSelectedItem().toString().split(\" - \")[0].toString()));\r\n            }else{\r\n                gMovimientoDet.IdPresentacion = 0;\r\n            }\r\n            if(cmbEstadoOrigen.getAdapter()!=null && cmbEstadoOrigen.getAdapter().getCount()>0){\r\n                gMovimientoDet.IdEstadoOrigen = Integer.valueOf( cmbEstadoOrigen.getSelectedItem().toString().split(\" - \")[0].toString());\r\n            }else{\r\n                gMovimientoDet.IdEstadoOrigen = 0;\r\n            }\r\n\r\n            gMovimientoDet.IdEstadoDestino = cvEstDestino;\r\n\r\n            if(gl.modo_cambio == 1 ){\r\n                gMovimientoDet.IdEstadoDestino = gMovimientoDet.IdEstadoOrigen;}\r\n\r\n            gMovimientoDet.IdUnidadMedida = cvStockItem.IdUnidadMedida;\r\n\r\n            if(EsCambioEstado ) {\r\n                gMovimientoDet.IdTipoTarea = 3;\r\n            }else{\r\n                gMovimientoDet.IdTipoTarea = 2;\r\n            }\r\n\r\n            gMovimientoDet.IdBodegaDestino = gl.IdBodega;\r\n            gMovimientoDet.IdRecepcion = cvStockItem.IdRecepcionEnc;\r\n            gMovimientoDet.Cantidad = vCantidadAUbicar;\r\n            gMovimientoDet.Serie = cvStockItem.Serial;\r\n            gMovimientoDet.Peso = 0;\r\n\r\n            if(cmbLote.getAdapter()!=null  && cmbLote.getAdapter().getCount()>0){\r\n                gMovimientoDet.Lote = cmbLote.getSelectedItem().toString();\r\n            }else{\r\n                gMovimientoDet.Lote = \"\";\r\n            }\r\n\r\n            clsBeProducto bprod = new clsBeProducto();\r\n\r\n            bprod = BeProductoUbicacion;\r\n\r\n            if(bprod.Control_vencimiento ){\r\n                if(cmbVence.getAdapter()!=null && cmbVence.getAdapter().getCount()>0){\r\n                    gMovimientoDet.Fecha_vence = app.strFechaXMLCombo(cmbVence.getSelectedItem().toString());\r\n                }else{\r\n                    gMovimientoDet.Fecha_vence = app.strFechaXMLCombo(\"01/01/1900\");\r\n                }\r\n\r\n            }\r\n\r\n            gMovimientoDet.Fecha = app.strFechaXML(du.getFechaActual());\r\n\r\n            if(escaneoPallet &&  productoList != null ) {\r\n                gMovimientoDet.Barra_pallet = BeStockPallet.Lic_plate;\r\n            }else{\r\n                gMovimientoDet.Barra_pallet = \"\";\r\n            }\r\n\r\n            gMovimientoDet.Hora_ini =  app.strFechaXML(du.getFechaActual());\r\n            gMovimientoDet.Hora_fin =  app.strFechaXML(du.getFechaActual());\r\n            gMovimientoDet.Fecha_agr =  app.strFechaXML(du.getFechaActual());\r\n            gMovimientoDet.Usuario_agr = String.valueOf(gl.IdOperador);\r\n            gMovimientoDet.Cantidad_hist = gMovimientoDet.Cantidad;\r\n            gMovimientoDet.Peso_hist = gMovimientoDet.Peso;\r\n            gMovimientoDet.setIsNew(true);\r\n\r\n            return true;\r\n\r\n        }catch(Exception ex){\r\n            progress.cancel();\r\n            addlog(new Object(){}.getClass().getEnclosingMethod().getName(),ex.getMessage(),\"\");\r\n            mu.msgbox( ex.getMessage());\r\n            btnGuardarCiega.setVisibility(View.VISIBLE);\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    public void Regresar(View view){\r\n        finish();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/dts/tom/Transacciones/CambioUbicacion/frm_cambio_ubicacion_ciega.java	(revision a5622cca171a9b0fa8834e47aebef8f8b52dd59c)
+++ app/src/main/java/com/dts/tom/Transacciones/CambioUbicacion/frm_cambio_ubicacion_ciega.java	(date 1611347777013)
@@ -49,7 +49,7 @@
     private ProgressDialog progress;
 
     private EditText txtUbicOrigen, txtCodigoPrd, txtCantidad, txtUbicDestino,txtLicPlate, txtPosiciones, txtPeso;
-    private TextView lblUbicCompleta, lblDescProducto, lblLote, lblVence, lblEstadoDestino, lblCant,lblPesoEst,lblTituloForma,lblUbicCompDestino;
+    private TextView lblUbicCompleta, lblDescProducto, lblLote, lblVence, lblEstadoDestino, lblCant,lblPesoEst, lblPeso,lblTituloForma,lblUbicCompDestino;
     private Spinner cmbPresentacion, cmbLote, cmbVence, cmbEstadoOrigen, cmbEstadoDestino;
     private Button btnGuardarCiega;
 
@@ -159,6 +159,7 @@
             lblEstadoDestino = (TextView) findViewById(R.id.lblEstadoDestino);
             lblCant = (TextView) findViewById(R.id.lblCant);
             lblPesoEst = (TextView) findViewById(R.id.lblPesoEst);
+            lblPeso = (TextView) findViewById(R.id.lblPeso);
             lblTituloForma = (TextView) findViewById(R.id.lblTituloForma);
             lblUbicCompDestino = (TextView) findViewById(R.id.lblUbicCompDestino);
 
@@ -1576,6 +1577,16 @@
                 cvPropID = BeProductoUbicacion.IdPropietario;
                 cvUMBID = BeProductoUbicacion.IdUnidadMedidaBasica;
 
+                if (BeProductoUbicacion.getControl_peso()){
+                    txtPeso.setVisibility(View.VISIBLE);
+                    lblPeso.setVisibility(View.VISIBLE);
+                    lblPesoEst.setVisibility(View.VISIBLE);
+                }else{
+                    txtPeso.setVisibility(View.GONE);
+                    lblPeso.setVisibility(View.VISIBLE);
+                    lblPesoEst.setVisibility(View.VISIBLE);
+                }
+
                 //Llama al método del WS Get_Estados_By_IdPropietario
                 execws(10);
 
